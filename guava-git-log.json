[
  {
    "commitHash": "9c3790f091dec76f62fe701a6568982c84c0ac70",
    "parent": "7645ffc6611eb24563268e1732eb936e274b936b",
    "subject": "Internal change",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=Upgrades Gradle version to 7.6.2 PiperOrigin-RevId: 548821518 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Jul 2023 15:58:54 -0700"
  },
  {
    "commitHash": "7645ffc6611eb24563268e1732eb936e274b936b",
    "parent": "a9c2970e1cdff1e71a27a75866b083f3ae60d6f2",
    "subject": "Fix timestamp and comments.",
    "sanitized_subject_line": "Fix-timestamp-and-comments",
    "commit_notes": "",
    "body": "The timestamp is showing up in the generated Javadoc, so we might as well make it match the current year.  RELNOTES=n/a PiperOrigin-RevId: 548706743 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Jul 2023 09:01:41 -0700"
  },
  {
    "commitHash": "a9c2970e1cdff1e71a27a75866b083f3ae60d6f2",
    "parent": "934446b8cb77cb52c5ddcb8959fd619f4505b785",
    "subject": "Add an overview to our generated Javadoc.",
    "sanitized_subject_line": "Add-an-overview-to-our-generated-Javadoc",
    "commit_notes": "",
    "body": "And remove the end of an HTML closing tag that was never started in `EventBus.java`.  RELNOTES=n/a PiperOrigin-RevId: 548265592 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 14 Jul 2023 18:09:50 -0700"
  },
  {
    "commitHash": "934446b8cb77cb52c5ddcb8959fd619f4505b785",
    "parent": "30d17058d93e17b46c7bb6cf6ef843c91b39fb1d",
    "subject": "Update mainline `ImmutableSortedSet.construct` docs to contain the same warning as the backport.",
    "sanitized_subject_line": "Update-mainline-ImmutableSortedSet.construct-docs-to-contain-the-same-warning-as-the-backport",
    "commit_notes": "",
    "body": "I think the `k < contents.length` case became just as dangerous the `k == contents.length` case way back (maybe even from the beginning; I haven't looked), but we never updated this comment. (It was temporarily made more clearly dangerous (and documented) along with the backport copy in cl/150805495, but the mainline portion of that CL was subsequently rolled back.)  (The main danger would occur if a random caller were to mutate the array later. I could also imagine more subtle problems, like if our `Builder` were to try to reuse the array by appending to it: That would be bad because previously built sets could now retain references to the newly added items. It would also be fragile because that builder would still need to make a copy of the array before sorting it, since the sort might shift a new element over into one of the slots that stores the original set's elements. And there could still be other problems, or I could still be confused about all this....)  (This came up in cl/542316636, but I'm splitting it off.)  RELNOTES=n/a PiperOrigin-RevId: 548254479 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 14 Jul 2023 16:57:19 -0700"
  },
  {
    "commitHash": "30d17058d93e17b46c7bb6cf6ef843c91b39fb1d",
    "parent": "cd0069a68423e5f196a65c35e0765c5195f8e809",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 547829361 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 13 Jul 2023 09:50:06 -0700"
  },
  {
    "commitHash": "cd0069a68423e5f196a65c35e0765c5195f8e809",
    "parent": "3e3d90bf7b3be2c0d7d610bbf2c8e947dfdb16a3",
    "subject": "Make changes from cl/546032548 in the mainline, too.",
    "sanitized_subject_line": "Make-changes-from-cl-546032548-in-the-mainline-too",
    "commit_notes": "",
    "body": "`@AndroidIncompatible` has no effect there, but as usual, it's nice to reduce diffs between the two flavors.  RELNOTES=n/a PiperOrigin-RevId: 546904720 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Jul 2023 10:06:37 -0700"
  },
  {
    "commitHash": "3e3d90bf7b3be2c0d7d610bbf2c8e947dfdb16a3",
    "parent": "20deb05aa5235a96e16385604c99a5f8316eca4e",
    "subject": "Update tests for newer version of Android.",
    "sanitized_subject_line": "Update-tests-for-newer-version-of-Android",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 546307327 ",
    "author_name": "Andrew Sinclair",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 7 Jul 2023 09:50:33 -0700"
  },
  {
    "commitHash": "20deb05aa5235a96e16385604c99a5f8316eca4e",
    "parent": "74859ebe9b2ea79d32b1f3da04dbc494a51f9432",
    "subject": "Update docs for `@AndroidIncompatible`.",
    "sanitized_subject_line": "Update-docs-for-AndroidIncompatible",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 546290770 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 7 Jul 2023 08:40:13 -0700"
  },
  {
    "commitHash": "74859ebe9b2ea79d32b1f3da04dbc494a51f9432",
    "parent": "fa695a12ad865ab466dd61d0910dc989a2c3f22b",
    "subject": "Roll back J2KT `Map.merge` nullness annotations to the more flexible (if possibly less convenient) original version, updating Guava.",
    "sanitized_subject_line": "Roll-back-J2KT-Map.merge-nullness-annotations-to-the-more-flexible-if-possibly-less-convenient-original-version-updating-Guava",
    "commit_notes": "",
    "body": "This is another annotation from the [On Leveraging Tests to Infer Nullable Annotations](https://github.com/google/guava/issues/6510) data.  RELNOTES=n/a PiperOrigin-RevId: 546272042 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 7 Jul 2023 07:13:19 -0700"
  },
  {
    "commitHash": "fa695a12ad865ab466dd61d0910dc989a2c3f22b",
    "parent": "2a82a512942437150e29b7beac955e285559d89a",
    "subject": "Further tweaks to `package-info` for `collect`:",
    "sanitized_subject_line": "Further-tweaks-to-package-info-for-collect",
    "commit_notes": "",
    "body": "- Provide a one-sentence intro to lead into the sections. - Describe the immutable collections in full sentences. - Sort the static utility classes alphabetically. - Make one mention of \"collection\" plural.  RELNOTES=n/a PiperOrigin-RevId: 546010744 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Jul 2023 09:29:45 -0700"
  },
  {
    "commitHash": "2a82a512942437150e29b7beac955e285559d89a",
    "parent": "a0fa17a3622c03b38ef2656a9d9d4dc8f25fee74",
    "subject": "Don't mention `common.cache` in our short description of Guava.",
    "sanitized_subject_line": "Don-t-mention-common.cache-in-our-short-description-of-Guava",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 545785744 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jul 2023 14:26:16 -0700"
  },
  {
    "commitHash": "a0fa17a3622c03b38ef2656a9d9d4dc8f25fee74",
    "parent": "d6f1ecee5929e932afb6014fd6e5ccf7e11a3c33",
    "subject": "Pin dependencies used by Gradle-wrapper validation.",
    "sanitized_subject_line": "Pin-dependencies-used-by-Gradle-wrapper-validation",
    "commit_notes": "",
    "body": "Compare cl/519822561.  Fixes https://github.com/google/guava/security/code-scanning/19 and https://github.com/google/guava/security/code-scanning/20  RELNOTES=n/a PiperOrigin-RevId: 545779874 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jul 2023 14:10:47 -0700"
  },
  {
    "commitHash": "d6f1ecee5929e932afb6014fd6e5ccf7e11a3c33",
    "parent": "b41968f5f2346f9c4abd75712bb14c041ed4c0e7",
    "subject": "Post-pare for release 32.1.1.",
    "sanitized_subject_line": "Post-pare-for-release-32.1.1",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 545774067 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jul 2023 13:45:40 -0700"
  },
  {
    "commitHash": "b41968f5f2346f9c4abd75712bb14c041ed4c0e7",
    "parent": "31c478f79b3ed832a1adecaaa870710fcde6e99e",
    "subject": "Under J2CL, expose {ImmutableList,ImmutableSet}.{of,copyOf} for JavaScript usage.",
    "sanitized_subject_line": "Under-J2CL-expose-ImmutableList-ImmutableSet-.-of-copyOf-for-JavaScript-usage",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Under J2CL, exposed `ImmutableList` and `ImmutableSet` methods `copyOf` and `of` for JavaScript usage. PiperOrigin-RevId: 545771930 ",
    "author_name": "Goktug Gokdogan",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jul 2023 13:39:37 -0700"
  },
  {
    "commitHash": "31c478f79b3ed832a1adecaaa870710fcde6e99e",
    "parent": "18fee9a3c4a7e33393a4d332cf7e76828e15aecb",
    "subject": "Restrict permissions given to Gradle-wrapper validation.",
    "sanitized_subject_line": "Restrict-permissions-given-to-Gradle-wrapper-validation",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/security/code-scanning/22  Compare https://github.com/grpc/grpc-java/pull/8212  RELNOTES=n/a PiperOrigin-RevId: 545771352 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jul 2023 13:34:29 -0700"
  },
  {
    "commitHash": "18fee9a3c4a7e33393a4d332cf7e76828e15aecb",
    "parent": "3576cd44637cdb6f3a1846e7c91afe359bb1b6eb",
    "subject": "Modify our internal release script to run Gradle integration tests during Guava releases.",
    "sanitized_subject_line": "Modify-our-internal-release-script-to-run-Gradle-integration-tests-during-Guava-releases",
    "commit_notes": "",
    "body": "And make that process a little faster and more hygienic.  (I see no reason to expect us to [get the Gradle setup wrong](https://github.com/google/guava/issues/6612) again, but it would be quite embarrassing if we did....)  RELNOTES=n/a PiperOrigin-RevId: 544737095 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 30 Jun 2023 13:33:43 -0700"
  },
  {
    "commitHash": "3576cd44637cdb6f3a1846e7c91afe359bb1b6eb",
    "parent": "f2f4f864d720ad03a045c9b918fe06cb11a65832",
    "subject": "Delete the old release script, and update our internal release script to update the Gradle Metadata.",
    "sanitized_subject_line": "Delete-the-old-release-script-and-update-our-internal-release-script-to-update-the-Gradle-Metadata",
    "commit_notes": "",
    "body": "In cl/544108700, I'd changed the old release script but not the internal one.  Fixes https://github.com/google/guava/issues/6612  RELNOTES=Fixed the broken Gradle Metadata published with 32.1.0. PiperOrigin-RevId: 544654528 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 30 Jun 2023 07:52:05 -0700"
  },
  {
    "commitHash": "f2f4f864d720ad03a045c9b918fe06cb11a65832",
    "parent": "1dc5f8c4a814c766ef5124c4cf20939c9c59ee4c",
    "subject": "Suppress an `unusable-by-js` warning.",
    "sanitized_subject_line": "Suppress-an-unusable-by-js-warning",
    "commit_notes": "",
    "body": "And enable a setting that at least _shows_ us that warning (though it doesn't fail the build).  Fixes https://github.com/google/guava/issues/6602  RELNOTES=Suppressed [an `unusable-by-js` warning](https://github.com/google/guava/issues/6602) seen by users of `guava-gwt`. PiperOrigin-RevId: 544409394 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 29 Jun 2023 11:16:45 -0700"
  },
  {
    "commitHash": "1dc5f8c4a814c766ef5124c4cf20939c9c59ee4c",
    "parent": "ce78fc67cb8b72621e2d1154e8b8b343be97abd0",
    "subject": "Name the \"standard-jvm\" variants in Gradle Metadata \"jre.\"",
    "sanitized_subject_line": "Name-the-standard-jvm-variants-in-Gradle-Metadata-jre",
    "commit_notes": "",
    "body": "Small follow up to #3683  See: https://github.com/google/guava/issues/6604#issuecomment-1612630374  Fixes https://github.com/google/guava/pull/6605  RELNOTES=n/a PiperOrigin-RevId: 544384609 ",
    "author_name": "Jendrik Johannes",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 29 Jun 2023 09:52:43 -0700"
  },
  {
    "commitHash": "ce78fc67cb8b72621e2d1154e8b8b343be97abd0",
    "parent": "c5255f16a593a3815ead7b5b1ebaddb73eb0d800",
    "subject": "Publish Gradle Module Metadata with Variants.",
    "sanitized_subject_line": "Publish-Gradle-Module-Metadata-with-Variants",
    "commit_notes": "",
    "body": "To be conservative, this commit does not removes most annotation artifacts from Gradle's runtime classpath, only j2objc-annotations. The other artifacts contain at least some annotations with RUNTIME visibility (IIRC). (Even this change could theoretically affect users who assume that they can read CLASS-retention annotations (of which j2objc-annotations has some) from bytecode and find them in the runtime classpath. But that seems unlikely, especially for j2objc annotations.) We may consider being more aggressive in the future. For now, this particular commit addresses https://github.com/google/guava/issues/2824 for Gradle users just a tiny bit, and it helps with the problem that prompted https://github.com/google/guava/issues/6567.  Fixes https://github.com/google/guava/pull/3683  RELNOTES=Added [Gradle Module Metadata](https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html). If you use Gradle 6 or higher, Gradle can automatically intelligently resolve conflicts between `guava-android` and `guava-jre`, among [other benefits](https://github.com/google/guava/pull/3683). PiperOrigin-RevId: 544108700 ",
    "author_name": "Jendrik Johannes",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 28 Jun 2023 11:15:57 -0700"
  },
  {
    "commitHash": "c5255f16a593a3815ead7b5b1ebaddb73eb0d800",
    "parent": "f9a29d73b1c501e7fac40560376e10f619882326",
    "subject": "Discourage `Function.identity()`.",
    "sanitized_subject_line": "Discourage-Function.identity",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 543821637 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 27 Jun 2023 12:38:50 -0700"
  },
  {
    "commitHash": "f9a29d73b1c501e7fac40560376e10f619882326",
    "parent": "641d9e682be2468dc2afa74ded4af0ae7455f8d0",
    "subject": "Merge nested `try`-`catch` blocks.",
    "sanitized_subject_line": "Merge-nested-try-catch-blocks",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/6599  RELNOTES=n/a PiperOrigin-RevId: 543735962 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 27 Jun 2023 07:21:11 -0700"
  },
  {
    "commitHash": "641d9e682be2468dc2afa74ded4af0ae7455f8d0",
    "parent": "1df87a86cb7f327e5d80e478f7bcda1061c2e861",
    "subject": "Add some classes to `package-info` for `primitives` and `util.concurrent`.",
    "sanitized_subject_line": "Add-some-classes-to-package-info-for-primitives-and-util.concurrent",
    "commit_notes": "",
    "body": "(Also, mention `FluentFuture` inside `ListenableFuture`.)  I also re-ordered some sections. There is an argument that the `primitives` static utilities still belong above the value types, but it depends on how you weigh total usages for the group of classes vs. usage of individual popular classes, how you adjust for utilities available in newer versions of Java, and how much we want to be prescriptive in suggesting things. I put some weight on \"value types are a good thing.\"  RELNOTES=n/a PiperOrigin-RevId: 543537713 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 14:13:41 -0700"
  },
  {
    "commitHash": "1df87a86cb7f327e5d80e478f7bcda1061c2e861",
    "parent": "80c8d9ce4a8ba63f9704113399a001e456e83e73",
    "subject": "Improve racy single-check init code:",
    "sanitized_subject_line": "Improve-racy-single-check-init-code",
    "commit_notes": "",
    "body": "- Use `@LazyInit` (to help J2ObjC and TSAN) on various `@CheckForNull transient` fields (and also on `UnmodifiableBiMap.inverse` and on the `LocalCache` fields, all of which are `@RetainedWith @CheckForNull`). I skipped some other such fields, including:    - `Synchronized` (which already uses, well, `synchronized`, making the check not racy)    - `TreeBasedTable.TreeRow` and some `common.graph` classes (e.g., `DirectedMultiNetworkConnections`), which are doing something more sophisticated. - Update the TODO in `ImmutableSortedMap` about actually caching a view computed on the fly.  It's likely that I didn't get _every_ field that deserves an annotation. It's also likely that some of the fields should additionally use `@RetainedWith` or similar for J2ObjC purposes. And probably some fields would be better off with either eagerly computing the views or with not caching them at all (b/280079296). But this CL should be strictly an improvement over the status quo.  RELNOTES=n/a PiperOrigin-RevId: 543532432 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 14:02:13 -0700"
  },
  {
    "commitHash": "80c8d9ce4a8ba63f9704113399a001e456e83e73",
    "parent": "39f179c57cec921d5be7a83b3e76c9956ed9b812",
    "subject": "Further rework `package-info` for `common.collect`:",
    "sanitized_subject_line": "Further-rework-package-info-for-common.collect",
    "commit_notes": "",
    "body": "- Add a section (at the very top!) about immutable collections as a whole. - Promote `Range` classes. - Remove `Ordering` and `ComparisonChain`. - Collapse remaining utilities into \"Other.\" - Remove `MapDifference` and `ImmutableCollection` from sections in which they didn't really seem to fit.  RELNOTES=n/a PiperOrigin-RevId: 543532319 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 13:56:02 -0700"
  },
  {
    "commitHash": "39f179c57cec921d5be7a83b3e76c9956ed9b812",
    "parent": "fbf2b59de0e1ffa2d546f44c37e6b88f9635890f",
    "subject": "Prepare for release 32.1.0.",
    "sanitized_subject_line": "Prepare-for-release-32.1.0",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 543526100 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 13:33:25 -0700"
  },
  {
    "commitHash": "fbf2b59de0e1ffa2d546f44c37e6b88f9635890f",
    "parent": "757be9253601926940e8f58df1d1e48e6d7575e7",
    "subject": "Remove the list of `Forwarding*` classes from `package-info`.",
    "sanitized_subject_line": "Remove-the-list-of-Forwarding-classes-from-package-info",
    "commit_notes": "",
    "body": "Given that the classes aren't used often, that [they may be bug-prone](https://github.com/google/guava/issues/1575), and that there's no real insight to be delivered by a list of a bunch of collection types (vs. just looking at them in the existing alphabetical list of classes in the package), they don't feel worth pushing so prominently.  RELNOTES=n/a PiperOrigin-RevId: 543492159 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 11:22:51 -0700"
  },
  {
    "commitHash": "757be9253601926940e8f58df1d1e48e6d7575e7",
    "parent": "e42d4e863b751d3e664c5d11577e9f8c26bdde5f",
    "subject": "Added `testPut_nullValueSupported`.",
    "sanitized_subject_line": "Added-testPut_nullValueSupported",
    "commit_notes": "",
    "body": "Fixes #6225  RELNOTES=n/a PiperOrigin-RevId: 543490598 ",
    "author_name": "Alexander Alvonellos",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 11:17:52 -0700"
  },
  {
    "commitHash": "e42d4e863b751d3e664c5d11577e9f8c26bdde5f",
    "parent": "39c45d2c9cd7f2e7bf55310110396a0f9293be4b",
    "subject": "Remove obsolete GWT-RPC logging code.",
    "sanitized_subject_line": "Remove-obsolete-GWT-RPC-logging-code",
    "commit_notes": "",
    "body": "(i.e., roll back cl/265490471)  This is progress toward addressing the Java agent / `premain` problem discussed in https://github.com/google/guava/issues/6566.  GWT-RPC support has been gone for a while now.  RELNOTES=Fixed some problems with [using Guava from a Java Agent](https://github.com/google/guava/issues/6566). (But we don't test that configuration, and we don't know how well we'll be able to keep it working.) PiperOrigin-RevId: 543484764 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 10:58:45 -0700"
  },
  {
    "commitHash": "39c45d2c9cd7f2e7bf55310110396a0f9293be4b",
    "parent": "2c983f937e4854c363b67610b38963c147e9e20a",
    "subject": "Prepare to make `ImmutableTable.toImmutableTable` available in `guava-android` (but don't do so yet).",
    "sanitized_subject_line": "Prepare-to-make-ImmutableTable.toImmutableTable-available-in-guava-android-but-don-t-do-so-yet",
    "commit_notes": "",
    "body": "Progress toward https://github.com/google/guava/issues/6567  RELNOTES=n/a PiperOrigin-RevId: 543468006 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 10:03:50 -0700"
  },
  {
    "commitHash": "2c983f937e4854c363b67610b38963c147e9e20a",
    "parent": "c9efc479950e40be4a11daa707dcf9258745cc2e",
    "subject": "Add some classes to `package-info` for `base` and `collect`.",
    "sanitized_subject_line": "Add-some-classes-to-package-info-for-base-and-collect",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 543462912 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 09:48:06 -0700"
  },
  {
    "commitHash": "c9efc479950e40be4a11daa707dcf9258745cc2e",
    "parent": "8720b6bbc20a36ffdc6c6ce397f1308bd7b630d6",
    "subject": "Describe alternative for `ByteStreams#copy`.",
    "sanitized_subject_line": "Describe-alternative-for-ByteStreams-copy",
    "commit_notes": "",
    "body": "Fixes #5706  RELNOTES=n/a PiperOrigin-RevId: 543462774 ",
    "author_name": "Tiramisu Mokka",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 09:43:12 -0700"
  },
  {
    "commitHash": "8720b6bbc20a36ffdc6c6ce397f1308bd7b630d6",
    "parent": "01dcc2e6104e9bd0392cb19029edf2c581425b67",
    "subject": "Changed `Longs.concat()` to throw `IllegalArgumentException` if the input arrays contain too many elements.",
    "sanitized_subject_line": "Changed-Longs.concat-to-throw-IllegalArgumentException-if-the-input-arrays-contain-too-many-elements",
    "commit_notes": "",
    "body": "See https://github.com/google/guava/issues/3303  Fixes #3304  RELNOTES=n/a PiperOrigin-RevId: 543451555 ",
    "author_name": "Istvan Neuwirth",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 08:55:35 -0700"
  },
  {
    "commitHash": "01dcc2e6104e9bd0392cb19029edf2c581425b67",
    "parent": "466ad3cca4a572451a8296776602a55e5e3c3906",
    "subject": "describe alternative for unmodifiable/synchronizedNavigableSetNavigableSet for java8 users",
    "sanitized_subject_line": "describe-alternative-for-unmodifiable-synchronizedNavigableSetNavigableSet-for-java8-users",
    "commit_notes": "",
    "body": "Fixes #3283  RELNOTES=n/a PiperOrigin-RevId: 543436855 ",
    "author_name": "Tiramisu Mokka",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 26 Jun 2023 07:51:21 -0700"
  },
  {
    "commitHash": "466ad3cca4a572451a8296776602a55e5e3c3906",
    "parent": "de627039879dc38c18c3a76d3f0245f685a6a078",
    "subject": "Edits to the first line of `package-info` files, as seen in https://guava.dev/api.",
    "sanitized_subject_line": "Edits-to-the-first-line-of-package-info-files-as-seen-in-https-guava.dev-api",
    "commit_notes": "",
    "body": "Some of the edits are in the name of consistency across packages; others are useful even in a vacuum.  - Discourage `common.cache` and EventBus. - Delete most of the EventBus doc, as it is essentially a slightly incomplete copy of the wiki page (missing sections on unregistration and \"magic things,\" plus a remark that the ability to rename subscriber methods is a feature). (Also, I updated the wiki page to say \"subscriber\" instead of \"handler,\" following the change to package-info in cl/52404442(!). And I removed the section about filing a feature request.) - Stop saying \"working with.\" - Stop inconsistently saying \"This package contains.\" - Stop saying \"Java.\" - Generalize the description of `common.net`. - Give `BigDecimal` equal billing alongside `BigInteger`. - Stop emphasizing that our collections are \"generic,\" since that hasn't been a differentiator in many years. - Stop saying \"common\" in `common.annotations`.  RELNOTES=n/a PiperOrigin-RevId: 542935350 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 23 Jun 2023 12:57:03 -0700"
  },
  {
    "commitHash": "de627039879dc38c18c3a76d3f0245f685a6a078",
    "parent": "bf792538a7a31fe757861ec6e09bd3ddf8c8191e",
    "subject": "Delay initializing the `CacheBuilder` logger until it is needed.",
    "sanitized_subject_line": "Delay-initializing-the-CacheBuilder-logger-until-it-is-needed",
    "commit_notes": "",
    "body": "This is progress toward addressing the Java agent / `premain` problem discussed in https://github.com/google/guava/issues/6566.  (And we're careful to avoid lambdas and method references so as to avoid https://github.com/google/guava/issues/6565.)  RELNOTES=Fixed some problems with [using Guava from a Java Agent](https://github.com/google/guava/issues/6566). (But we don't test that configuration, and we don't know how well we'll be able to keep it working.) PiperOrigin-RevId: 542887194 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 23 Jun 2023 10:00:11 -0700"
  },
  {
    "commitHash": "bf792538a7a31fe757861ec6e09bd3ddf8c8191e",
    "parent": "87867c4799601e37e95506efed6f605fbc9e75c0",
    "subject": "Skip some tests under Windows that _sometimes_ fail there.",
    "sanitized_subject_line": "Skip-some-tests-under-Windows-that-_sometimes_-fail-there",
    "commit_notes": "",
    "body": "I had reported a failure post-submit on cl/538862954, and I just saw another one while testing cl/542572673.  RELNOTES=n/a PiperOrigin-RevId: 542608139 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 22 Jun 2023 11:00:41 -0700"
  },
  {
    "commitHash": "87867c4799601e37e95506efed6f605fbc9e75c0",
    "parent": "896541465f1cc99352e8fbfbba4d4617f19183d8",
    "subject": "Bump github/codeql-action from 2.20.0 to 2.20.1",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.20.0-to-2.20.1",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.20.0 to 2.20.1. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/6c089f53dd51dc3fc7e599c3cb5356453a52ca9e...f6e388ebf0efc915c6c5b165b019ee61a6746a38)  Fixes #6572  RELNOTES=n/a PiperOrigin-RevId: 542377877 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 21 Jun 2023 15:23:36 -0700"
  },
  {
    "commitHash": "896541465f1cc99352e8fbfbba4d4617f19183d8",
    "parent": "3286f01cfc29f867c6ed4c0eca6b21a2b4a183f4",
    "subject": "Improve efficiency of bulk removals in transformed lists.",
    "sanitized_subject_line": "Improve-efficiency-of-bulk-removals-in-transformed-lists",
    "commit_notes": "",
    "body": "Override removeRange(int,int) for Lists.TransformingSequentialList and Lists.TransformingRandomAccessList so that source list has opportunity to do more efficient deletions. Call fromList.subList(from, to).clear() instead of removing with iterator.  Fixes #5762 Fixes #6087  RELNOTES=n/a PiperOrigin-RevId: 542355023 ",
    "author_name": "hwaite",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 21 Jun 2023 14:03:01 -0700"
  },
  {
    "commitHash": "3286f01cfc29f867c6ed4c0eca6b21a2b4a183f4",
    "parent": "b2054e1858b88e9ee29123d7b9577cd095a5898d",
    "subject": "Stop skipping tests that look for line breaks under Windows.",
    "sanitized_subject_line": "Stop-skipping-tests-that-look-for-line-breaks-under-Windows",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6560  Progress toward https://github.com/google/guava/issues/2130  RELNOTES=n/a PiperOrigin-RevId: 542323657 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 21 Jun 2023 12:05:21 -0700"
  },
  {
    "commitHash": "b2054e1858b88e9ee29123d7b9577cd095a5898d",
    "parent": "a667c3877281e422d663886aeb0abd6cfcf29378",
    "subject": "Bump actions/checkout from 3.5.2 to 3.5.3",
    "sanitized_subject_line": "Bump-actions-checkout-from-3.5.2-to-3.5.3",
    "commit_notes": "",
    "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 3.5.2 to 3.5.3. - [Release notes](https://github.com/actions/checkout/releases) - [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md) - [Commits](https://github.com/actions/checkout/compare/8e5e7e5ab8b370d6c329ec480221332ada57f0ab...c85c95e3d7251135ab7dc9ce3241c5835cc595a9)  Fixes #6547  RELNOTES=n/a PiperOrigin-RevId: 542299838 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 21 Jun 2023 10:46:03 -0700"
  },
  {
    "commitHash": "a667c3877281e422d663886aeb0abd6cfcf29378",
    "parent": "36e7fcf99b1bc36e91f2aa3c6073a3940f17d1c1",
    "subject": "Partial rollback of cl/441881361 to fix https://github.com/google/guava/issues/6565",
    "sanitized_subject_line": "Partial-rollback-of-cl-441881361-to-fix-https-github.com-google-guava-issues-6565",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6565  RELNOTES=`cache`: Fixed `BootstrapMethodError` when [using `CacheBuilder` from a custom system class loader](https://github.com/google/guava/issues/6565). PiperOrigin-RevId: 542257300 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 21 Jun 2023 08:06:30 -0700"
  },
  {
    "commitHash": "36e7fcf99b1bc36e91f2aa3c6073a3940f17d1c1",
    "parent": "4354c12b3f7934845e81cc92660535081e5586a0",
    "subject": "Stop skipping certain `AbstractFutureTest` tests under Windows.",
    "sanitized_subject_line": "Stop-skipping-certain-AbstractFutureTest-tests-under-Windows",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6563  Progress toward https://github.com/google/guava/issues/2130  RELNOTES=n/a PiperOrigin-RevId: 541947282 ",
    "author_name": "ineuwirth",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 20 Jun 2023 09:22:20 -0700"
  },
  {
    "commitHash": "4354c12b3f7934845e81cc92660535081e5586a0",
    "parent": "b88a7745c3fe63a9c1303ac6efd836a55622a4cd",
    "subject": "Bump github/codeql-action from 2.3.6 to 2.20.0",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.3.6-to-2.20.0",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.3.6 to 2.20.0. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/83f0fe6c4988d98a455712a27f0255212bba9bd4...6c089f53dd51dc3fc7e599c3cb5356453a52ca9e)  Fixes #6552  RELNOTES=n/a PiperOrigin-RevId: 541941060 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 20 Jun 2023 09:03:28 -0700"
  },
  {
    "commitHash": "b88a7745c3fe63a9c1303ac6efd836a55622a4cd",
    "parent": "efede00606cbc022bf57a6e73c27ed9e67bc8172",
    "subject": "Begin updating `package-info` for `collect` and also docs of some its individual types.",
    "sanitized_subject_line": "Begin-updating-package-info-for-collect-and-also-docs-of-some-its-individual-types",
    "commit_notes": "",
    "body": "Most of this CL is about moving lists of implementations of `Foo` into the Javadoc for `Foo` itself, freeing up space in `package-info`.  I also sorted the main collection types by usage.  RELNOTES=n/a PiperOrigin-RevId: 541192589 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 17 Jun 2023 07:40:53 -0700"
  },
  {
    "commitHash": "efede00606cbc022bf57a6e73c27ed9e67bc8172",
    "parent": "6717a082c7108321da42f20a0562f6abe70fbf19",
    "subject": "Avoid fully qualifying types from the same package, and use `https`.",
    "sanitized_subject_line": "Avoid-fully-qualifying-types-from-the-same-package-and-use-https",
    "commit_notes": "",
    "body": "(pre-work for further `package-info` improvements)  RELNOTES=n/a PiperOrigin-RevId: 540694363 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 15 Jun 2023 14:41:47 -0700"
  },
  {
    "commitHash": "6717a082c7108321da42f20a0562f6abe70fbf19",
    "parent": "68dfdba219f804052df78b68327368480d09cc36",
    "subject": "Test that we don't add new methods or supertypes to `ListenableFuture`.",
    "sanitized_subject_line": "Test-that-we-don-t-add-new-methods-or-supertypes-to-ListenableFuture",
    "commit_notes": "",
    "body": "Notably, we periodically get a suggestion of adding a `Duration` overload of `get`.  RELNOTES=n/a PiperOrigin-RevId: 540662488 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 15 Jun 2023 12:48:16 -0700"
  },
  {
    "commitHash": "68dfdba219f804052df78b68327368480d09cc36",
    "parent": "4b6460f8fd94bf5b70e9ecd0673c7a576bb7d305",
    "subject": "Post-pare for release 32.0.1.",
    "sanitized_subject_line": "Post-pare-for-release-32.0.1",
    "commit_notes": "",
    "body": "Also, update documentation to reflect that we test under: - [Windows](https://github.com/google/guava/issues/2686) - [Java 17](https://github.com/google/guava/issues/5801)  RELNOTES=n/a PiperOrigin-RevId: 540650887 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 15 Jun 2023 12:05:19 -0700"
  },
  {
    "commitHash": "4b6460f8fd94bf5b70e9ecd0673c7a576bb7d305",
    "parent": "03e2792d44321781cadc00435f02163a1691b297",
    "subject": "Add explicit type arguments necessary for J2KT in common/collect.",
    "sanitized_subject_line": "Add-explicit-type-arguments-necessary-for-J2KT-in-common-collect",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 540634196 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 15 Jun 2023 11:11:44 -0700"
  },
  {
    "commitHash": "03e2792d44321781cadc00435f02163a1691b297",
    "parent": "65c7f10ff05d072ccbf3e6201d89b988d4f5cfe1",
    "subject": "Update `package-info` for `common.base`.",
    "sanitized_subject_line": "Update-package-info-for-common.base",
    "commit_notes": "",
    "body": "- Remove classes that became obsolete because of JDK features, and point out that general trend. - Move rarely used `Defaults` down to the end, alongside a new mention of rarely used `Utf8`. - Add commonly used `StandardSystemProperty` and `Verify`.  RELNOTES=n/a PiperOrigin-RevId: 540592401 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 15 Jun 2023 08:44:10 -0700"
  },
  {
    "commitHash": "65c7f10ff05d072ccbf3e6201d89b988d4f5cfe1",
    "parent": "501a01631f742bbcb73cf46ae409abf567903944",
    "subject": "Use Java's hardware-accelerated CRC32C implementation where available.",
    "sanitized_subject_line": "Use-Java-s-hardware-accelerated-CRC32C-implementation-where-available",
    "commit_notes": "",
    "body": "This is the first use of a Java 9 API in Guava, but we use the API only when it's available, so we maintain compatibility with Java 8. Use of Java 9 APIs is relevant to https://github.com/google/guava/issues/6549 and https://github.com/google/guava/issues/3990 (and also https://github.com/mojohaus/animal-sniffer/issues/67).  I didn't make the same change for `guava-android`, which [will add `java.util.zip.CRC32C` in API Level 34](https://developer.android.com/reference/java/util/zip/CRC32C). I don't know if Android is providing similar performance improvements, so it might not even matter. But even if I wanted to do it, I can't with my current approach, which relies on `MethodHandle`—unless I want to make even the usage of `MethodHandle` conditional on a reflective check :)  RELNOTES=`hash`: Enhanced `crc32c()` to use Java's hardware-accelerated implementation where available. PiperOrigin-RevId: 539983316 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 13 Jun 2023 09:19:15 -0700"
  },
  {
    "commitHash": "501a01631f742bbcb73cf46ae409abf567903944",
    "parent": "59fe6674075e4ff08fa51caa8873237392292ef5",
    "subject": "Use `Class<@NonNull T>` in one more class, `ObjectArrays`.",
    "sanitized_subject_line": "Use-Class-NonNull-T-in-one-more-class-ObjectArrays",
    "commit_notes": "",
    "body": "Arrays are weird, as discussed in cl/382268713, so we're still making compromises here.  This CL at least: - lets users create arrays with nullable element types. That said, if people want a `@Nullable String[]`, we were already letting them create a `String[]` and then widen it to `@Nullable String`, at least under our current treatment of arrays. Kotlin wouldn't be so accommodating, but I doubt that Kotlin users need this class much, of at all. - lets users concatenate arrays with nullable element types: `ObjectArrays.concat(nullableStrings, moreNullableStrings, String.class)`.  I don't remember how I had identified `Class<T>` usages to convert to `Class<@NonNull T>` previously; it might just have been that I remembered some offhand but not others. And perhaps I'd put `ObjectArrays` out of mind entirely on the grounds that arrays are weird. But now I tried to grep through our Javadoc in the `gh-pages` branch and then gradually filter out usages that didn't look related. It's still possible that I missed something, but I can report that `ObjectArrays` contained the only usages left at the end of the process:  ``` git grep 'Class&lt;[^?]' releases/snapshot-jre/api/docs/com/ | grep -v class-use | s 's/&lt;/</g' | s 's/&gt;/>/g' | s 's/&nbsp;/ /g' | grep -v -e catching -e exceptionType -e exceptionClass -e declaredType -e Annotation -e Enum -e enum -e interfaceType -e wrap -e filter -e Iterables -e Iterators -e FluentIterable -e defaultValue -e CauseType -e InstanceOf -e ToInstanceMap -e ArrayTable -e Primitives -e Invokable -e TypeParameter -e TypeToken -e Sets.html ```  RELNOTES=n/a PiperOrigin-RevId: 539667000 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 12 Jun 2023 08:59:22 -0700"
  },
  {
    "commitHash": "59fe6674075e4ff08fa51caa8873237392292ef5",
    "parent": "5a4a0a7d10b6ced2f4c112dcb22338436492eab3",
    "subject": "Remove Windows warnings now that `Files.createTempDir` and `FileBackedOutputStream` work under Windows again.",
    "sanitized_subject_line": "Remove-Windows-warnings-now-that-Files.createTempDir-and-FileBackedOutputStream-work-under-Windows-again",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 538895950 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 8 Jun 2023 14:47:06 -0700"
  },
  {
    "commitHash": "5a4a0a7d10b6ced2f4c112dcb22338436492eab3",
    "parent": "d7c43ab48066db6d4b8eb7a299c475a6c6c3aca7",
    "subject": "Fix `Files.createTempDir` and `FileBackedOutputStream` under Windows.",
    "sanitized_subject_line": "Fix-Files.createTempDir-and-FileBackedOutputStream-under-Windows",
    "commit_notes": "",
    "body": "Based on [some discussions in GitHub](https://github.com/google/guava/issues/6535#issuecomment-1579806211), I'm under the impression that Windows would create the temporary directory/file in a secure location even if our call to `java.nio.file.Files.createTempDirectory`/`createTempFile` passes no ACL attribute. However, in case we are in an unusual situation (Linux with NFS temporary directory???) in which ACLs are supported but the temporary directory is _not_ a secure location, I've arranged for the file to be created with an ACL that grants permissions only to the current user. I set the user's permissions to the ones that I saw on a file created in the temporary directory under Java's default settings, and I didn't do anything to set the additional permissions I was seeing for administrators. The resulting file's permissions look plausibly correct in the Windows property dialog, if slightly different than what I get when creating a file/directory myself through Explorer.  Fixes https://github.com/google/guava/issues/6535  Relates to: - https://github.com/google/guava/issues/4011 - https://github.com/google/guava/issues/2575 - https://github.com/google/guava/issues/2686 (Yay, we have Windows CI set up!) - https://github.com/google/guava/issues/2130  RELNOTES=`io`: Fixed `Files.createTempDir` and `FileBackedOutputStream` under Windows. PiperOrigin-RevId: 538888769 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 8 Jun 2023 14:20:23 -0700"
  },
  {
    "commitHash": "d7c43ab48066db6d4b8eb7a299c475a6c6c3aca7",
    "parent": "9916d82c67414b6a01d15a0fc914f75dc7edaebb",
    "subject": "Run CI under Windows, suppressing existing failures.",
    "sanitized_subject_line": "Run-CI-under-Windows-suppressing-existing-failures",
    "commit_notes": "",
    "body": "- Fixes https://github.com/google/guava/issues/2686 - In some sense addresses https://github.com/google/guava/issues/2130, but I'm going to leave that open to track removing the suppressions. - Provides better testing for the fix for https://github.com/google/guava/issues/6535  RELNOTES=n/a PiperOrigin-RevId: 538862954 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 8 Jun 2023 12:43:23 -0700"
  },
  {
    "commitHash": "9916d82c67414b6a01d15a0fc914f75dc7edaebb",
    "parent": "e82e2a2c07c68108f318958ee0355cc835c97743",
    "subject": "Fix j2kt stream package nullability Fix sort() parameter nullability",
    "sanitized_subject_line": "Fix-j2kt-stream-package-nullability",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 538560615 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 7 Jun 2023 12:26:07 -0700"
  },
  {
    "commitHash": "e82e2a2c07c68108f318958ee0355cc835c97743",
    "parent": "6135e9d8fb9f01afc42ecc196d9ce390c8034a23",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 538224548 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 6 Jun 2023 10:32:08 -0700"
  },
  {
    "commitHash": "6135e9d8fb9f01afc42ecc196d9ce390c8034a23",
    "parent": "c03136c430644d5493de9aca520c0ccf5f694c76",
    "subject": "Internal build setup change",
    "sanitized_subject_line": "Internal-build-setup-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 538188470 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 6 Jun 2023 08:23:21 -0700"
  },
  {
    "commitHash": "c03136c430644d5493de9aca520c0ccf5f694c76",
    "parent": "e7714b0b8b3d2a949ce056d4ab021b92f71a956f",
    "subject": "Bump github/codeql-action from 2.3.5 to 2.3.6",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.3.5-to-2.3.6",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.3.5 to 2.3.6. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/0225834cc549ee0ca93cb085b92954821a145866...83f0fe6c4988d98a455712a27f0255212bba9bd4)  Fixes #6529  RELNOTES=n/a PiperOrigin-RevId: 537370929 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 2 Jun 2023 11:56:28 -0700"
  },
  {
    "commitHash": "e7714b0b8b3d2a949ce056d4ab021b92f71a956f",
    "parent": "5c2359087acc36c86ed42f1875ce69b7be231868",
    "subject": "Add `Duration`-based default methods to `ListeningExecutorService`",
    "sanitized_subject_line": "Add-Duration-based-default-methods-to-ListeningExecutorService",
    "commit_notes": "",
    "body": "They just delegate to the existing methods from the interface, using the existing saturated conversion to nanoseconds. This matches existing `Duration`-based overloads of `(long, TimeUnit)` methods in the same package.  RELNOTES=`util.concurrent`: Added `Duration`-based `default` methods to `ListeningExecutorService`. PiperOrigin-RevId: 537286950 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 2 Jun 2023 05:45:23 -0700"
  },
  {
    "commitHash": "5c2359087acc36c86ed42f1875ce69b7be231868",
    "parent": "b6193d114033af87cdf264078538bbac5acf67dc",
    "subject": "Improve signatures of methods for converting iterables to arrays.",
    "sanitized_subject_line": "Improve-signatures-of-methods-for-converting-iterables-to-arrays",
    "commit_notes": "",
    "body": "- Refine the signature of `Iterables.toArray` (and `Iterators.toArray`) by using `@NonNull`. - Finish fixing the signature of `FluentIterable.toArray`, which we'd started doing in cl/519736884 but didn't finish: In that CL, we'd added `@NonNull` to fix a build error but not removed the `@Nullable` in the return type. Actually, that `@Nullable` probably _never_ made sense? Probably I had blindly added it as part of addressing a build error during cl/388680701 instead of reasoning out that it wasn't necessary. It's especially sad to have gone out of the way to add it when we ended up needing a suppression on the method regardless. I hope I didn't need to uglify any callers in response to the change....  RELNOTES=n/a PiperOrigin-RevId: 537067780 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 1 Jun 2023 10:50:42 -0700"
  },
  {
    "commitHash": "b6193d114033af87cdf264078538bbac5acf67dc",
    "parent": "1c4e2533c6bfb9782c8065c04d5a684b40f1bc86",
    "subject": "Internal build change",
    "sanitized_subject_line": "Internal-build-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 536961041 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 1 Jun 2023 02:32:35 -0700"
  },
  {
    "commitHash": "1c4e2533c6bfb9782c8065c04d5a684b40f1bc86",
    "parent": "f04dbda13fabef21362a9c13388c08e77566b75d",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 536888706 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 31 May 2023 19:35:17 -0700"
  },
  {
    "commitHash": "f04dbda13fabef21362a9c13388c08e77566b75d",
    "parent": "3dfe3633eb84ec96ac88c764862b0f8d0c3546fc",
    "subject": "Bump github/codeql-action from 2.3.3 to 2.3.5",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.3.3-to-2.3.5",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.3.3 to 2.3.5. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/29b1f65c5e92e24fe6b6647da1eaabe529cec70f...0225834cc549ee0ca93cb085b92954821a145866)  Fixes #6516  RELNOTES=n/a PiperOrigin-RevId: 536852181 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 31 May 2023 16:16:11 -0700"
  },
  {
    "commitHash": "3dfe3633eb84ec96ac88c764862b0f8d0c3546fc",
    "parent": "b047302adebfcc6dc0cf71e3541d0e7f813e2ef6",
    "subject": "Warn that `Files.createTempDir` and `FileBackedOutputStream` don't work under Windows anymore (if ever they did).",
    "sanitized_subject_line": "Warn-that-Files.createTempDir-and-FileBackedOutputStream-don-t-work-under-Windows-anymore-if-ever-they-did",
    "commit_notes": "",
    "body": "Relates to: - https://github.com/google/guava/issues/4011 - https://github.com/google/guava/issues/2575 - https://github.com/google/guava/issues/2686  Also, fix some Javadoc.  RELNOTES=n/a PiperOrigin-RevId: 536752422 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 31 May 2023 10:24:57 -0700"
  },
  {
    "commitHash": "b047302adebfcc6dc0cf71e3541d0e7f813e2ef6",
    "parent": "d5c4fd9ae1aa1d84b7a95cacf5e69ff394611477",
    "subject": "Update links for the rename of the reference-checker repo.",
    "sanitized_subject_line": "Update-links-for-the-rename-of-the-reference-checker-repo",
    "commit_notes": "",
    "body": "They automatically redirect, but it's easy to just update them so that we can zero in on any other references that might _not_ automatically redirect.  RELNOTES=n/a PiperOrigin-RevId: 536488410 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 30 May 2023 13:12:45 -0700"
  },
  {
    "commitHash": "d5c4fd9ae1aa1d84b7a95cacf5e69ff394611477",
    "parent": "23ff91848fbe77a15e6786cb03974c52bd9118b8",
    "subject": "Prepare for release 32.0.0.",
    "sanitized_subject_line": "Prepare-for-release-32.0.0",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 535722622 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 26 May 2023 15:04:00 -0700"
  },
  {
    "commitHash": "23ff91848fbe77a15e6786cb03974c52bd9118b8",
    "parent": "3de12be516dded509c45f4d774f86648cf463dd4",
    "subject": "Under J2CL, make `EnumMultiset` work. Previously, it was present but failed at runtime.",
    "sanitized_subject_line": "Under-J2CL-make-EnumMultiset-work.-Previously-it-was-present-but-failed-at-runtime",
    "commit_notes": "",
    "body": "The easiest fix I could find was to change the GWT/J2CL implementation to use `AbstractMapBasedMultiset`. It's possible that that performs worse than the existing custom multiset implementation under GWT, but I don't know. It at least has the virtue of working under J2CL.  RELNOTES=`collect`: Under j2cl, made `EnumMultiset` work. Previously, it was present but failed at runtime. PiperOrigin-RevId: 535711434 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 26 May 2023 14:20:30 -0700"
  },
  {
    "commitHash": "3de12be516dded509c45f4d774f86648cf463dd4",
    "parent": "09db2c29aeb04c3aa1ba8913271ab8cf048a7330",
    "subject": "Under J2CL+GWT, remove `keyType()` and `valueType()` from the `Enum*BiMap` classes.",
    "sanitized_subject_line": "Under-J2CL-GWT-remove-keyType-and-valueType-from-the-Enum-BiMap-classes",
    "commit_notes": "",
    "body": "Previously, the methods were present but sometimes returned `null` Under J2CL. And soon, J2CL may drop support for the reflective enum-related APIs that they depend on.  `guava-gwt` is used by both GWT and J2CL users, so we have to keep our code buildable against both.  RELNOTES=`collect`: Removed the `Enum*BiMap` classes's `keyType()` and `valueType()` methods from `guava-gwt` to prepare for the removal of reflective enum-related APIs from J2CL. If this causes you problems as a GWT user, let us know. PiperOrigin-RevId: 535711221 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 26 May 2023 14:15:08 -0700"
  },
  {
    "commitHash": "09db2c29aeb04c3aa1ba8913271ab8cf048a7330",
    "parent": "c3a155dc85101257ce4120b38bdab7224255c285",
    "subject": "Remove `Sets.complementOf` from `guava-gwt`.",
    "sanitized_subject_line": "Remove-Sets.complementOf-from-guava-gwt",
    "commit_notes": "",
    "body": "Previously, it was present but failed at runtime under J2CL. And soon, J2CL may drop support for the reflective enum-related APIs that it depends on.  `guava-gwt` is used by both GWT and J2CL users, so we have to keep our code buildable against both.  If this CL causes trouble for you as a GWT user, let us know, and we can investigate options further. In the worst case, you can copy the implementation as needed, since `complementOf` is a static method.  RELNOTES=`collect`: Removed `Sets.complementOf` from `guava-gwt` to prepare for the removal of reflective enum-related APIs from J2CL. If this causes you problems as a GWT user, let us know. PiperOrigin-RevId: 535589407 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 26 May 2023 05:20:29 -0700"
  },
  {
    "commitHash": "c3a155dc85101257ce4120b38bdab7224255c285",
    "parent": "feb83a1c8fd2e7670b244d5afd23cba5aca43284",
    "subject": "Remove `Enums` from `guava-gwt` at compile time.",
    "sanitized_subject_line": "Remove-Enums-from-guava-gwt-at-compile-time",
    "commit_notes": "",
    "body": "Previously, parts of it were present but failed at runtime when used under J2CL. And soon, J2CL may drop support for the reflective enum-related APIs that it depends on.  `guava-gwt` is used by both GWT and J2CL users, so we have to keep our code buildable against both.  If this CL causes trouble for you as a GWT user, let us know, and we can investigate options further. In the worst case, you can copy the implementations as needed, since the class contains only static methods.  RELNOTES=`collect`: Removed `Enums` from `guava-gwt` to prepare for the removal of reflective enum-related APIs from J2CL. If this causes you problems as a GWT user, let us know. PiperOrigin-RevId: 535585561 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 26 May 2023 04:56:44 -0700"
  },
  {
    "commitHash": "feb83a1c8fd2e7670b244d5afd23cba5aca43284",
    "parent": "9407ed6dc2ba10df6a0c3874369345d1aef5cd52",
    "subject": "Restrict permissions when creating temporary files and directories, or fail if that's not possible.",
    "sanitized_subject_line": "Restrict-permissions-when-creating-temporary-files-and-directories-or-fail-if-that-s-not-possible",
    "commit_notes": "",
    "body": "(Also, check that the provided `fileThreshold` is non-negative.)  - Fixes https://github.com/google/guava/issues/2575 - Fixes https://github.com/google/guava/issues/4011  RELNOTES=Reimplemented `Files.createTempDir` and `FileBackedOutputStream` to further address [CVE-2020-8908](https://github.com/google/guava/issues/4011) and [Guava issue #2575](https://github.com/google/guava/issues/2575) (CVE forthcoming). PiperOrigin-RevId: 535359233 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 25 May 2023 13:20:10 -0700"
  },
  {
    "commitHash": "9407ed6dc2ba10df6a0c3874369345d1aef5cd52",
    "parent": "7c473d86d3a37bde42c886a1a90abeeb3b4ceb74",
    "subject": "Stop super-sourcing System.nanoTime usages as the API was available since 2021.",
    "sanitized_subject_line": "Stop-super-sourcing-System.nanoTime-usages-as-the-API-was-available-since-2021",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 534596151 ",
    "author_name": "Goktug Gokdogan",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 23 May 2023 16:27:53 -0700"
  },
  {
    "commitHash": "7c473d86d3a37bde42c886a1a90abeeb3b4ceb74",
    "parent": "7b6dd3e8467866edc87bc7e3ad38f4c0d60c99f3",
    "subject": "Fix javadoc formatting for ImmutableList.copyOf(Collection).",
    "sanitized_subject_line": "Fix-javadoc-formatting-for-ImmutableList.copyOf-Collection",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 534433508 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 23 May 2023 08:33:23 -0700"
  },
  {
    "commitHash": "7b6dd3e8467866edc87bc7e3ad38f4c0d60c99f3",
    "parent": "b62c88e630862937a3e2c8f4a759f3767db8685e",
    "subject": "Add \"Sec-Browsing-Topics\" header. Add \"Observe-Browsing-Topics\" header.",
    "sanitized_subject_line": "Add-Sec-Browsing-Topics-header",
    "commit_notes": "",
    "body": "Spec: https://patcg-individual-drafts.github.io/topics/ RELNOTES=N/A PiperOrigin-RevId: 534381652 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 23 May 2023 04:52:29 -0700"
  },
  {
    "commitHash": "b62c88e630862937a3e2c8f4a759f3767db8685e",
    "parent": "852a7d3fe962f63f44b77e2a010b54e12dbd3696",
    "subject": "Under j2cl, make `CollectorTester` work. Previously, it was present but failed at runtime.",
    "sanitized_subject_line": "Under-j2cl-make-CollectorTester-work.-Previously-it-was-present-but-failed-at-runtime",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Under j2cl, made `CollectorTester` work. Previously, it was present but failed at runtime. PiperOrigin-RevId: 534163401 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 22 May 2023 13:27:10 -0700"
  },
  {
    "commitHash": "852a7d3fe962f63f44b77e2a010b54e12dbd3696",
    "parent": "56dc928a2558d50d426ce500307abcaa4a557d8c",
    "subject": "Under j2cl, make `Maps.immutableEnumMap` and `toImmutableEnumMap` work. Previously, they were present but failed at runtime.",
    "sanitized_subject_line": "Under-j2cl-make-Maps.immutableEnumMap-and-toImmutableEnumMap-work.-Previously-they-were-present-but-failed-at-runtime",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Under j2cl, made `Maps.immutableEnumMap` and `toImmutableEnumMap` work. PiperOrigin-RevId: 534145451 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 22 May 2023 12:22:48 -0700"
  },
  {
    "commitHash": "56dc928a2558d50d426ce500307abcaa4a557d8c",
    "parent": "3a8d7e4539bc6f23ee7a01202ddc6808be932149",
    "subject": "Mark `Files.createTempDir` and `FileBackedOutputStream` as `@J2ObjCIncompatible`.",
    "sanitized_subject_line": "Mark-Files.createTempDir-and-FileBackedOutputStream-as-J2ObjCIncompatible",
    "commit_notes": "",
    "body": "While we believe they're secure under iOS (thanks to OS-level protections on the temporary directory), we are looking into reimplementing them atop `java.nio.file` to improve security under other platforms. And if we do so, then we need to add `java.nio.file` to the JRE deps of every J2ObjC user, possibly increasing app size (at least until improvements to J2ObjC land). After discussion with the J2ObjC team, we've settled on hiding the APIs from J2ObjC for now. Inside Google, the APIs already had no J2ObjC users. If you use them outside Google, let us know, and we can make them available there.  RELNOTES=`io`: Marked `Files.createTempDir` and `FileBackedOutputStream` as `@J2ObjCIncompatible`. Contact us if you need to use them under J2ObjC. PiperOrigin-RevId: 533564397 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 19 May 2023 15:26:37 -0700"
  },
  {
    "commitHash": "3a8d7e4539bc6f23ee7a01202ddc6808be932149",
    "parent": "b4828647b1757c5b5bb1499489e2c30609ea221b",
    "subject": "Add unit test for untested CharMatcher.retainFrom() method.",
    "sanitized_subject_line": "Add-unit-test-for-untested-CharMatcher.retainFrom-method",
    "commit_notes": "",
    "body": "Fixes #6500 Fixes #6069  RELNOTES=n/a PiperOrigin-RevId: 532889411 ",
    "author_name": "Konstantin Goldman",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 17 May 2023 13:34:50 -0700"
  },
  {
    "commitHash": "b4828647b1757c5b5bb1499489e2c30609ea221b",
    "parent": "a5892560de926b0ab01ba2614f5002ff547a32a2",
    "subject": "Remove a stale `@Beta` annotation from the GWT copy of `SortedMultiset`.",
    "sanitized_subject_line": "Remove-a-stale-Beta-annotation-from-the-GWT-copy-of-SortedMultiset",
    "commit_notes": "",
    "body": "The class was promoted from `@Beta` back in 2016 in cl/134817353.  RELNOTES=n/a PiperOrigin-RevId: 532881524 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 17 May 2023 13:10:19 -0700"
  },
  {
    "commitHash": "a5892560de926b0ab01ba2614f5002ff547a32a2",
    "parent": "a3571b408f05950cf6988c7d4da59467e5f09e18",
    "subject": "Remove `@Beta` from various `io` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-io-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`io`: Remove `@Beta` from various `io` APIs. PiperOrigin-RevId: 532782558 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 17 May 2023 07:35:11 -0700"
  },
  {
    "commitHash": "a3571b408f05950cf6988c7d4da59467e5f09e18",
    "parent": "b561eb14c253ccb05b0789a23e7ea3a54413bc91",
    "subject": "Remove `@Beta` from various `MoreExecutors` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-MoreExecutors-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`concurrent`: Remove `@Beta` from various `MoreExecutors` APIs. PiperOrigin-RevId: 532635013 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 16 May 2023 18:43:02 -0700"
  },
  {
    "commitHash": "b561eb14c253ccb05b0789a23e7ea3a54413bc91",
    "parent": "9f476d8ad2483b3fb7e102f70c3fdfb11ab4be72",
    "subject": "Remove `@Beta` from `Parameter` (except `getAnnotatedType()`).",
    "sanitized_subject_line": "Remove-Beta-from-Parameter-except-getAnnotatedType",
    "commit_notes": "",
    "body": "RELNOTES=`reflect`: Remove `@Beta` from `Parameter` (except `getAnnotatedType()`). PiperOrigin-RevId: 532580251 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 16 May 2023 14:52:07 -0700"
  },
  {
    "commitHash": "9f476d8ad2483b3fb7e102f70c3fdfb11ab4be72",
    "parent": "4aaebca4e1f05891ec8e5ff0183cdde9894815f3",
    "subject": "Split comparator into it's own class.",
    "sanitized_subject_line": "Split-comparator-into-it-s-own-class",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 532480406 ",
    "author_name": "Mark Mann",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 16 May 2023 09:20:15 -0700"
  },
  {
    "commitHash": "4aaebca4e1f05891ec8e5ff0183cdde9894815f3",
    "parent": "b331769af3f2e00c5046ed0fe79c5ec22e3fd0bf",
    "subject": "Annotate `firstNonNull` as permitting nullable values for its second parameter.",
    "sanitized_subject_line": "Annotate-firstNonNull-as-permitting-nullable-values-for-its-second-parameter",
    "commit_notes": "",
    "body": "It has permitted them at runtime since the beginning, and that's intentional. (This CL also adds a test, which somehow we didn't have for all these years? _And_ somehow the tests that we did have weren't open-sourced, so this CL open-sources them.) And based on testing, I can say: Many callers pass not only values whose static type is nullable but also whose _actual runtime value_ is `null`. I don't have my testing results handy anymore, so I don't have a real-world example to share right now, but you can imagine something like this:  ```java for (Key key : union(map1.keySet(), map2.keySet()) {   Value value = firstNonNull(map1.get(key), map2.get(key)); } ```  RELNOTES=n/a PiperOrigin-RevId: 531596646 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 13:56:37 -0700"
  },
  {
    "commitHash": "b331769af3f2e00c5046ed0fe79c5ec22e3fd0bf",
    "parent": "3da34f983be8adfb2df893f6d3cd8faf95e2b3cb",
    "subject": "Remove `@Beta` from various `testing` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-testing-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`testing`: Remove `@Beta` from various `testing` APIs. PiperOrigin-RevId: 531573028 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 12:22:18 -0700"
  },
  {
    "commitHash": "3da34f983be8adfb2df893f6d3cd8faf95e2b3cb",
    "parent": "bbaf76a1996e7faa3e0d53e56bb382524f13759e",
    "subject": "Add some nullness annotations to `MapMakerInternalMap`.",
    "sanitized_subject_line": "Add-some-nullness-annotations-to-MapMakerInternalMap",
    "commit_notes": "",
    "body": "These were mostly return-type annotations identified by tools, but I made a few small additions myself.  RELNOTES=n/a PiperOrigin-RevId: 531569431 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 12:08:29 -0700"
  },
  {
    "commitHash": "bbaf76a1996e7faa3e0d53e56bb382524f13759e",
    "parent": "74ad9b8a1f4e576708a62aa837babce3e6ce835a",
    "subject": "Remove `@Beta` from various `concurrent` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-concurrent-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`concurrent`: Remove `@Beta` from various `concurrent` APIs. PiperOrigin-RevId: 531559865 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 11:32:03 -0700"
  },
  {
    "commitHash": "74ad9b8a1f4e576708a62aa837babce3e6ce835a",
    "parent": "98820c77f9b025e472a11264f777430d5d163c19",
    "subject": "Remove `@Beta` from various `concurrent` testing APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-concurrent-testing-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`concurrent`: Remove `@Beta` from various `concurrent` testing APIs. PiperOrigin-RevId: 531554997 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 11:12:42 -0700"
  },
  {
    "commitHash": "98820c77f9b025e472a11264f777430d5d163c19",
    "parent": "912815e4e205d17a72975aad08e2f032f9af3796",
    "subject": "Remove `@Beta` from various `collect` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-collect-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Remove `@Beta` from various `collect` APIs. PiperOrigin-RevId: 531549473 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 10:52:55 -0700"
  },
  {
    "commitHash": "912815e4e205d17a72975aad08e2f032f9af3796",
    "parent": "fcec25f45ede9cd6c6f66cd066f8fa86a37b8b7e",
    "subject": "Remove `@Beta` from various `math`-related APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-math-related-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`math`: Remove `@Beta` from various `math`-related APIs. PiperOrigin-RevId: 531534926 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 10:02:53 -0700"
  },
  {
    "commitHash": "fcec25f45ede9cd6c6f66cd066f8fa86a37b8b7e",
    "parent": "ab4302aa53617801c43ddf0ba879fdd3cc5dca02",
    "subject": "Remove `@Beta` from various `primitive` collection APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-primitive-collection-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`primitive`: Remove `@Beta` from various `primitive` collection APIs. PiperOrigin-RevId: 531527817 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 09:34:24 -0700"
  },
  {
    "commitHash": "ab4302aa53617801c43ddf0ba879fdd3cc5dca02",
    "parent": "e5e0f660cc27b3473d67dded84418dee1c883fdf",
    "subject": "Remove `@Beta` from various `primitive`-related APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-primitive-related-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`primitive`: Remove `@Beta` from various `primitive`-related APIs. PiperOrigin-RevId: 531526245 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 09:27:10 -0700"
  },
  {
    "commitHash": "e5e0f660cc27b3473d67dded84418dee1c883fdf",
    "parent": "9760dbcd4c2809ed12ad66ab5b36705654337f4e",
    "subject": "Remove `@Beta` from various `Multimap`-related APIs.",
    "sanitized_subject_line": "Remove-Beta-from-various-Multimap-related-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Remove `@Beta` from various `Multimap`-related APIs. PiperOrigin-RevId: 531513501 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 08:32:44 -0700"
  },
  {
    "commitHash": "9760dbcd4c2809ed12ad66ab5b36705654337f4e",
    "parent": "cba0b0aa551be07650cdbc5d627bcf4f896611af",
    "subject": "Remove `@Beta` from `Forwarding[Foo]` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-Forwarding-Foo-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Remove `@Beta` from `Forwarding[Foo]` APIs. PiperOrigin-RevId: 531512286 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 May 2023 08:26:39 -0700"
  },
  {
    "commitHash": "cba0b0aa551be07650cdbc5d627bcf4f896611af",
    "parent": "667a9d4d4d441e11c409261d80ec84064b30b256",
    "subject": "Fix/suppress a few nullness mismatches.",
    "sanitized_subject_line": "Fix-suppress-a-few-nullness-mismatches",
    "commit_notes": "",
    "body": "We could still stand to give actual thought to the `util.concurrent` mismatches: - https://github.com/google/guava/issues/3566 - https://github.com/google/guava/issues/3568  Those two mismatches will be detected when we begin using a checker that contains [an annotated copy of `ThreadFactory`](https://github.com/jspecify/jdk/commit/24191c60ec8e82efd71295ee7d79ca0a7e0daa2b).  The mismatch in `MutableClassToInstanceMap` is currently not detected. That's a bug. But for some reason, it _is_ detected when we use type-use anntotations.  (I included _additional_ edits to `MutableClassToInstanceMap` and `ImmutableClassToInstanceMap`—specifically, in their `cast` methods. Those changes aren't necessary to the main change here. I had just started to change them to be consistent with the principle we'd discussed in cl/526184065, which is to use a non-null bound for a type parameter if all its usages would otherwise be projected. And then I realized that the second type parameter was serving no purpose, so I simplified further.)  RELNOTES=n/a PiperOrigin-RevId: 531012514 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 10 May 2023 14:56:03 -0700"
  },
  {
    "commitHash": "667a9d4d4d441e11c409261d80ec84064b30b256",
    "parent": "d6fdda3dcb04033ce246f27b988d68dbedf71d09",
    "subject": "Add \"Sec-CH-UA-Form-Factor\" header.",
    "sanitized_subject_line": "Add-Sec-CH-UA-Form-Factor-header",
    "commit_notes": "",
    "body": "Spec: https://wicg.github.io/ua-client-hints/#sec-ch-ua-form-factor RELNOTES=N/A PiperOrigin-RevId: 530934762 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 10 May 2023 09:53:12 -0700"
  },
  {
    "commitHash": "d6fdda3dcb04033ce246f27b988d68dbedf71d09",
    "parent": "aeba1e1b2d7f34bc972c74c9eccb1b2826e88514",
    "subject": "Internal build change",
    "sanitized_subject_line": "Internal-build-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 530921563 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 10 May 2023 09:00:00 -0700"
  },
  {
    "commitHash": "aeba1e1b2d7f34bc972c74c9eccb1b2826e88514",
    "parent": "7d41e19636a1c0e6fbf9275ef1f76f471ab71189",
    "subject": "Publish Proguard configs as part of Guava.",
    "sanitized_subject_line": "Publish-Proguard-configs-as-part-of-Guava",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/2117  RELNOTES=The published Guava jar now includes Proguard configurations that are picked up automatically by the Android Gradle Plugin. This should help with warnings that were promoted to errors in Android Gradle Plugin 8.x. PiperOrigin-RevId: 530451845 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 8 May 2023 17:29:01 -0700"
  },
  {
    "commitHash": "7d41e19636a1c0e6fbf9275ef1f76f471ab71189",
    "parent": "b0d85c3cd6a12bb7038ddbaa100c34146dca6dbc",
    "subject": "Include `LICENSE` in the generated jar under `META-INF`.",
    "sanitized_subject_line": "Include-LICENSE-in-the-generated-jar-under-META-INF",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/6468  I'd looked at [how Guice does this](https://github.com/google/guice/blob/40a5bcfab5cfe45c3b6c5ffc9309b310df82775b/pom.xml#L255-L273), which pulls the Apache license from a remote server (and also generates additional `DEPENDENCIES` and `NOTICE` files). But I figured it was simplest to just point `maven-resources-plugin` at our local `LICENSE` file: `maven-resources-plugin` can work with any license, whereas I'm not sure if Guice's `apache-jar-resource-bundle` approach can. Plus, I want to figure `maven-resources-plugin` out, anyway, for [Proguard purposes](https://github.com/google/guava/issues/2117).  Conveniently, I'm pretty confident that our existing `resources` configuration isn't necessary: Maybe it was years ago, but nowadays, we have no results for `find */src android/*/src -type f -not -name '*.java'` (except under `guava-gwt`, which overrides `resources` and which I verified builds an identical jar after this change).  RELNOTES=n/a PiperOrigin-RevId: 530360631 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 8 May 2023 11:37:38 -0700"
  },
  {
    "commitHash": "b0d85c3cd6a12bb7038ddbaa100c34146dca6dbc",
    "parent": "7d9fac21026ad2ba2606ad9b798de497d67c5f75",
    "subject": "Stop recognizing `@ParametricNullness` annotations in `NullPointerTester`.",
    "sanitized_subject_line": "Stop-recognizing-ParametricNullness-annotations-in-NullPointerTester",
    "commit_notes": "",
    "body": "Those annotations are temporary, so we haven't wanted to rely on them. We were relying on them anyway in `NullPointerTester` because we couldn't use type-use annotations at all in the backport and, even after we could use them, we couldn't rely on the backport's copy of `NullPointerTester` to recognize them. But those concerns are resolved as of cl/524904788.  This requires a workaround in one test to avoid a JDK bug. At that point, as you'd expect, our tests pass even if we remove `@ParametricNullness` entirely.  PiperOrigin-RevId: 530341970 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 8 May 2023 10:33:40 -0700"
  },
  {
    "commitHash": "7d9fac21026ad2ba2606ad9b798de497d67c5f75",
    "parent": "5341ee10b4c0468bd28ba9a942be36f9a19bbd2c",
    "subject": "Bump github/codeql-action from 2.3.2 to 2.3.3",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.3.2-to-2.3.3",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.3.2 to 2.3.3. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/f3feb00acb00f31a6f60280e6ace9ca31d91c76a...29b1f65c5e92e24fe6b6647da1eaabe529cec70f)  Fixes #6472  RELNOTES=n/a PiperOrigin-RevId: 529771094 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 5 May 2023 11:35:26 -0700"
  },
  {
    "commitHash": "5341ee10b4c0468bd28ba9a942be36f9a19bbd2c",
    "parent": "624c17fc201d441c1d8ac6b7382e2939c99b67ac",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 529517438 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 4 May 2023 14:38:53 -0700"
  },
  {
    "commitHash": "624c17fc201d441c1d8ac6b7382e2939c99b67ac",
    "parent": "4fccd1829277fd04fa47e7ed5e04c980418da85a",
    "subject": "Split the Android-incompatible tests for `FileBackedOutputStream` into a separate file.",
    "sanitized_subject_line": "Split-the-Android-incompatible-tests-for-FileBackedOutputStream-into-a-separate-file",
    "commit_notes": "",
    "body": "This makes it easier to run the remaining tests a second time under a newer Android emulator in our internal tests.  RELNOTES=n/a PiperOrigin-RevId: 529420259 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 4 May 2023 08:48:57 -0700"
  },
  {
    "commitHash": "4fccd1829277fd04fa47e7ed5e04c980418da85a",
    "parent": "b0cc461da5d4ffbe078ed627e5f93942090ea5ca",
    "subject": "Internal build change",
    "sanitized_subject_line": "Internal-build-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 529350166 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 4 May 2023 02:41:29 -0700"
  },
  {
    "commitHash": "b0cc461da5d4ffbe078ed627e5f93942090ea5ca",
    "parent": "3b2ad2ea25bdeeca4e0a41d9c3a0db889d57f2a2",
    "subject": "Remove `@Beta` from `com.google.common.base` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-com.google.common.base-APIs",
    "commit_notes": "",
    "body": "RELNOTES=`base`: Remove `@Beta` from `com.google.common.base` APIs. PiperOrigin-RevId: 528547846 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 1 May 2023 12:48:29 -0700"
  },
  {
    "commitHash": "3b2ad2ea25bdeeca4e0a41d9c3a0db889d57f2a2",
    "parent": "df09bab89c2547604f73e3c9ea2f0fe7af64faae",
    "subject": "Internal change",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 528504580 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 1 May 2023 10:20:04 -0700"
  },
  {
    "commitHash": "df09bab89c2547604f73e3c9ea2f0fe7af64faae",
    "parent": "d4bd0c5ffa913104283e61aeb2c41bac641af042",
    "subject": "Bump github/codeql-action from 2.3.0 to 2.3.2",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.3.0-to-2.3.2",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.3.0 to 2.3.2. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/b2c19fb9a2a485599ccf4ed5d65527d94bc57226...f3feb00acb00f31a6f60280e6ace9ca31d91c76a)  Fixes #6462  RELNOTES=n/a PiperOrigin-RevId: 528029416 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 28 Apr 2023 17:48:19 -0700"
  },
  {
    "commitHash": "d4bd0c5ffa913104283e61aeb2c41bac641af042",
    "parent": "1b9849143b4a5e555ff40663340aaf656390a430",
    "subject": "Internal build change",
    "sanitized_subject_line": "Internal-build-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 527351630 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 26 Apr 2023 13:07:17 -0700"
  },
  {
    "commitHash": "1b9849143b4a5e555ff40663340aaf656390a430",
    "parent": "364aed58e083e305f3f9ffc5bcacf9536f2472ab",
    "subject": "Bump github/codeql-action from 2.2.12 to 2.3.0",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.2.12-to-2.3.0",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.2.12 to 2.3.0. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/7df0ce34898d659f95c0c4a09eaa8d4e32ee64db...b2c19fb9a2a485599ccf4ed5d65527d94bc57226)  Fixes #6452  RELNOTES=n/a PiperOrigin-RevId: 527018272 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 25 Apr 2023 11:07:04 -0700"
  },
  {
    "commitHash": "364aed58e083e305f3f9ffc5bcacf9536f2472ab",
    "parent": "f9e5c5d82a09a9d2c49a4e6c09aa08df04f0c217",
    "subject": "Split the tests for `Files.createTempDir` into a separate file.",
    "sanitized_subject_line": "Split-the-tests-for-Files.createTempDir-into-a-separate-file",
    "commit_notes": "",
    "body": "This makes it easier to run them a second time under a newer Android emulator in our internal tests.  RELNOTES=n/a PiperOrigin-RevId: 526998248 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 25 Apr 2023 10:03:09 -0700"
  },
  {
    "commitHash": "f9e5c5d82a09a9d2c49a4e6c09aa08df04f0c217",
    "parent": "a568b283781a5b8afd7f09a66b0b4f6b439931ad",
    "subject": "Add @NullMarked to the testing package, except for some @GwtIncompatible classes with non-obvious adjustment requirements.",
    "sanitized_subject_line": "Add-NullMarked-to-the-testing-package-except-for-some-GwtIncompatible-classes-with-non-obvious-adjustment-requirements",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 526930990 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 25 Apr 2023 04:57:12 -0700"
  },
  {
    "commitHash": "a568b283781a5b8afd7f09a66b0b4f6b439931ad",
    "parent": "6ef944c2958b95ba0e356b4a7781ddb330e8de09",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 526744340 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 24 Apr 2023 13:50:49 -0700"
  },
  {
    "commitHash": "6ef944c2958b95ba0e356b4a7781ddb330e8de09",
    "parent": "0978658114ab5a0e0010f7738bd48281cd6b30ca",
    "subject": "Standardize parameter names in `Preconditions`.",
    "sanitized_subject_line": "Standardize-parameter-names-in-Preconditions",
    "commit_notes": "",
    "body": "Closes https://github.com/google/guava/pull/6443.  RELNOTES=n/a PiperOrigin-RevId: 526663031 ",
    "author_name": "xumengqi",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 24 Apr 2023 09:19:02 -0700"
  },
  {
    "commitHash": "0978658114ab5a0e0010f7738bd48281cd6b30ca",
    "parent": "54cc1fdd02e81cbca4ddfa94a76fc91a641dbc21",
    "subject": "Bump and simplify a dep and a plugin.",
    "sanitized_subject_line": "Bump-and-simplify-a-dep-and-a-plugin",
    "commit_notes": "",
    "body": "The main motivation to this CL is to pick up [a fix to Animal Sniffer](https://github.com/mojohaus/animal-sniffer/pull/212): The old version of Animal Sniffer ignores suppression annotations when it looks at fields, and that was causing me problems as I tried to use a field of type `FileAttribute`.  While I was at it, I ran the usual command for updating deps (but not plugins), as documented in cl/503506407.  And then, I inlined a couple properties into the `dependencyManagement` entries that used them. We'd introduced the properties because we used to use multiple artifacts that were released together. However, we don't use multiple artifacts with those properties anymore: - We stopped using the Animal Sniffer _annotations_ way back in cl/273964192, leaving only the Animal Sniffer plugin. - We stopped using the Checker Framework's `compat-qual` annotations back in cl/399471446 - cl/399480336, leaving only the main `qual` annotations.   - But we had temporarily introduced a usage of the `sources` artifact for `qual` in cl/364918297. We removed the usage of it in cl/399190627 but left behind the `dependencyManagement` entry. So this CL removes that, too.  (It's possible that we'd want to move away from using properties for versions in general: While Guava doesn't use Dependabot for `pom.xml` updates (only for GitHub Actions updates, which are easily for our tools to import), we can still update all deps by running a command. So we're not stuck hand-editing multiple locations, and thus all the property provides a layer of indirection. However, until we have a way to automatically update _plugins_, there is some sense in using properties for _plugin_ versions. Or at least there's sense in it for any properties that we still need to use in multiple places. But we might not need to use many (any?) in multiple places anymore, since we finally solved the mystery of why our `pluginManagement` section wasn't being respected back in cl/492304151....)  RELNOTES=n/a PiperOrigin-RevId: 526651811 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 24 Apr 2023 08:35:39 -0700"
  },
  {
    "commitHash": "54cc1fdd02e81cbca4ddfa94a76fc91a641dbc21",
    "parent": "2b98d3c1e96b750dc997c29f283084aeb72fb3cf",
    "subject": "Fix open-source GWT build after cl/526184065.",
    "sanitized_subject_line": "Fix-open-source-GWT-build-after-cl-526184065",
    "commit_notes": "",
    "body": "Our internal build required a new `.gwt.xml` line because of the new usages of Checker Framework annotations. However, that line refers to a module that is generated by our internal build system, not one that exists externally.  Normally, our external CI would catch this problem. However, because cl/526184065 contained not only a change to Guava but also a change to our internal build of the Checker Framework annotations, I had tested it by re-importing the Checker Framework annotations (to ensure that imports wouldn't blow away my changes). And that caused Copybara to add a GIT_ORIGIN_REV_ID tag to the CL. And _that_ caused Copybara to skip the external CI for the PR it generated.  RELNOTES=n/a PiperOrigin-RevId: 526630833 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 24 Apr 2023 07:08:06 -0700"
  },
  {
    "commitHash": "2b98d3c1e96b750dc997c29f283084aeb72fb3cf",
    "parent": "edabd32d7260a55a10f18233e29c5f9294c079c5",
    "subject": "Reannotate `ClassToInstanceMap` and `TypeToInstanceMap` to use `Class<@NonNull ...>`.",
    "sanitized_subject_line": "Reannotate-ClassToInstanceMap-and-TypeToInstanceMap-to-use-Class-NonNull",
    "commit_notes": "",
    "body": "(prompted by the mention of `Class` types in cl/519736884)  This lets us express that they can contain null values.  See discussion in https://github.com/jspecify/jspecify/issues/86#issuecomment-1030308383  RELNOTES=n/a PiperOrigin-RevId: 526184065 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 21 Apr 2023 18:15:23 -0700"
  },
  {
    "commitHash": "edabd32d7260a55a10f18233e29c5f9294c079c5",
    "parent": "58eaef7affbbb1418bfab0975bf62551b83478ad",
    "subject": "Include various filesystem-related tests when we test under an Android emulator.",
    "sanitized_subject_line": "Include-various-filesystem-related-tests-when-we-test-under-an-Android-emulator",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 526118501 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 21 Apr 2023 13:17:27 -0700"
  },
  {
    "commitHash": "58eaef7affbbb1418bfab0975bf62551b83478ad",
    "parent": "8f8082e96b12202dcef32cc2b7c4c91e6ba1b72b",
    "subject": "Use lambdas, and add one nullness annotation.",
    "sanitized_subject_line": "Use-lambdas-and-add-one-nullness-annotation",
    "commit_notes": "",
    "body": "This marginally decreases the amount of code we'll have to annotate for nullness.  I tried using lambdas in some other files that contained both (a) a comparison to `null` and (b) an `@Override`, but none of the other results looked helpful for nullness purposes. That's not to say that lambdas wouldn't be nicer in many cases, just that I didn't want to sort those out from the cases that, e.g., [really needed a new instance](https://github.com/google/guava/blob/8f8082e96b12202dcef32cc2b7c4c91e6ba1b72b/guava-tests/test/com/google/common/util/concurrent/AbstractScheduledServiceTest.java#L376).  PiperOrigin-RevId: 525971904 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 21 Apr 2023 01:57:47 -0700"
  },
  {
    "commitHash": "8f8082e96b12202dcef32cc2b7c4c91e6ba1b72b",
    "parent": "ffc288ae5afaf052c45fad7368a75af0c8eaccba",
    "subject": "Add some automatically suggested nullness annotations.",
    "sanitized_subject_line": "Add-some-automatically-suggested-nullness-annotations",
    "commit_notes": "",
    "body": "...plus one manual annotation in `AbstractIteratorTester.IteratorOperation`.  RELNOTES=n/a PiperOrigin-RevId: 525707377 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 20 Apr 2023 04:19:03 -0700"
  },
  {
    "commitHash": "ffc288ae5afaf052c45fad7368a75af0c8eaccba",
    "parent": "9e21d609f25b60dfbc9da7c3de0281c6c766eab8",
    "subject": "Apply `ReturnMissingNullable` suggestions.",
    "sanitized_subject_line": "Apply-ReturnMissingNullable-suggestions",
    "commit_notes": "",
    "body": "I reverted various files but didn't keep a good record of which ones....  PiperOrigin-RevId: 525517556 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 19 Apr 2023 12:24:36 -0700"
  },
  {
    "commitHash": "9e21d609f25b60dfbc9da7c3de0281c6c766eab8",
    "parent": "823a9eab18b22d5e95b5431e043ebb67b5442978",
    "subject": "Don't use \"`return null`\" for code that should fail the test if it is reached, round 2.",
    "sanitized_subject_line": "Don-t-use-return-null-for-code-that-should-fail-the-test-if-it-is-reached-round-2",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 525516780 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 19 Apr 2023 12:19:12 -0700"
  },
  {
    "commitHash": "823a9eab18b22d5e95b5431e043ebb67b5442978",
    "parent": "ec857b17953b2f33dd9c4a93a78c716021ef8d1b",
    "subject": "Manually annotate yet more type arguments as `@Nullable`.",
    "sanitized_subject_line": "Manually-annotate-yet-more-type-arguments-as-Nullable",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 525082398 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 18 Apr 2023 02:04:46 -0700"
  },
  {
    "commitHash": "ec857b17953b2f33dd9c4a93a78c716021ef8d1b",
    "parent": "8f0fda7c55cbcd83086fca7d234fc4e83cab8e17",
    "subject": "Manually annotate some type arguments as `@Nullable`.",
    "sanitized_subject_line": "Manually-annotate-some-type-arguments-as-Nullable",
    "commit_notes": "",
    "body": "Occasionally I've also touched some code nearby.  RELNOTES=n/a PiperOrigin-RevId: 524929844 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 13:18:53 -0700"
  },
  {
    "commitHash": "8f0fda7c55cbcd83086fca7d234fc4e83cab8e17",
    "parent": "cc924424c157ed99cd0ac66c9597f59e32eff13b",
    "subject": "Use type-use `@Nullable` instead of declaration `@CheckForNull` in the remaining guava-android sources (mostly testing utilities).",
    "sanitized_subject_line": "Use-type-use-Nullable-instead-of-declaration-CheckForNull-in-the-remaining-guava-android-sources-mostly-testing-utilities",
    "commit_notes": "",
    "body": "guava-android was using `@CheckForNull` because it couldn't use type-use annotations when it targeted Java 7. Now that [it's built with `-source 8 -target 8`](https://github.com/google/guava/issues/5269), we can use type-use annotations.  RELNOTES=n/a PiperOrigin-RevId: 524912499 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 12:08:55 -0700"
  },
  {
    "commitHash": "cc924424c157ed99cd0ac66c9597f59e32eff13b",
    "parent": "3f039fc6ad1edc4ac4a8284b8159310d0844542f",
    "subject": "Disable `NullPointerTester` when `com.google.common` is being tested under Android VMs.",
    "sanitized_subject_line": "Disable-NullPointerTester-when-com.google.common-is-being-tested-under-Android-VMs",
    "commit_notes": "",
    "body": "As we already started to see in cl/522315614, it can't work there with type-use annotations. So, when more type-use annotations appear in cl/522310996, we'd see more failures.  `NullPointerTester` will continue to run when guava-android is tested _under a JRE_, including in our open-source tests. All that this CL affects is the additional Android-emulator tests that we run on Google infrastructure. And while it's _nice_ to run all our tests under an emulator, their _primary_ purpose is to check for usages of APIs that aren't available under old versions of Android, not to look for differences in null-handling behavior between Android and JRE (which is possible but relatively unlikely).  A more principled approach would be to edit every test that _uses_ `NullPointerTester` to skip the test under Android VMs. However, this would require editing 100+ files. And it would actually require editing even _more_: In every package that we define a `PackageSanityTests` class, `NullPointerTester` runs automatically on every class `Foo` in the package _unless_ `AbstractPackageSanityTests` finds that we've defined a method like `FooTest.testNulls()`. Thus, we'd likely have to define dozens more such methods. And those new methods may be not completely trivial in some cases, if I'm remembering how much `PackageSanityTests` does automatically (to, e.g., construct instances of the class to test against). Finally, if it helps, we did something similar to silently disable `SerializableTester` under GWT way back in cl/25672151, though I'm not sure I'd stand by that one today, since we could have modified _that_ class's users to skip the testing under GWT more easily :)  In a fun twist, we have to keep the `@AndroidIncompatible` annotations in `ClassSanityTesterTest` and `NullPointerTesterTest`: - Before, those tests failed because they didn't see type-use `@Nullable` annotations and thus tried to pass `null` where it wasn't valid. - Now, those tests fail because they try to make `NullPointerTester` fail on badly annotated classes, but it doesn't fail because it's doesn't run at all!  RELNOTES=n/a PiperOrigin-RevId: 524904788 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 11:39:38 -0700"
  },
  {
    "commitHash": "3f039fc6ad1edc4ac4a8284b8159310d0844542f",
    "parent": "378386b876697c48a919f633cb8b0383bb47c795",
    "subject": "Manually annotate some more type arguments as `@Nullable`.",
    "sanitized_subject_line": "Manually-annotate-some-more-type-arguments-as-Nullable",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 524863563 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 09:13:32 -0700"
  },
  {
    "commitHash": "378386b876697c48a919f633cb8b0383bb47c795",
    "parent": "362c1932d95980387f9692a0f3cc57700671a8f2",
    "subject": "Bump actions/checkout from 3.5.1 to 3.5.2",
    "sanitized_subject_line": "Bump-actions-checkout-from-3.5.1-to-3.5.2",
    "commit_notes": "",
    "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 3.5.1 to 3.5.2. - [Release notes](https://github.com/actions/checkout/releases) - [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md) - [Commits](https://github.com/actions/checkout/compare/83b7061638ee4956cf7545a6f7efe594e5ad0247...8e5e7e5ab8b370d6c329ec480221332ada57f0ab)  Fixes #6419  RELNOTES=n/a PiperOrigin-RevId: 524860708 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 09:03:10 -0700"
  },
  {
    "commitHash": "362c1932d95980387f9692a0f3cc57700671a8f2",
    "parent": "481aedb1ca1d835d82e357c92aa7537a65d7a1bb",
    "subject": "Apply `EqualsMissingNullable` suggestions.",
    "sanitized_subject_line": "Apply-EqualsMissingNullable-suggestions",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 524857556 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 08:49:06 -0700"
  },
  {
    "commitHash": "481aedb1ca1d835d82e357c92aa7537a65d7a1bb",
    "parent": "194c6f09fab44d6720ed8cfb8cfb3235447eae08",
    "subject": "Apply conservative `FieldMissingNullable` suggestions.",
    "sanitized_subject_line": "Apply-conservative-FieldMissingNullable-suggestions",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 524851421 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 08:19:38 -0700"
  },
  {
    "commitHash": "194c6f09fab44d6720ed8cfb8cfb3235447eae08",
    "parent": "a0a77f482aa55187e601a87daf08e411a8102f48",
    "subject": "Apply `VoidMissingNullable` suggestions.",
    "sanitized_subject_line": "Apply-VoidMissingNullable-suggestions",
    "commit_notes": "",
    "body": "I reverted `TypeTokenTest`, which uses a `TypeToken<Void>`, which I'd need to think more about.  PiperOrigin-RevId: 524844712 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 07:48:57 -0700"
  },
  {
    "commitHash": "a0a77f482aa55187e601a87daf08e411a8102f48",
    "parent": "742492a4bd1720a9356cda252c9f94ef893a72e6",
    "subject": "Refactor - Make Anonymous inner classes lambda",
    "sanitized_subject_line": "Refactor-Make-Anonymous-inner-classes-lambda",
    "commit_notes": "",
    "body": "This copy of #6424 omits the change to `CacheBuilder`, as discussed in an existing comment in that file. It also omits the change to `LongAddables`, partially to keep that file closer to upstream and partially because a comment in that file discusses classloading, which might (for all I know) differ between anonymous classes and lambdas.  Fixes #6424  RELNOTES=n/a PiperOrigin-RevId: 524835176 ",
    "author_name": "prasanthomanakuttan",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 06:59:28 -0700"
  },
  {
    "commitHash": "742492a4bd1720a9356cda252c9f94ef893a72e6",
    "parent": "585d659b7b7f863ab0ee2bcf06037b8bc2f1b768",
    "subject": "Don't use \"`return null`\" for code that is unreachable, for code that should fail the test if it is reached, or for producing \"don't care\" values where it's not appropriate.",
    "sanitized_subject_line": "Don-t-use-return-null-for-code-that-is-unreachable-for-code-that-should-fail-the-test-if-it-is-reached-or-for-producing-don-t-care-values-where-it-s-not-appropriate",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 524821833 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 05:41:04 -0700"
  },
  {
    "commitHash": "585d659b7b7f863ab0ee2bcf06037b8bc2f1b768",
    "parent": "b2d2c3bad4c1b07754af9b92ab486fe61947fee2",
    "subject": "Apply `ParameterMissingNullable` suggestions.",
    "sanitized_subject_line": "Apply-ParameterMissingNullable-suggestions",
    "commit_notes": "",
    "body": "I reverted `CycleDetectingLockFactoryTest`, whose `assertContainsRegex` contains a null check that I don't think we need.  PiperOrigin-RevId: 524808839 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 04:19:47 -0700"
  },
  {
    "commitHash": "b2d2c3bad4c1b07754af9b92ab486fe61947fee2",
    "parent": "7a56cefdd14a3454c7b481d45182105612600f99",
    "subject": "Use Truth in `CycleDetectingLockFactoryTest`.",
    "sanitized_subject_line": "Use-Truth-in-CycleDetectingLockFactoryTest",
    "commit_notes": "",
    "body": "This was motivated by my noticing an impossible null check in the custom helper method that this CL renders unnecessary.  PiperOrigin-RevId: 524806663 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Apr 2023 04:07:15 -0700"
  },
  {
    "commitHash": "7a56cefdd14a3454c7b481d45182105612600f99",
    "parent": "45934729cfedc50c775e3edd68f34ec0b979cc5b",
    "subject": "Call the next version \"32.0.0\" instead of \"32.0.\"",
    "sanitized_subject_line": "Call-the-next-version-32.0.0-instead-of-32.0",
    "commit_notes": "",
    "body": "(followup to cl/522214387, related to cl/499230432)  RELNOTES=n/a PiperOrigin-RevId: 524299635 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 14 Apr 2023 08:41:36 -0700"
  },
  {
    "commitHash": "45934729cfedc50c775e3edd68f34ec0b979cc5b",
    "parent": "486b2f40bbf5069858e2b629a4b9fc0336a4fc54",
    "subject": "Bump github/codeql-action from 2.2.11 to 2.2.12",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.2.11-to-2.2.12",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.2.11 to 2.2.12. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/d186a2a36cc67bfa1b860e6170d37fb9634742c7...7df0ce34898d659f95c0c4a09eaa8d4e32ee64db)  Fixes #6420  RELNOTES=n/a PiperOrigin-RevId: 524037905 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 13 Apr 2023 10:30:45 -0700"
  },
  {
    "commitHash": "486b2f40bbf5069858e2b629a4b9fc0336a4fc54",
    "parent": "b9a2d585036cea823900940e34ab8f8836eb1e19",
    "subject": "Bump actions/checkout from 3.5.0 to 3.5.1",
    "sanitized_subject_line": "Bump-actions-checkout-from-3.5.0-to-3.5.1",
    "commit_notes": "",
    "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 3.5.0 to 3.5.1. - [Release notes](https://github.com/actions/checkout/releases) - [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md) - [Commits](https://github.com/actions/checkout/compare/v3.5.0...83b7061638ee4956cf7545a6f7efe594e5ad0247)  Fixes #6417  RELNOTES=n/a PiperOrigin-RevId: 523758835 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 12 Apr 2023 11:37:49 -0700"
  },
  {
    "commitHash": "b9a2d585036cea823900940e34ab8f8836eb1e19",
    "parent": "15a0c9fd57b1f912bbaa95d748c01b156b45c651",
    "subject": "Remove `@Beta` from `FluentFuture`.",
    "sanitized_subject_line": "Remove-Beta-from-FluentFuture",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3419  RELNOTES=`concurrent`: Remove `@Beta` from `FluentFuture`. PiperOrigin-RevId: 523466140 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 11 Apr 2023 12:08:44 -0700"
  },
  {
    "commitHash": "15a0c9fd57b1f912bbaa95d748c01b156b45c651",
    "parent": "aadc99df745ce8e5209ac23298c00f848e825c27",
    "subject": "Remove `@Beta` from `Futures`.",
    "sanitized_subject_line": "Remove-Beta-from-Futures",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3403 https://github.com/google/guava/issues/1519 https://github.com/google/guava/issues/1421 https://github.com/google/guava/issues/3424  RELNOTES=`concurrent`: Remove `@Beta` from `Futures`. PiperOrigin-RevId: 523465435 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 11 Apr 2023 12:03:24 -0700"
  },
  {
    "commitHash": "aadc99df745ce8e5209ac23298c00f848e825c27",
    "parent": "b240e8ce14779629c9c098f2aed5bc7228b34d42",
    "subject": "Mention future-converter from `JdkFutureAdapters`.",
    "sanitized_subject_line": "Mention-future-converter-from-JdkFutureAdapters",
    "commit_notes": "",
    "body": "(as proposed [a while back](https://github.com/google/guava/issues/2350#issuecomment-823263913))  RELNOTES=n/a PiperOrigin-RevId: 523455618 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 11 Apr 2023 11:23:48 -0700"
  },
  {
    "commitHash": "b240e8ce14779629c9c098f2aed5bc7228b34d42",
    "parent": "ee57f461bef01511c1059edbb12f91fdfcd32b81",
    "subject": "Remove `@Beta` from `UnsignedLongs`.",
    "sanitized_subject_line": "Remove-Beta-from-UnsignedLongs",
    "commit_notes": "",
    "body": "https://github.com/google/guava/issues/3420  RELNOTES=`concurrent`: Remove `@Beta` from `UnsignedLongs`. PiperOrigin-RevId: 523437660 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 11 Apr 2023 10:23:02 -0700"
  },
  {
    "commitHash": "ee57f461bef01511c1059edbb12f91fdfcd32b81",
    "parent": "a195f7d60444e3bf2e64c543a1900096ede2dfe1",
    "subject": "Add `@Beta` back to the new `Invokable.getAnnotatedReturnType` method of guava-android.",
    "sanitized_subject_line": "Add-Beta-back-to-the-new-Invokable.getAnnotatedReturnType-method-of-guava-android",
    "commit_notes": "",
    "body": "There is some chance that we will have to delete the method if we hear of problems under Android. And since it's a brand-new API _and_ it doesn't actually work under an Android VM, we know that we're affecting no existing users and possibly none even in the future.  RELNOTES=n/a PiperOrigin-RevId: 523212269 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 14:29:51 -0700"
  },
  {
    "commitHash": "a195f7d60444e3bf2e64c543a1900096ede2dfe1",
    "parent": "ba8ad69d031978fd6862623dae451133b04b6973",
    "subject": "Remove `@Beta` from `Invokable` and some methods in `TypeToken`.",
    "sanitized_subject_line": "Remove-Beta-from-Invokable-and-some-methods-in-TypeToken",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3051  RELNOTES=`reflect`: Remove `@Beta` from `Invokable` and some methods in `TypeToken`. PiperOrigin-RevId: 523204476 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 14:00:23 -0700"
  },
  {
    "commitHash": "ba8ad69d031978fd6862623dae451133b04b6973",
    "parent": "73b2f7bee02e69f95c1eab6c450a5e64a4f84497",
    "subject": "Remove `@Beta` from `Striped`.",
    "sanitized_subject_line": "Remove-Beta-from-Striped",
    "commit_notes": "",
    "body": "https://github.com/google/guava/issues/3253  RELNOTES=`concurrent`: Remove `@Beta` from `Striped`. PiperOrigin-RevId: 523203718 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 13:55:18 -0700"
  },
  {
    "commitHash": "73b2f7bee02e69f95c1eab6c450a5e64a4f84497",
    "parent": "fe12c81e79fc793b6956a47fe797a375b5591523",
    "subject": "Remove `@Beta` from `FluentIterable` APIs.",
    "sanitized_subject_line": "Remove-Beta-from-FluentIterable-APIs",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3426 and https://github.com/google/guava/issues/3425  RELNOTES=`collect`: Remove `@Beta` from `FluentIterable` APIs. PiperOrigin-RevId: 523202674 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 13:50:25 -0700"
  },
  {
    "commitHash": "fe12c81e79fc793b6956a47fe797a375b5591523",
    "parent": "48979309a541ef391f0e3f6c819a632b282fff0f",
    "subject": "Remove `@Beta` from `RangeMap`, `RangeSet`, and friends.",
    "sanitized_subject_line": "Remove-Beta-from-RangeMap-RangeSet-and-friends",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3376 and https://github.com/google/guava/pull/3380  RELNOTES=`collect`: Remove `@Beta` from `RangeMap`, `RangeSet`, and friends. PiperOrigin-RevId: 523172033 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 11:46:23 -0700"
  },
  {
    "commitHash": "48979309a541ef391f0e3f6c819a632b282fff0f",
    "parent": "61be35ce497856c27b608295ce36929161275116",
    "subject": "Remove `@Beta` from `ByteStreams`.",
    "sanitized_subject_line": "Remove-Beta-from-ByteStreams",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3239  RELNOTES=`io`: Remove `@Beta` from `ByteStreams`. PiperOrigin-RevId: 523159991 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 11:05:22 -0700"
  },
  {
    "commitHash": "61be35ce497856c27b608295ce36929161275116",
    "parent": "b3d48564c69bd8d2d7a66261094780891da39a22",
    "subject": "Remove `@Beta` from `ImmutableFoo.Builder.builderWithExpectedSize(...)`, `orderEntriesByValue(...)`, and `Entry`-related APIs.",
    "sanitized_subject_line": "Remove-Beta-from-ImmutableFoo.Builder.builderWithExpectedSize-.-orderEntriesByValue-.-and-Entry-related-APIs",
    "commit_notes": "",
    "body": "RELNOTES=Remove `@Beta` from `ImmutableFoo.Builder.builderWithExpectedSize(...)`, `orderEntriesByValue(...)`, and `Entry`-related APIs. PiperOrigin-RevId: 523143868 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 10:13:05 -0700"
  },
  {
    "commitHash": "b3d48564c69bd8d2d7a66261094780891da39a22",
    "parent": "df0081f28f1e90c5405da3206291c34e1111fb97",
    "subject": "Remove `@Beta` from `Longs.tryParse(...)` (and friends).",
    "sanitized_subject_line": "Remove-Beta-from-Longs.tryParse-.-and-friends",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6020  RELNOTES=`primitives`: Removed `@Beta` from `Longs.tryParse(...)` (and friends). PiperOrigin-RevId: 523143161 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 10:07:13 -0700"
  },
  {
    "commitHash": "df0081f28f1e90c5405da3206291c34e1111fb97",
    "parent": "211907cb8bbc3d115423d6f08236370791c23a53",
    "subject": "Remove `@Beta` from `Multimaps.asMap(...)`.",
    "sanitized_subject_line": "Remove-Beta-from-Multimaps.asMap",
    "commit_notes": "",
    "body": "RELNOTES=Remove `@Beta` from `Multimaps.asMap(...)`. PiperOrigin-RevId: 523141346 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 10:00:04 -0700"
  },
  {
    "commitHash": "211907cb8bbc3d115423d6f08236370791c23a53",
    "parent": "10504f27b84977e85dacb97bff3c0502dd5b9c5b",
    "subject": "Remove `@Beta` from `Utf8`.",
    "sanitized_subject_line": "Remove-Beta-from-Utf8",
    "commit_notes": "",
    "body": "RELNOTES=Remove `@Beta` from `Utf8`. PiperOrigin-RevId: 523109358 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Apr 2023 07:11:51 -0700"
  },
  {
    "commitHash": "10504f27b84977e85dacb97bff3c0502dd5b9c5b",
    "parent": "ae1465a0db94c5d8af8b8fb3d9a975bf381e08de",
    "subject": "Add OpenSSF Best Practices badge.",
    "sanitized_subject_line": "Add-OpenSSF-Best-Practices-badge",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 522684219 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 7 Apr 2023 14:29:25 -0700"
  },
  {
    "commitHash": "ae1465a0db94c5d8af8b8fb3d9a975bf381e08de",
    "parent": "4d2b6ffb312a4ebf8aa377982fc98a7ece0bc3fd",
    "subject": "Bump github/codeql-action from 2.2.10 to 2.2.11",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.2.10-to-2.2.11",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.2.10 to 2.2.11. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/8c8d71dde4abced210732d8486586914b97752e8...d186a2a36cc67bfa1b860e6170d37fb9634742c7)  Fixes #6395  RELNOTES=n/a PiperOrigin-RevId: 522626169 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 7 Apr 2023 10:27:12 -0700"
  },
  {
    "commitHash": "4d2b6ffb312a4ebf8aa377982fc98a7ece0bc3fd",
    "parent": "6b9ffc0cbfc06151a3cce2aa0ffd4a131a3b34c8",
    "subject": "Bump github/codeql-action from 2.2.9 to 2.2.10",
    "sanitized_subject_line": "Bump-github-codeql-action-from-2.2.9-to-2.2.10",
    "commit_notes": "",
    "body": "Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.2.9 to 2.2.10. - [Release notes](https://github.com/github/codeql-action/releases) - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md) - [Commits](https://github.com/github/codeql-action/compare/04df1262e6247151b5ac09cd2c303ac36ad3f62b...8c8d71dde4abced210732d8486586914b97752e8)  Fixes #6391  RELNOTES=n/a PiperOrigin-RevId: 522402279 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Apr 2023 12:18:51 -0700"
  },
  {
    "commitHash": "6b9ffc0cbfc06151a3cce2aa0ffd4a131a3b34c8",
    "parent": "8f4d1542d907c552ce420bc9e95b6c2112df4e9b",
    "subject": "Remove one bad `@Nullable` annotation from a GWT emulation.",
    "sanitized_subject_line": "Remove-one-bad-Nullable-annotation-from-a-GWT-emulation",
    "commit_notes": "",
    "body": "We haven't carefully annotated our GWT emulations at all, but this one incorrect annotation jumped out to me.  Compare [the non-GWT version](https://github.com/google/guava/blob/8f4d1542d907c552ce420bc9e95b6c2112df4e9b/guava/src/com/google/common/collect/AbstractSortedMultiset.java#L108). (Note that we don't need `@ParametricNullness` here, since GWT and j2cl don't need it.)  RELNOTES=n/a PiperOrigin-RevId: 522400873 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Apr 2023 12:13:39 -0700"
  },
  {
    "commitHash": "8f4d1542d907c552ce420bc9e95b6c2112df4e9b",
    "parent": "b30e73cfa81ad15c1023c17cfd083255a3df0105",
    "subject": "Use type-use `@Nullable` instead of declaration `@CheckForNull` in test sources.",
    "sanitized_subject_line": "Use-type-use-Nullable-instead-of-declaration-CheckForNull-in-test-sources",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 522315614 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Apr 2023 05:56:11 -0700"
  },
  {
    "commitHash": "b30e73cfa81ad15c1023c17cfd083255a3df0105",
    "parent": "33d9ff7ec0d868736d4248e4ff3531f5473bddac",
    "subject": "Make the guava-android copy of `NullPointerTester` read type-use annotations when they're available.",
    "sanitized_subject_line": "Make-the-guava-android-copy-of-NullPointerTester-read-type-use-annotations-when-they-re-available",
    "commit_notes": "",
    "body": "They're never available under an Android VM, but we also test guava-android under a JRE (which is always Java 8+ now, which makes our implementation job a bit easier), so the annotations _are_ available there.  This is a step toward letting us [use type-use annotations more widely in Guava](https://github.com/jspecify/jspecify/issues/239). In particular, it unblocks cl/521011962 (which in turn reduces the number of merge conflicts we'll see when using type-use annotations in our tests), and it helps our other testing of type-use annotations in Guava.  In order to implement this, I copied two methods that were previously only available in guava-jre to make them also available in guava-android for `NullPointerTester` there: `Invokable.getAnnotatedReturnType()` and `Parameter.getAnnotatedType()`. Those methods do not work under and Android VM (where, again, type-use annotations aren't available), but they're useful for running our tests under a JRE.  FYI: We did see one project that needed some new `-dontwarn` lines in [our Proguard config](https://github.com/google/guava/issues/2117) as a result of this CL. But we expect this to be unlikely, especially since reflection is typically a bad idea under Android. (An alternative approach would be for us to expose two _new_ methods that are similar to `getAnnotatedReturnType()` and `getAnnotatedType()` but that declare their return type as plain `Object`. That would be safer, but I think there's actually more value in testing the more aggressive approach: We'd like to someday be more aggressive about adding APIs that use Java 8+ types in guava-android, so it's nice to test them on low-stakes `@Beta` APIs that shouldn't be used from Android to begin with.)  On the plus side, we no longer need to perform reflection on account of j2objc: As planned in cl/367051816, j2objc was subsequently updated in cl/367072772 to contain stub implementations of the necessary `TypeVariable` methods.  RELNOTES=n/a PiperOrigin-RevId: 522214387 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Apr 2023 19:06:03 -0700"
  },
  {
    "commitHash": "33d9ff7ec0d868736d4248e4ff3531f5473bddac",
    "parent": "4280533eec9681031176f38abe41b77ebd4976e1",
    "subject": "Internal build change",
    "sanitized_subject_line": "Internal-build-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 521992214 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Apr 2023 02:18:40 -0700"
  },
  {
    "commitHash": "4280533eec9681031176f38abe41b77ebd4976e1",
    "parent": "27c54b01e9ea567ab6fc35d111c459a6676eaa09",
    "subject": "Internal Build Change",
    "sanitized_subject_line": "Internal-Build-Change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 521705309 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 4 Apr 2023 02:45:04 -0700"
  },
  {
    "commitHash": "27c54b01e9ea567ab6fc35d111c459a6676eaa09",
    "parent": "28ee96ff30059708233344186d91d9b7763eb553",
    "subject": "Bump ossf/scorecard-action from 2.1.2 to 2.1.3",
    "sanitized_subject_line": "Bump-ossf-scorecard-action-from-2.1.2-to-2.1.3",
    "commit_notes": "",
    "body": "Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 2.1.2 to 2.1.3. - [Release notes](https://github.com/ossf/scorecard-action/releases) - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md) - [Commits](https://github.com/ossf/scorecard-action/compare/e38b1902ae4f44df626f11ba0734b14fb91f8f86...80e868c13c90f172d68d1f4501dee99e2479f7af)  Fixes #6383  RELNOTES=n/a PiperOrigin-RevId: 521008160 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 31 Mar 2023 14:06:31 -0700"
  },
  {
    "commitHash": "28ee96ff30059708233344186d91d9b7763eb553",
    "parent": "e2ef6cf975cddc2c4d02dd592f40dd7d5d45ca91",
    "subject": "Nullness tweaks for array component types",
    "sanitized_subject_line": "Nullness-tweaks-for-array-component-types",
    "commit_notes": "",
    "body": "J2KT+Kotlin seem to be more strict in this area than the Java checkers  RELNOTES=n/a PiperOrigin-RevId: 520658313 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 30 Mar 2023 09:21:00 -0700"
  },
  {
    "commitHash": "e2ef6cf975cddc2c4d02dd592f40dd7d5d45ca91",
    "parent": "746b16da9e8e86f5626bb2578b8064e230a8a881",
    "subject": "Don’t remove `@Nullable` from `toArray()` return type in overrides for J2KT.",
    "sanitized_subject_line": "Don-t-remove-Nullable-from-toArray-return-type-in-overrides-for-J2KT",
    "commit_notes": "",
    "body": "It is not considered a covariant return type change in Kotlin (where arrays are regular generics), so is not legal.  For classes that are not public API (= only used as implementations of the interface), add back `@Nullable` outright. For public API, mark the override as `@J2ktIncompatible`. J2KT will then use the inherited implementation, only losing out on an optimization such as filling the result with an array copy instead of one-by-one/iterating.  RELNOTES=n/a PiperOrigin-RevId: 520652048 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 30 Mar 2023 08:56:11 -0700"
  },
  {
    "commitHash": "746b16da9e8e86f5626bb2578b8064e230a8a881",
    "parent": "3eec2a5894dbba5ef9e731dbbab9b64d1da7d6f9",
    "subject": "Add nullness suppression to non-null fields with complicated initialization",
    "sanitized_subject_line": "Add-nullness-suppression-to-non-null-fields-with-complicated-initialization",
    "commit_notes": "",
    "body": "These non-null fields are initialized during construction, but not directly in the constructor. J2KT will use the nullness suppression as a signal to add `lateinit` to the generated Kotlin code.  RELNOTES=n/a PiperOrigin-RevId: 520638106 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 30 Mar 2023 07:53:33 -0700"
  },
  {
    "commitHash": "3eec2a5894dbba5ef9e731dbbab9b64d1da7d6f9",
    "parent": "e0772c060372028b93e3b17280b44401f7962859",
    "subject": "Generics tweaks for J2KT (no API changes)",
    "sanitized_subject_line": "Generics-tweaks-for-J2KT-no-API-changes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 520622808 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 30 Mar 2023 06:37:56 -0700"
  },
  {
    "commitHash": "e0772c060372028b93e3b17280b44401f7962859",
    "parent": "ab72eafff2c47ef02d9c1e13092b27880ed3c181",
    "subject": "Final 🤞 set of `@J2ktIncompatible` for cgc.collect",
    "sanitized_subject_line": "Final-set-of-J2ktIncompatible-for-cgc.collect",
    "commit_notes": "",
    "body": "Weakref and concurrency-related  RELNOTES=n/a PiperOrigin-RevId: 520618818 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 30 Mar 2023 06:18:13 -0700"
  },
  {
    "commitHash": "ab72eafff2c47ef02d9c1e13092b27880ed3c181",
    "parent": "bf4afa617b1cc00a11dd1aa93188a5ac06cc33e0",
    "subject": "Add some explicit type parameters in `com.google.collect`",
    "sanitized_subject_line": "Add-some-explicit-type-parameters-in-com.google.collect",
    "commit_notes": "",
    "body": "Work around J2KT limitations around nullness-aware type inference.  RELNOTES=n/a PiperOrigin-RevId: 520086433 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 28 Mar 2023 11:35:00 -0700"
  },
  {
    "commitHash": "bf4afa617b1cc00a11dd1aa93188a5ac06cc33e0",
    "parent": "dfdd67ad9438d2ad34452e086e9056afb7eab5f0",
    "subject": "Update actions to latest versions, as reported by Dependabot.",
    "sanitized_subject_line": "Update-actions-to-latest-versions-as-reported-by-Dependabot",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 520075222 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 28 Mar 2023 10:57:39 -0700"
  },
  {
    "commitHash": "dfdd67ad9438d2ad34452e086e9056afb7eab5f0",
    "parent": "05162c089e9c32779d0597c3556846fe5da97a51",
    "subject": "More `@J2ktIncompatible` annotations for serialization code.",
    "sanitized_subject_line": "More-J2ktIncompatible-annotations-for-serialization-code",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 519996952 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 28 Mar 2023 05:19:58 -0700"
  },
  {
    "commitHash": "05162c089e9c32779d0597c3556846fe5da97a51",
    "parent": "da675b7f0f49b8dd5b264661a8d037d5471aa5d4",
    "subject": "[Pin](https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies) (and sometimes update) GitHub actions versions.",
    "sanitized_subject_line": "Pin-https-github.com-ossf-scorecard-blob-main-docs-checks.md-pinned-dependencies-and-sometimes-update-GitHub-actions-versions",
    "commit_notes": "",
    "body": "Compare https://github.com/google/guava/pull/5984  RELNOTES=n/a PiperOrigin-RevId: 519822561 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 27 Mar 2023 14:05:28 -0700"
  },
  {
    "commitHash": "da675b7f0f49b8dd5b264661a8d037d5471aa5d4",
    "parent": "4670beea5c84802d6d90440d1724a8cd6a9fe287",
    "subject": "Set up OSSF Scorecards.",
    "sanitized_subject_line": "Set-up-OSSF-Scorecards",
    "commit_notes": "",
    "body": "https://github.com/ossf/scorecard-action/#installation  Fixes #6365  RELNOTES=n/a PiperOrigin-RevId: 519766419 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 27 Mar 2023 11:08:55 -0700"
  },
  {
    "commitHash": "4670beea5c84802d6d90440d1724a8cd6a9fe287",
    "parent": "6ab30067225eb1dd64e14aebdd0aec7f72739483",
    "subject": "Use definitely non-nullable types in `common.base`/`common.collect`",
    "sanitized_subject_line": "Use-definitely-non-nullable-types-in-common.base-common.collect",
    "commit_notes": "",
    "body": "For background, see https://github.com/jspecify/jspecify/issues/86#issuecomment-1030308383  RELNOTES=n/a PiperOrigin-RevId: 519736884 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 27 Mar 2023 09:03:47 -0700"
  },
  {
    "commitHash": "6ab30067225eb1dd64e14aebdd0aec7f72739483",
    "parent": "8506c5312bc78552c21612a614aeeb11c3d24f8b",
    "subject": "Avoid using raw types/wildcards when a type parameter is self-bounding (in English: when it is `Enum`).",
    "sanitized_subject_line": "Avoid-using-raw-types-wildcards-when-a-type-parameter-is-self-bounding-in",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 519153094 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 24 Mar 2023 08:46:38 -0700"
  },
  {
    "commitHash": "8506c5312bc78552c21612a614aeeb11c3d24f8b",
    "parent": "5669b0c425f2b6a9d8c499b849cfd7ae7869f8c9",
    "subject": "Internal change",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=N/A PiperOrigin-RevId: 516683206 ",
    "author_name": "Liam Miller-Cushon",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 14 Mar 2023 18:04:28 -0700"
  },
  {
    "commitHash": "5669b0c425f2b6a9d8c499b849cfd7ae7869f8c9",
    "parent": "579465f565aaaae10aaeb6b4052b6984e2400535",
    "subject": "More `@J2ktIncompatible` changes for collections",
    "sanitized_subject_line": "More-J2ktIncompatible-changes-for-collections",
    "commit_notes": "",
    "body": "- most enum collections (incomplete `getDeclaringClass`, `getEnumConstants` emulation) - `CompactLinkedHashmap`. Emulated `LinkedHashmap` is missing access order mode - some more serialization methods/helpers - concurrent data structures - `MapMaker`, `Interner`: needs weak references and other things missing from emulation - `Ordering.Arbitrary`: needs `MapMaker` - unmark `Predicates.instanceOf`. `Class.isInstance` was added to the emulation  RELNOTES=n/a PiperOrigin-RevId: 516203537 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 13 Mar 2023 07:30:51 -0700"
  },
  {
    "commitHash": "579465f565aaaae10aaeb6b4052b6984e2400535",
    "parent": "7a4396f3721d4b93f9230051cc4cedfb45f40b4a",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 515784774 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 10 Mar 2023 18:12:26 -0800"
  },
  {
    "commitHash": "7a4396f3721d4b93f9230051cc4cedfb45f40b4a",
    "parent": "44b0882d6c205a396de092f7ce950758d58eaddc",
    "subject": "Mark Java serialization code `@J2ktIncompatible` in common.collect",
    "sanitized_subject_line": "Mark-Java-serialization-code-J2ktIncompatible-in-common.collect",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 514412440 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 6 Mar 2023 08:06:58 -0800"
  },
  {
    "commitHash": "44b0882d6c205a396de092f7ce950758d58eaddc",
    "parent": "c06a6341da03b59dc8a6e97c0b8ccaae7d8b284e",
    "subject": "Internal change",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=N/A PiperOrigin-RevId: 513917270 ",
    "author_name": "Liam Miller-Cushon",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 6 Mar 2023 07:17:05 -0800"
  },
  {
    "commitHash": "c06a6341da03b59dc8a6e97c0b8ccaae7d8b284e",
    "parent": "26f1bbae3b2c402db81f9bc4b5e7bede52b870d7",
    "subject": "Internal build change",
    "sanitized_subject_line": "Internal-build-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 513003275 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 28 Feb 2023 12:13:02 -0800"
  },
  {
    "commitHash": "26f1bbae3b2c402db81f9bc4b5e7bede52b870d7",
    "parent": "b716aa166b5e57028a6364af7a71fc0eeb8b316c",
    "subject": "Google internal build changes",
    "sanitized_subject_line": "Google-internal-build-changes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 512983937 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 28 Feb 2023 11:06:36 -0800"
  },
  {
    "commitHash": "b716aa166b5e57028a6364af7a71fc0eeb8b316c",
    "parent": "51dd7fa79599e5ecb7a2be70e6fe848c9ca8d86c",
    "subject": "Declare that `Converter.apply` accepts `A` and returns `B`, as its `Function<A, B>` supertype indicates.",
    "sanitized_subject_line": "Declare-that-Converter.apply-accepts-A-and-returns-B-as-its-Function-A-B-supertype-indicates",
    "commit_notes": "",
    "body": "Until now, we'd gone with `@CheckForNull A` and `@CheckForNull B`, probably motivated by some combination of:  - the feeling that those are safer from a Kotlin perspective (since the `@CheckForNull` annotation ensures that Kotlin won't require a runtime null check on the value passed to `apply`) - the fact that `NullPointerTester` would want a method that accepts plain `A` to throw `NullPointerException` when `null` is passed, which `Converter.apply` does not  The former is only a minor concern, since almost no one calls `Converter.apply` (as opposed to `Converter.convert`). The latter we can address in `NullPointerTester` itself, and this CL does so.  The upside is that we're not longer \"cheating\" in how we declare the method. The new signature matches what we'd need for a Kotlin version of the class.  (Also, this CL removes a `@CheckForNull` annotation and suppression in the class defined by `convertAll`. That annotation (or at least suppression or cast) was probably necessary at one point, but it's not necessary now that our checker understands that `convert(nonNullValue)` always returns a non-null value, even though `convert` can return null values in general (aka \"`@PolyNull` behavior\"). That checker behavior is also the reason that we don't need an annotation (or suppression or cast) even on our new declaration of `apply`.)  RELNOTES=n/a PiperOrigin-RevId: 512608753 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 27 Feb 2023 06:22:56 -0800"
  },
  {
    "commitHash": "51dd7fa79599e5ecb7a2be70e6fe848c9ca8d86c",
    "parent": "6405852bbf453b14d097b8ec3bcae494334b357d",
    "subject": "Internal change",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 512445000 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sun, 26 Feb 2023 09:38:55 -0800"
  },
  {
    "commitHash": "6405852bbf453b14d097b8ec3bcae494334b357d",
    "parent": "dc56d52406406b596bd3662a0de4ef9f1bd3189a",
    "subject": "Enable [Java8ApiChecker](https://errorprone.info/bugpattern/Java8ApiChecker) for Maven builds.",
    "sanitized_subject_line": "Enable-Java8ApiChecker-https-errorprone.info-bugpattern-Java8ApiChecker-for-Maven-builds",
    "commit_notes": "",
    "body": "We already have it on for our builds inside Google, but Maven checking provides an additional line of defense against https://github.com/google/guava/issues/3990.  Because this CL enables checking for our _tests_, too (which is hard not to do, as discussed in the existing `pom.xml` comment about NullArgumentForNonNullParameter), I had to edit a couple benchmarks to avoid using what are _in a limited sense_ \"Java 9+ APIs.\" They wouldn't be practical problems, though.  RELNOTES=n/a PiperOrigin-RevId: 511830560 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Feb 2023 10:59:54 -0800"
  },
  {
    "commitHash": "dc56d52406406b596bd3662a0de4ef9f1bd3189a",
    "parent": "32bcf6c19b1d6e97eedf633a8e8cc3ea42316864",
    "subject": "Google internal build changes",
    "sanitized_subject_line": "Google-internal-build-changes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 511827227 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Feb 2023 10:45:50 -0800"
  },
  {
    "commitHash": "32bcf6c19b1d6e97eedf633a8e8cc3ea42316864",
    "parent": "e49c24354954d1bc3e4b9f7ad5b37ef089a31819",
    "subject": "Bump actions/setup-java from 3.9.0 to 3.10.0.",
    "sanitized_subject_line": "Bump-actions-setup-java-from-3.9.0-to-3.10.0",
    "commit_notes": "",
    "body": "Fixes #6320.  RELNOTES=n/a PiperOrigin-RevId: 511806012 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Feb 2023 09:24:04 -0800"
  },
  {
    "commitHash": "e49c24354954d1bc3e4b9f7ad5b37ef089a31819",
    "parent": "241d5e40ce91b979c24647bf26f340f1e56ccba9",
    "subject": "Google internal build changes",
    "sanitized_subject_line": "Google-internal-build-changes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 511776971 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Feb 2023 07:09:35 -0800"
  },
  {
    "commitHash": "241d5e40ce91b979c24647bf26f340f1e56ccba9",
    "parent": "cee0457b8c0d46f67c2e29a28cf9baa09c329426",
    "subject": "Rename COPYING to LICENSE",
    "sanitized_subject_line": "Rename-COPYING-to-LICENSE",
    "commit_notes": "",
    "body": "Fixes #6318.  RELNOTES=n/a PiperOrigin-RevId: 511541401 ",
    "author_name": "CodeMaster7000",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 22 Feb 2023 10:59:39 -0800"
  },
  {
    "commitHash": "cee0457b8c0d46f67c2e29a28cf9baa09c329426",
    "parent": "7ea7fd4f4da102e7252be92cbabeaa96057dd328",
    "subject": "Replace `com.google.gwt` with `org.gwtproject`, which [it's moved to](https://repo1.maven.org/maven2/com/google/gwt/gwt-dev/2.10.0/gwt-dev-2.10.0.pom):",
    "sanitized_subject_line": "Replace-com.google.gwt-with-org.gwtproject-which-it-s-moved-to-https-repo1.maven.org-maven2-com-google-gwt-gwt-dev-2.10.0-gwt-dev-2.10.0.pom",
    "commit_notes": "",
    "body": "``` [WARNING] The artifact com.google.gwt:gwt-dev:jar:2.10.0 has been relocated to org.gwtproject:gwt-dev:jar:2.10.0 [WARNING] The artifact com.google.gwt:gwt-user:jar:2.10.0 has been relocated to org.gwtproject:gwt-user:jar:2.10.0 ```  RELNOTES=n/a PiperOrigin-RevId: 511306930 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 21 Feb 2023 14:33:13 -0800"
  },
  {
    "commitHash": "7ea7fd4f4da102e7252be92cbabeaa96057dd328",
    "parent": "ae97cce255a24e82db9a5acfc07e3ec787e1c9c3",
    "subject": "Add a note to `Hashing.goodFastHash` about memory usage.",
    "sanitized_subject_line": "Add-a-note-to-Hashing.goodFastHash-about-memory-usage",
    "commit_notes": "",
    "body": "Calls to the `HashFunction` returned by this method obviously use memory proportional to the `minimumBits` parameter. It is less obvious that the `HashFunction` instance itself does too.  Closes https://github.com/google/guava/issues/6324.  RELNOTES=n/a PiperOrigin-RevId: 511297211 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 21 Feb 2023 13:58:31 -0800"
  },
  {
    "commitHash": "ae97cce255a24e82db9a5acfc07e3ec787e1c9c3",
    "parent": "36f7898c3bcd232f44fbef0538f24a6b8403d023",
    "subject": "Google internal build changes",
    "sanitized_subject_line": "Google-internal-build-changes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 510522307 ",
    "author_name": "Stefan Haustein",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 17 Feb 2023 14:35:49 -0800"
  },
  {
    "commitHash": "36f7898c3bcd232f44fbef0538f24a6b8403d023",
    "parent": "a9a2e9593c520faa1c2edb79c1f5b0f83094d8ea",
    "subject": "Newer versions of maven-install-plugin (such as 3.1.0, the default under Maven 3.9.0) [error out if no jar exists](https://groups.google.com/g/guava-discuss/c/e5UVvuM9CP8/m/aHLJQkp6AQAJ).",
    "sanitized_subject_line": "Newer-versions-of-maven-install-plugin-such-as-3.1.0-the-default-under-Maven-3.9.0-error-out-if-no-jar-exists-https-groups.google.com-g-guava-discuss-c-e5UVvuM9CP8-m-aHLJQkp6AQAJ",
    "commit_notes": "",
    "body": "So we'll go back to a warning, which is better than an error.  We still won't actually \"deploy\" (= \"upload to Maven Central?\") a jar for guava-tests, thanks to cl/175197426. (I'd imagine that cl/175197426 was a response to *another* thing that I broke by submitting cl/174471751....)  PiperOrigin-RevId: 509342394 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 13 Feb 2023 15:07:01 -0800"
  },
  {
    "commitHash": "a9a2e9593c520faa1c2edb79c1f5b0f83094d8ea",
    "parent": "1b602d2ffcf8f2c27e731d8a42091e6e43b81acf",
    "subject": "Configures Maven to create bit-by-bit reproducible artifacts.",
    "sanitized_subject_line": "Configures-Maven-to-create-bit-by-bit-reproducible-artifacts",
    "commit_notes": "",
    "body": "As with Gradle and Bnd, timestamps in jars are [normalized](https://github.com/gradle/gradle/blob/v7.6.0/subprojects/core/src/main/java/org/gradle/api/internal/file/archive/ZipCopyAction.java#L57) to 1980 February 1st CET.  Closes https://github.com/google/guava/pull/6322.  PiperOrigin-RevId: 508476427 ",
    "author_name": "Kyle Moore",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 9 Feb 2023 14:32:28 -0800"
  },
  {
    "commitHash": "1b602d2ffcf8f2c27e731d8a42091e6e43b81acf",
    "parent": "c4a1d9020aac962493eb181448ef748217fd5900",
    "subject": "Add another test",
    "sanitized_subject_line": "Add-another-test",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 506828739 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 3 Feb 2023 00:29:40 -0800"
  },
  {
    "commitHash": "c4a1d9020aac962493eb181448ef748217fd5900",
    "parent": "76cd7fa14a567bc74e4a98052de55f4486a8c933",
    "subject": "Fix typo in errorprone.info URL",
    "sanitized_subject_line": "Fix-typo-in-errorprone.info-URL",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 505796854 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 30 Jan 2023 14:25:16 -0800"
  },
  {
    "commitHash": "76cd7fa14a567bc74e4a98052de55f4486a8c933",
    "parent": "ef779cb2fe5306de1aad25e6c2bf69d82cfa711f",
    "subject": "fix minor case of a bad default",
    "sanitized_subject_line": "fix-minor-case-of-a-bad-default",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 504929321 ",
    "author_name": "kevinb",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 26 Jan 2023 13:39:47 -0800"
  },
  {
    "commitHash": "ef779cb2fe5306de1aad25e6c2bf69d82cfa711f",
    "parent": "b4a6ddadd8b7106eef949621770152221d689bbc",
    "subject": "Document that Iterables.consumingIterable is not thread-safe.",
    "sanitized_subject_line": "Document-that-Iterables.consumingIterable-is-not-thread-safe",
    "commit_notes": "",
    "body": "related to #6141 addressing comment https://github.com/google/guava/pull/6305#issuecomment-1399267361 Fixes #6307  RELNOTES=n/a PiperOrigin-RevId: 504046688 ",
    "author_name": "Ayush Singhal",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 23 Jan 2023 12:07:57 -0800"
  },
  {
    "commitHash": "b4a6ddadd8b7106eef949621770152221d689bbc",
    "parent": "e57caa05124219b885b651ba40db3bc649202ec2",
    "subject": "Update doc for ConsumingQueueIterator and access modifier for ConsumingQueueIterator.computeNext.",
    "sanitized_subject_line": "Update-doc-for-ConsumingQueueIterator-and-access-modifier-for-ConsumingQueueIterator.computeNext",
    "commit_notes": "",
    "body": "Fixes #6141 Fixes #6305  RELNOTES=n/a PiperOrigin-RevId: 503646089 ",
    "author_name": "Ayush Singhal",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 21 Jan 2023 06:48:03 -0800"
  },
  {
    "commitHash": "e57caa05124219b885b651ba40db3bc649202ec2",
    "parent": "4f52c257001713eb53b004b9019f78ae24aac6cf",
    "subject": "Bump deps.",
    "sanitized_subject_line": "Bump-deps",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 503506407 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 20 Jan 2023 13:07:06 -0800"
  },
  {
    "commitHash": "4f52c257001713eb53b004b9019f78ae24aac6cf",
    "parent": "c34a1cf3dbc7baaf2b5820316adae67f3794c65b",
    "subject": "Add discouraging text to the Wiki for `EventBus` so that it matches the Javadoc.",
    "sanitized_subject_line": "Add-discouraging-text-to-the-Wiki-for-EventBus-so-that-it-matches-the-Javadoc",
    "commit_notes": "",
    "body": "Inspired by #6291.  RELNOTES=n/a PiperOrigin-RevId: 503491189 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 20 Jan 2023 11:57:56 -0800"
  },
  {
    "commitHash": "c34a1cf3dbc7baaf2b5820316adae67f3794c65b",
    "parent": "b719b098fc5c7bf867f31c9a6b8cb0d2b162e0bd",
    "subject": "Fix a few warnings, mostly in docs.",
    "sanitized_subject_line": "Fix-a-few-warnings-mostly-in-docs",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 503249855 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 19 Jan 2023 13:29:44 -0800"
  },
  {
    "commitHash": "b719b098fc5c7bf867f31c9a6b8cb0d2b162e0bd",
    "parent": "18a696ad8948d966b5b0d0302551c39a49a8f543",
    "subject": "Add a note to `Maps.uniqueIndex` about how to do the same thing using Streams.",
    "sanitized_subject_line": "Add-a-note-to-Maps.uniqueIndex-about-how-to-do-the-same-thing-using-Streams",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 503238994 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 19 Jan 2023 12:46:37 -0800"
  },
  {
    "commitHash": "18a696ad8948d966b5b0d0302551c39a49a8f543",
    "parent": "3b68684692103dd1574b05d3345471ed6401bb9e",
    "subject": "Document ForwardingExecutorService behavior for default methods.",
    "sanitized_subject_line": "Document-ForwardingExecutorService-behavior-for-default-methods",
    "commit_notes": "",
    "body": "Currently, Guava is built with Java 9 and `ExecutorService` has no default methods. This changes in Java 19, where `ExecutorService.close` is added. Ensure users have right expectations about future evolution of the `ForwardingExecutorService` and its compatibility with newer Java versions.  Fixes #6296 Fixes #6299  RELNOTES=n/a PiperOrigin-RevId: 502868842 ",
    "author_name": "Piotr Findeisen",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 18 Jan 2023 07:20:21 -0800"
  },
  {
    "commitHash": "3b68684692103dd1574b05d3345471ed6401bb9e",
    "parent": "553037486901cc60820ab7dcb38a25b6f34eba43",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 502608811 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 17 Jan 2023 09:41:51 -0800"
  },
  {
    "commitHash": "553037486901cc60820ab7dcb38a25b6f34eba43",
    "parent": "b2b479632f4f6b659db4fa07baeb6be7e1c9d32c",
    "subject": "Stop comparing the performance of `common.cache` to that of `ConcurrentHashMap`.",
    "sanitized_subject_line": "Stop-comparing-the-performance-of-common.cache-to-that-of-ConcurrentHashMap",
    "commit_notes": "",
    "body": "`ConcurrentHashMap` was significantly revised years ago, and it no longer looks anything like the base version we used for `common.cache`.  RELNOTES=n/a PiperOrigin-RevId: 500002131 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 5 Jan 2023 17:43:00 -0800"
  },
  {
    "commitHash": "b2b479632f4f6b659db4fa07baeb6be7e1c9d32c",
    "parent": "906b36230b1a6a5c17a9013bdf4aa5e7b4151b66",
    "subject": "Remove EasyMock dependency.",
    "sanitized_subject_line": "Remove-EasyMock-dependency",
    "commit_notes": "",
    "body": "(followup to cl/499889776)  RELNOTES=n/a PiperOrigin-RevId: 499991538 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 5 Jan 2023 17:40:55 -0800"
  },
  {
    "commitHash": "906b36230b1a6a5c17a9013bdf4aa5e7b4151b66",
    "parent": "6091e0c72afc2c78774e4dc26b88976668305b42",
    "subject": "Remove testing dependency on EasyMock.",
    "sanitized_subject_line": "Remove-testing-dependency-on-EasyMock",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 499954066 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 5 Jan 2023 11:41:03 -0800"
  },
  {
    "commitHash": "6091e0c72afc2c78774e4dc26b88976668305b42",
    "parent": "dd4a93a203223327c5d8efe9028b0a9d292bceab",
    "subject": "Fix a way of creating mutable `ImmutableSet` instances.",
    "sanitized_subject_line": "Fix-a-way-of-creating-mutable-ImmutableSet-instances",
    "commit_notes": "",
    "body": "The `Sets.toImmutableSet()` collector did not clear its state when building the set, but the `EnumSet` it passes along is treated as immutable without copying. Nefarious direct callers could, with just an unchecked cast and abuse of the `Collector` API, keep adding to a 2+ element `ImmutableSet` of enums built this way.  We [do not in general defend against malicious callers](https://github.com/google/guava#important-warnings) (and this change is not a _complete_ defense anyway). But the fix here has essentially no complexity or performance cost, so we might as well do it.  RELNOTES=n/a PiperOrigin-RevId: 499483029 ",
    "author_name": "Daniel Woffinden",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 4 Jan 2023 07:49:36 -0800"
  },
  {
    "commitHash": "dd4a93a203223327c5d8efe9028b0a9d292bceab",
    "parent": "ac5b2c310273964fcdfebfe3affaa6933718250c",
    "subject": "Use `Arrays.copyOf` on all platforms.",
    "sanitized_subject_line": "Use-Arrays.copyOf-on-all-platforms",
    "commit_notes": "",
    "body": "This possibility came up in cl/496513162. There's not a particularly compelling motivation for it, but:  - It's nice to use the same code across platforms (even if I haven't gone to the trouble to actually move the method out of `Platform` so that all platforms can share the code instead of duplicating it). - It's nice to avoid a safe but unchecked cast. - I could imagine that reflection could be slightly slower or that it would be unavailable on some additional future platform. (To be fair, I could also imagine that this _new_ implementation could be slightly slower. I haven't benchmarked.)  I've written this change to avoid introducing further allocations for calls to `immutableCollection.toArray()` and `immutableCollection.toArray(new Foo[0])`. And of course `immutableCollection.toArray(new Foo[immutableCollection.size()])` avoids allocating entirely (though, incidentally, it's [probably not advisable](https://shipilev.net/blog/2016/arrays-wisdom-ancients/), at least at last check). This change would still produce one extra allocation (of an empty array) for a call to `immutableCollection.toArray(someNonEmptyArrayThatIsTooSmall)`, but I'm not losing sleep over that.  RELNOTES=n/a PiperOrigin-RevId: 498403792 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 29 Dec 2022 09:44:55 -0800"
  },
  {
    "commitHash": "ac5b2c310273964fcdfebfe3affaa6933718250c",
    "parent": "e945869708ecd32a2af13383ba3ad42eb89b9251",
    "subject": "Add `@CanIgnoreReturnValue` to methods that always `return this`; this allows callers to ignore the return value of the method.",
    "sanitized_subject_line": "Add-CanIgnoreReturnValue-to-methods-that-always-return-this-this-allows-callers-to-ignore-the-return-value-of-the-method",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 498257129 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 28 Dec 2022 15:19:28 -0800"
  },
  {
    "commitHash": "e945869708ecd32a2af13383ba3ad42eb89b9251",
    "parent": "59d174cfbe87493cdc33a3746ee914e0073ce1a1",
    "subject": "More reliably use transitional `@CheckForNull` annotations.",
    "sanitized_subject_line": "More-reliably-use-transitional-CheckForNull-annotations",
    "commit_notes": "",
    "body": "(followup to cl/494880081)  We might _still_ not be 100% consistent in using them.  (Again, this helps slightly in my periodic attempts to [run NullAway](https://github.com/google/guava/issues/2484#issuecomment-1203200500).)  RELNOTES=n/a PiperOrigin-RevId: 497207876 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 22 Dec 2022 11:38:33 -0800"
  },
  {
    "commitHash": "59d174cfbe87493cdc33a3746ee914e0073ce1a1",
    "parent": "6bf3c772512610223242a71f92f181e80e0b4243",
    "subject": "Include information about method parameters in class file.",
    "sanitized_subject_line": "Include-information-about-method-parameters-in-class-file",
    "commit_notes": "",
    "body": "This helps IDEs and static analyzers (such as https://errorprone.info/bugpattern/ParameterName and maybe https://errorprone.info/bugpattern/TimeUnitMismatch).  It also increases the size of the Guava jar by ~2.4%. Note that Proguard removes the new information by default.  RELNOTES=Changed the Guava jar to include information about method parameters in its class files. If you use static analyzers that look at method-parameter names, you may see new warnings or errors if they are now able to detect mismatches. PiperOrigin-RevId: 497199980 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 22 Dec 2022 11:00:00 -0800"
  },
  {
    "commitHash": "6bf3c772512610223242a71f92f181e80e0b4243",
    "parent": "13fe7068ce9073cc05056842cb26dfb91149d787",
    "subject": "Use `@link` instead of `@linkplain` when referring to method names.",
    "sanitized_subject_line": "Use-link-instead-of-linkplain-when-referring-to-method-names",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 496504085 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 19 Dec 2022 15:23:48 -0800"
  },
  {
    "commitHash": "13fe7068ce9073cc05056842cb26dfb91149d787",
    "parent": "25ebb6447803ef07906ed4d5432c0cce27b0ff2d",
    "subject": "Explicitly specify that some returned values are serializable.",
    "sanitized_subject_line": "Explicitly-specify-that-some-returned-values-are-serializable",
    "commit_notes": "",
    "body": "Also specify under what circumstances. We don't spell this out for absolutely everything. For example, `ImmutableList` implements `Serializable`, so you would expect that an `ImmutableList` would be serializable if all of its elements are, and you would be right.  RELNOTES=n/a PiperOrigin-RevId: 496461811 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 19 Dec 2022 12:20:14 -0800"
  },
  {
    "commitHash": "25ebb6447803ef07906ed4d5432c0cce27b0ff2d",
    "parent": "0cdddd9c990a2cc43b12504808ed1237cbc0ba22",
    "subject": "Simplify and tighten an assertion in the specification of `Booleans.asList`.",
    "sanitized_subject_line": "Simplify-and-tighten-an-assertion-in-the-specification-of-Booleans.asList",
    "commit_notes": "",
    "body": "We absolutely _can_ guarantee that `list.get(0) == list.get(0)`, since the JLS [says](https://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.1.7-300) that boxed booleans are always represented by the same two objects.  RELNOTES=n/a PiperOrigin-RevId: 496087077 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 17 Dec 2022 07:06:07 -0800"
  },
  {
    "commitHash": "0cdddd9c990a2cc43b12504808ed1237cbc0ba22",
    "parent": "1742de51a7b6f56087d5579de1171f0f27d6091d",
    "subject": "Bump actions/setup-java from 3.6.0 to 3.9.0",
    "sanitized_subject_line": "Bump-actions-setup-java-from-3.6.0-to-3.9.0",
    "commit_notes": "",
    "body": "Fixes #6270  RELNOTES=n/a PiperOrigin-RevId: 495952102 ",
    "author_name": "Colin Decker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 16 Dec 2022 13:47:52 -0800"
  },
  {
    "commitHash": "1742de51a7b6f56087d5579de1171f0f27d6091d",
    "parent": "58ae8dea1ed1695616fb79c2c619dcb252184433",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 495725047 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 15 Dec 2022 16:23:07 -0800"
  },
  {
    "commitHash": "58ae8dea1ed1695616fb79c2c619dcb252184433",
    "parent": "049867c5ee9570a9988a8b06d7fa2643da70336c",
    "subject": "Suppress a likely false positive in our nullness checker.",
    "sanitized_subject_line": "Suppress-a-likely-false-positive-in-our-nullness-checker",
    "commit_notes": "",
    "body": "And since the `<S>` type argument didn't prevent that error, we might as well remove that, too.  RELNOTES=n/a PiperOrigin-RevId: 494972391 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 13 Dec 2022 03:19:24 -0800"
  },
  {
    "commitHash": "049867c5ee9570a9988a8b06d7fa2643da70336c",
    "parent": "732ba2aefe7083aa2a026d922a46a42f8de5163c",
    "subject": "More reliably use transitional `@CheckForNull` and `@ParametricNullness` annotations.",
    "sanitized_subject_line": "More-reliably-use-transitional-CheckForNull-and-ParametricNullness-annotations",
    "commit_notes": "",
    "body": "I would assume we're still not 100% consistent in using them, and we might someday consider an Error Prone check to identify the remaining places that we ought to be using them. But in an ideal world, they'll be able to go away entirely before we need to bother.  (There are a few reasons to use these annotations, but the one that I was poking at today was trying to [run NullAway](https://github.com/google/guava/issues/2484#issuecomment-1203200500).)  RELNOTES=n/a PiperOrigin-RevId: 494880081 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 12 Dec 2022 18:09:05 -0800"
  },
  {
    "commitHash": "732ba2aefe7083aa2a026d922a46a42f8de5163c",
    "parent": "a135f94870c4f0700b40d16ecad887c8c7ba72a1",
    "subject": "Improve nullability annotations for J2cl overlays in the concurrent package -- make them consistent with the underlying classes.",
    "sanitized_subject_line": "Improve-nullability-annotations-for-J2cl-overlays-in-the-concurrent-package-make-them-consistent-with-the-underlying-classes",
    "commit_notes": "",
    "body": "This gives us slightly more motivation for https://github.com/google/guava/issues/2934.  RELNOTES=n/a PiperOrigin-RevId: 493966031 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 8 Dec 2022 12:30:27 -0800"
  },
  {
    "commitHash": "a135f94870c4f0700b40d16ecad887c8c7ba72a1",
    "parent": "ea49a6be9e3c9bce629248d26fb7f071e2dfe8c1",
    "subject": "Strip `@Nullable` annotations from manually written GWT/j2cl supersources externally, as we already do when passing \"normal\" sources to GWT/j2cl.",
    "sanitized_subject_line": "Strip-Nullable-annotations-from-manually-written-GWT-j2cl-supersources-externally-as-we-already-do-when-passing-normal-sources-to-GWT-j2cl",
    "commit_notes": "",
    "body": "GWT gets confused by type-use annotations in certain locations if it doesn't have sources for those annotations.  (followup to cl/399190627, prepares for cl/492223286)  RELNOTES=n/a PiperOrigin-RevId: 493947235 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 8 Dec 2022 11:20:19 -0800"
  },
  {
    "commitHash": "ea49a6be9e3c9bce629248d26fb7f071e2dfe8c1",
    "parent": "0b179dcba3f7258dda42c60380328a28dda06075",
    "subject": "Under JDK20+, skip test that uses `Thread.suspend`.",
    "sanitized_subject_line": "Under-JDK20-skip-test-that-uses-Thread.suspend",
    "commit_notes": "",
    "body": "It [throws `UnsupportedOperationException`](https://bugs.openjdk.org/browse/JDK-8249627) under those versions.  (more work toward https://github.com/google/guava/issues/6245)  PiperOrigin-RevId: 493077898 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 5 Dec 2022 12:20:31 -0800"
  },
  {
    "commitHash": "0b179dcba3f7258dda42c60380328a28dda06075",
    "parent": "f4c02a1f30d3f86879ef892736da4031362a1895",
    "subject": "Roll back setup-java update.",
    "sanitized_subject_line": "Roll-back-setup-java-update",
    "commit_notes": "",
    "body": "Undoes #6252  PiperOrigin-RevId: 493060241 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 5 Dec 2022 11:15:40 -0800"
  },
  {
    "commitHash": "f4c02a1f30d3f86879ef892736da4031362a1895",
    "parent": "e7cffefb3a21e3ae000c7dafe750ca88acdb8bfa",
    "subject": "Fix a typo in `TypeToken` javadoc. Thanks to @Marcono1234 for the fix!",
    "sanitized_subject_line": "Fix-a-typo-in-TypeToken-javadoc.-Thanks-to-Marcono1234-for-the-fix",
    "commit_notes": "",
    "body": "Closes https://github.com/google/guava/pull/6254.  RELNOTES=n/a PiperOrigin-RevId: 492988322 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 5 Dec 2022 06:24:00 -0800"
  },
  {
    "commitHash": "e7cffefb3a21e3ae000c7dafe750ca88acdb8bfa",
    "parent": "315a45e193ba95e89b41bfc4755b05c52ff93fc9",
    "subject": "Implement a more efficient version of Supplier.memoize",
    "sanitized_subject_line": "Implement-a-more-efficient-version-of-Supplier.memoize",
    "commit_notes": "",
    "body": "Advantages: 1. Delegate is now never null (removes all null checks that cost at runtime). 2. Uses less memory per instance, as we remove \"initialized\" field. 3. Only one volatile write / read instead of two (faster). 4. Shorter and easier to comprehend code. RELNOTES=n/a PiperOrigin-RevId: 492951011 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 5 Dec 2022 02:30:04 -0800"
  },
  {
    "commitHash": "315a45e193ba95e89b41bfc4755b05c52ff93fc9",
    "parent": "ee06b4037c1463370275df77e443a18f8f0631b0",
    "subject": "Bump actions/setup-java from 3.6.0 to 3.7.0",
    "sanitized_subject_line": "Bump-actions-setup-java-from-3.6.0-to-3.7.0",
    "commit_notes": "",
    "body": "Bumps [actions/setup-java](https://github.com/actions/setup-java) from 3.6.0 to 3.7.0. - [Release notes](https://github.com/actions/setup-java/releases) - [Commits](https://github.com/actions/setup-java/compare/v3.6.0...v3.7.0)  Fixes #6252  RELNOTES=n/a PiperOrigin-RevId: 492475581 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 2 Dec 2022 08:33:45 -0800"
  },
  {
    "commitHash": "ee06b4037c1463370275df77e443a18f8f0631b0",
    "parent": "38ce3d05d0daf37ee2f8caf4c57443403701c8cc",
    "subject": "`NullsFirstOrdering`/`NullsLastOrdering`: generics pedantry",
    "sanitized_subject_line": "NullsFirstOrdering-NullsLastOrdering-generics-pedantry",
    "commit_notes": "",
    "body": "The types extend `Ordering<@Nullable T>` so when overriding something where `Ordering` uses `T`, we should use `@Nullable T`, not `T`.  RELNOTES=n/a PiperOrigin-RevId: 491640282 ",
    "author_name": "Martin Kretzschmar",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 29 Nov 2022 08:15:15 -0800"
  },
  {
    "commitHash": "38ce3d05d0daf37ee2f8caf4c57443403701c8cc",
    "parent": "942ec29b9d99a9ba43c2929755d696c7cacab664",
    "subject": "Suppress callsites where the return value of `Comparator.compare` is unused.",
    "sanitized_subject_line": "Suppress-callsites-where-the-return-value-of-Comparator.compare-is-unused",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 491402529 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 28 Nov 2022 11:48:50 -0800"
  },
  {
    "commitHash": "942ec29b9d99a9ba43c2929755d696c7cacab664",
    "parent": "688b9c2cfae305f38c601efd4a7a9e9549db9b1f",
    "subject": "Rip out internal fields `maxSegmentSize` and `CLEANUP_EXECUTOR_DELAY_SECS`.",
    "sanitized_subject_line": "Rip-out-internal-fields-maxSegmentSize-and-CLEANUP_EXECUTOR_DELAY_SECS",
    "commit_notes": "",
    "body": "They were used back when `MapMaker` supported caching features (such as `maximumSize`).  Now they're just red herrings and the tiniest of extra bit of storage (or maybe not even that, since I haven't checked if `Segment` instances would still be padded to the same 8-byte threshold).  RELNOTES=n/a PiperOrigin-RevId: 490307051 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 22 Nov 2022 12:28:56 -0800"
  },
  {
    "commitHash": "688b9c2cfae305f38c601efd4a7a9e9549db9b1f",
    "parent": "7e87414e58caf0937fd8196e1db104e5b38b1a26",
    "subject": "Add HttpHeaders constants for No-Vary-Search.",
    "sanitized_subject_line": "Add-HttpHeaders-constants-for-No-Vary-Search",
    "commit_notes": "",
    "body": "RELNOTES=`net`: Added `HttpHeaders` constants for `No-Vary-Search`. PiperOrigin-RevId: 488976193 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 16 Nov 2022 10:28:26 -0800"
  },
  {
    "commitHash": "7e87414e58caf0937fd8196e1db104e5b38b1a26",
    "parent": "8a676ade617c6be992165cd0658779a14acef2f2",
    "subject": "Roll back `CheckReturnValue` suppressions.",
    "sanitized_subject_line": "Roll-back-CheckReturnValue-suppressions",
    "commit_notes": "",
    "body": "We've improved our checker to not issue errors for this `try`-`fail` pattern.  RELNOTES=n/a PiperOrigin-RevId: 488963332 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 16 Nov 2022 09:41:24 -0800"
  },
  {
    "commitHash": "8a676ade617c6be992165cd0658779a14acef2f2",
    "parent": "c5d7b86c19e75438d93effc176470e3a25494a08",
    "subject": "Make the build work under more JDK versions.",
    "sanitized_subject_line": "Make-the-build-work-under-more-JDK-versions",
    "commit_notes": "",
    "body": "(Guava is already _usable_ under plenty of verions. This change affects only people who build it themselves.)  And run CI under JDK17. Maybe this will make CI painfully slow, but we'll see what happens. If we want to drop something, we should consider whether to revert 17 or to drop 11 instead (so as to maintain coverage at the endpoints of \\[8, 17\\]).  ## Notes on some of the versions  ### JDK9  I expected Error Prone to work, but I saw `invalid flag: -Xep:NullArgumentForNonNullParameter:OFF`, even though that flag is [already](https://github.com/google/guava/blob/166d8c0d8733d40914fb24f368cb587a92bddfe0/pom.xml#L515) part of [the same `<arg>`](https://github.com/google/error-prone/issues/1086#issuecomment-411544589), which works fine for other JDK versions. So I disabled Error Prone for that version.  Then I had a Javadoc problem with the `--no-module-directories` configuration from cl/413934851 (the fix for https://github.com/google/guava/issues/5457). After reading [JDK-8215582](https://bugs.openjdk.org/browse/JDK-8215582) more carefully, I get the impression that that flag might not have been added until 11: \"addressed in JDK 11, along with an option to revert to the old layout in case of need.\" So I disabled it for 9-10.  Then I ran into a problem similar to https://github.com/bazelbuild/bazel/issues/6173 / [JDK-8184940](https://bugs.openjdk.java.net/browse/JDK-8184940). I'm not sure exactly what tool produced a file with a month of 0, but it happened only when building `guava-tests`. At that point, I gave up, though I left the 2 above workarounds in place.  ### JDK10  This fails with some kind of problem finding a Guice dependency inside Maven. I didn't investigate.  ### JDK15 and JDK16  These fail with [the `TreeMap` bug](https://bugs.openjdk.org/browse/JDK-8259622) that [our collection testers had detected](https://github.com/google/guava/issues/5801#issue-1068748849) but we never got around to reporting. Thankfully, it got reported and [fixed](https://github.com/openjdk/jdk/commit/2c8e337dff4c84fb435cafac8b571f94e161f074) for JDK17. We could consider suppressing the tests under that version.  ### JDK18, JDK19, and JDK20-early-access  These fail with [`SecurityManager` trouble](https://github.com/google/guava/issues/5801#issuecomment-1293817701).  ## Notes on the other actual changes  ### `maven-javadoc-plugin`  I set up `maven-javadoc-plugin` to use `-source ${java.specification.version}`. Otherwise, it would [take the version from `maven-compiler-plugin`](https://github.com/google/guava/issues/5801#issuecomment-1314291284). That's typically fine: Guava's source code targets Java 8, so `-source 8` \"ought\" to work. But it doesn't actually work because we also pass Javadoc the _JDK_ sources (so that `{@inheritDoc}` works better), which naturally can target whichever version of the JDK we're building with.  ### Error Prone  While Error Prone is mostly usable [on JDK11+](https://errorprone.info/docs/installation), some of its checks have [problems under some versions](https://github.com/google/error-prone/issues/3540), at least when they're reporting warnings.  This stems from its use of part of the Checker Framework, which [doesn't support JDKs in the gap between 11 and 17](https://github.com/typetools/checker-framework/blob/c2d16b3409000ac2e2ca95b8b81ae11e42195308/framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java#L553-L554). And specifically,  it looks like the Checker Framework is [trying to look up `BindingPatternTree` under any JDK12+](https://github.com/typetools/checker-framework/blob/c2d16b3409000ac2e2ca95b8b81ae11e42195308/javacutil/src/main/java/org/checkerframework/javacutil/TreeUtils.java#L131-L144). But `BindingPatternTree` (besides not being present at all [until JDK14](https://github.com/openjdk/jdk/commit/229e0d16313b10932b9ce7506d84096696983699#diff-3db4b0ce4411c851bcf75d92ef4dadc7351debcf0f9b2c2623dc513923b45867R41)) didn't declare that method [until JDK16](https://github.com/openjdk/jdk/commit/18bc95ba51b6864150c28985e65b6f784ea8ee2c#diff-3db4b0ce4411c851bcf75d92ef4dadc7351debcf0f9b2c2623dc513923b45867R39).  Anyway, the problem we saw was [a `NoSuchMethodException` during the `AbstractReferenceEquality` call to `NullnessAnalysis.getNullness`](https://oss-fuzz-build-logs.storage.googleapis.com/log-a9d04aa2-8b5a-47ca-8066-7e6b38548064.txt), which uses Checker Framework dataflow.  To address that, I disabled Error Prone for the versions under which I'd expect the `BindingPatternTree` code to be a problem.  (I also disabled it for JDK10: As noted above, Error Prone [supports JDK11+](https://errorprone.info/docs/installation). And as noted further above, Maven doesn't get far enough with JDK10 to even start running Error Prone.)  Fixes https://github.com/google/guava/issues/5801  RELNOTES=n/a PiperOrigin-RevId: 488902996 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 16 Nov 2022 04:35:46 -0800"
  },
  {
    "commitHash": "c5d7b86c19e75438d93effc176470e3a25494a08",
    "parent": "d06cbb6d7cde56d4afc64e463f12e6821df8c513",
    "subject": "Suppress some `CheckReturnValue` errors.",
    "sanitized_subject_line": "Suppress-some-CheckReturnValue-errors",
    "commit_notes": "",
    "body": "We may just improve our checker to not issue errors for this `try`-`fail` pattern, but for now, let's get the build green.  RELNOTES=n/a PiperOrigin-RevId: 488760922 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 15 Nov 2022 14:35:46 -0800"
  },
  {
    "commitHash": "d06cbb6d7cde56d4afc64e463f12e6821df8c513",
    "parent": "166d8c0d8733d40914fb24f368cb587a92bddfe0",
    "subject": "Fix Javadoc warnings.",
    "sanitized_subject_line": "Fix-Javadoc-warnings",
    "commit_notes": "",
    "body": "The main interesting change is the Javadoc followup to the change made to `ClosingFuture.DeferredCloser.eventuallyClose` in cl/327073114.  RELNOTES=n/a PiperOrigin-RevId: 488745683 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 15 Nov 2022 13:38:09 -0800"
  },
  {
    "commitHash": "166d8c0d8733d40914fb24f368cb587a92bddfe0",
    "parent": "dafaa3e435421fffc7a2a2fab9c700affb07c5e4",
    "subject": "Write our own `FutureCallback` implementation instead of using a mock.",
    "sanitized_subject_line": "Write-our-own-FutureCallback-implementation-instead-of-using-a-mock",
    "commit_notes": "",
    "body": "This addresses [a class-loader mismatch under JDK20](https://github.com/google/guava/issues/5801#issuecomment-1314357032). As a bonus, it makes the test work under GWT.  PiperOrigin-RevId: 488665105 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 15 Nov 2022 08:33:21 -0800"
  },
  {
    "commitHash": "dafaa3e435421fffc7a2a2fab9c700affb07c5e4",
    "parent": "6d7e326b2cbfba5f19fc67859c0b3d4c45fab63f",
    "subject": "Making sameThreadScheduledExecutor's return type ListeningScheduledExecutorService, to avoid leaking a package-private class through a public method.",
    "sanitized_subject_line": "Making-sameThreadScheduledExecutor-s-return-type-ListeningScheduledExecutorService-to-avoid-leaking-a-package-private-class-through-a-public-method",
    "commit_notes": "",
    "body": "RELNOTES=`testing`: Changed the return type of `sameThreadScheduledExecutor` to `ListeningScheduledExecutorService` to avoid leaking a package-private class through a public method. This helps Kotlin callers. PiperOrigin-RevId: 488662036 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 15 Nov 2022 08:26:34 -0800"
  },
  {
    "commitHash": "6d7e326b2cbfba5f19fc67859c0b3d4c45fab63f",
    "parent": "595af4f4c54e411a03a723bb95a68b652a886d11",
    "subject": "Update Error Prone.",
    "sanitized_subject_line": "Update-Error-Prone",
    "commit_notes": "",
    "body": "This has some effects on us as we develop Guava, but it doesn't affect end users.  Specifically:  - When we build Guava with JDK8, we now have to disable Error Prone. (Again, users can still use Guava with JDK8, including with Error Prone. The effect is limited to people who are developing Guava.) - We can now successfully build Guava with Error Prone under more recent JDKs. That is, this change should fix the error reported in https://github.com/google/guava/issues/6217#issuecomment-1287990845. (I'm not sure if the Error Prone update was necessary for that or if only the other `pom.xml` changes were. Still, it seems inevitable that we'll be forced to upgrade Error Prone eventually, and it's rarely a bad idea to update a plugin.)  This change is progress toward building and testing under Java 17 (https://github.com/google/guava/issues/5801)...  ...which we apparently regressed at when we enabled Error Prone (https://github.com/google/guava/issues/2484).  Oddly, it seems that part of our existing Error Prone setup is _required_ to continue building Guava under JDK8. (Such builds are potentially useful for https://github.com/google/guava/issues/3990 or for anyone building Guava manually with an old JDK.) That's the case even though we're now disabling Error Prone for those builds.  Again, all these changes affect only people who are developing Guava, not end users.  RELNOTES=n/a PiperOrigin-RevId: 485770768 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 2 Nov 2022 21:20:24 -0700"
  },
  {
    "commitHash": "595af4f4c54e411a03a723bb95a68b652a886d11",
    "parent": "ed6817bdaa881846cdc8c7e313c0d07bceb108cb",
    "subject": "Bump actions/setup-java from 3.5.1 to 3.6.0",
    "sanitized_subject_line": "Bump-actions-setup-java-from-3.5.1-to-3.6.0",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6220  RELNOTES=n/a PiperOrigin-RevId: 485633650 ",
    "author_name": "Colin Decker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 2 Nov 2022 10:38:39 -0700"
  },
  {
    "commitHash": "ed6817bdaa881846cdc8c7e313c0d07bceb108cb",
    "parent": "822125f9ee7a71c830f1383e9e5a8663414d8f48",
    "subject": "Suppress various Error Prone warnings/suggestions (sometimes by making no-op changes to silence them, rather than using `@SuppressWarnings`).",
    "sanitized_subject_line": "Suppress-various-Error-Prone-warnings-suggestions-sometimes-by-making-no-op-changes-to-silence-them-rather-than-using-SuppressWarnings",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 485307502 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 1 Nov 2022 07:05:42 -0700"
  },
  {
    "commitHash": "822125f9ee7a71c830f1383e9e5a8663414d8f48",
    "parent": "b337be608971b02a51f1a31a50a49c4755c6fd75",
    "subject": "Bump deps.",
    "sanitized_subject_line": "Bump-deps",
    "commit_notes": "",
    "body": "Notably, this protects our builds from https://issues.apache.org/jira/browse/MJAVADOC-650.  RELNOTES=n/a PiperOrigin-RevId: 484289756 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 27 Oct 2022 10:33:37 -0700"
  },
  {
    "commitHash": "b337be608971b02a51f1a31a50a49c4755c6fd75",
    "parent": "f9d336f6cd867250daf411fce3aa5d63e533ea19",
    "subject": "Move `interruptTask()` call to immediately before `afterDone()` call.",
    "sanitized_subject_line": "Move-interruptTask-call-to-immediately-before-afterDone-call",
    "commit_notes": "",
    "body": "Once this CL is submitted, users who override `interruptTask()` will be able to migrate to overriding `afterDone()` with no further change to behavior.  RELNOTES=`util.concurrent`: Changed `AbstractFuture` to run `interruptTask()` just before `afterDone()`. Until this change, it ran slightly earlier than that: We used to run it before unblocking any pending `get()` calls, and now we run it after. PiperOrigin-RevId: 482836593 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 21 Oct 2022 11:00:55 -0700"
  },
  {
    "commitHash": "f9d336f6cd867250daf411fce3aa5d63e533ea19",
    "parent": "d48418e4528ad0323e51e34d4e1044cc03c77c98",
    "subject": "Remove `@CanIgnoreReturnValue` from a few functional interfaces.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-a-few-functional-interfaces",
    "commit_notes": "",
    "body": "RELNOTES=N/A PiperOrigin-RevId: 482480564 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 20 Oct 2022 07:12:57 -0700"
  },
  {
    "commitHash": "d48418e4528ad0323e51e34d4e1044cc03c77c98",
    "parent": "805fbfd8a0cff726b0cec880fe70b5ccbba57e34",
    "subject": "Bump styfle/cancel-workflow-action from 0.10.1 to 0.11.0.",
    "sanitized_subject_line": "Bump-styfle-cancel-workflow-action-from-0.10.1-to-0.11.0",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6208  RELNOTES=n/a PiperOrigin-RevId: 481773533 ",
    "author_name": "Colin Decker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 17 Oct 2022 16:56:25 -0700"
  },
  {
    "commitHash": "805fbfd8a0cff726b0cec880fe70b5ccbba57e34",
    "parent": "6d92fc532c556f55bada2d8903b9fc6bb0857273",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 481248816 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 14 Oct 2022 15:42:05 -0700"
  },
  {
    "commitHash": "6d92fc532c556f55bada2d8903b9fc6bb0857273",
    "parent": "c27795809ea8d77d24f1de5907f2bc97c8404062",
    "subject": "Use `@NonNull` to avoid having to suppress a nullness error inside our implementation.",
    "sanitized_subject_line": "Use-NonNull-to-avoid-having-to-suppress-a-nullness-error-inside-our-implementation",
    "commit_notes": "",
    "body": "(For details on the `pom.xml` change, see cl/399190627.)  RELNOTES=n/a PiperOrigin-RevId: 481213869 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 14 Oct 2022 13:01:09 -0700"
  },
  {
    "commitHash": "c27795809ea8d77d24f1de5907f2bc97c8404062",
    "parent": "989e3b261eb3c67b42c97f612b5d726f03e1e300",
    "subject": "Discuss the (negligible to most users) overhead of using `Stopwatch` relative to `System.nanoTime`.",
    "sanitized_subject_line": "Discuss-the-negligible-to-most-users-overhead-of-using-Stopwatch-relative-to-System.nanoTime",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 481180974 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 14 Oct 2022 10:42:57 -0700"
  },
  {
    "commitHash": "989e3b261eb3c67b42c97f612b5d726f03e1e300",
    "parent": "370da321a4902039f9bae2f66826b8be100d465a",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 480954697 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 13 Oct 2022 12:20:43 -0700"
  },
  {
    "commitHash": "370da321a4902039f9bae2f66826b8be100d465a",
    "parent": "3fc91d6d94d56d3dd0410c75765e176b6a98866f",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 480802517 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 12 Oct 2022 23:01:39 -0700"
  },
  {
    "commitHash": "3fc91d6d94d56d3dd0410c75765e176b6a98866f",
    "parent": "70d571b10a95e1579a473dfefa981ab5fcb6fcc3",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 480776681 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 12 Oct 2022 19:24:58 -0700"
  },
  {
    "commitHash": "70d571b10a95e1579a473dfefa981ab5fcb6fcc3",
    "parent": "fde1b8451d8d84c2842cbb75dd66a3d0b58a4274",
    "subject": "Fix typos in Javadocs, comments and code.",
    "sanitized_subject_line": "Fix-typos-in-Javadocs-comments-and-code",
    "commit_notes": "",
    "body": "Fixes #6111.  PiperOrigin-RevId: 480152294 ",
    "author_name": "Marc Wrobel",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 10 Oct 2022 12:45:10 -0700"
  },
  {
    "commitHash": "fde1b8451d8d84c2842cbb75dd66a3d0b58a4274",
    "parent": "51456ae0b7dd4251429a927e9f633de46e2c20ec",
    "subject": "Automatically add `@CheckForNull` annotations with https://github.com/google/error-prone/blob/master/core/src/main/java/com/google/errorprone/bugpatterns/nullness/ReturnMissingNullable.java",
    "sanitized_subject_line": "Automatically-add-CheckForNull-annotations-with-https-github.com-google-error-prone-blob-master-core-src-main-java-com-google-errorprone-bugpatterns-nullness-ReturnMissingNullable.java",
    "commit_notes": "",
    "body": "And convert existing `@Nullable` annotations to `@CheckForNull` where possible. (See \"Nullness annotations\" in https://github.com/google/guava/releases/tag/v31.0)  These two classes are two that we haven't tried to annotate fully, but we might as well annotate where it's trivial.  Note, though, that at least a few of the existing `@Nullable` annotations are likely to be incorrect. I don't plan to investigate, since this cleanup is increasingly not \"trivial\" :)  PiperOrigin-RevId: 479709282 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 7 Oct 2022 18:23:44 -0700"
  },
  {
    "commitHash": "51456ae0b7dd4251429a927e9f633de46e2c20ec",
    "parent": "a2e8f3c7ce47c9f8904e6afe39cf4aa8ac340c46",
    "subject": "Avoid creating an entry whose key is `null` at construction time.",
    "sanitized_subject_line": "Avoid-creating-an-entry-whose-key-is-null-at-construction-time",
    "commit_notes": "",
    "body": "In the case of an entry whose key is stored in a `WeakReference`, the resulting entry will never be enqueued in the `ReferenceQueue`, so I'm not sure that it will necessarily ever be removed from the cache.  Compare a similar change to `MapMakerInternalMap` that was part of cl/479157599.  I get the impression that there may be a similar situation with weak _values_, but I'm not biting that off right now.  As always, we [recommend](https://guava.dev/CacheBuilder) that you use [Caffeine](https://github.com/ben-manes/caffeine/wiki) instead of Guava's `cache` library.  RELNOTES=n/a PiperOrigin-RevId: 479409633 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Oct 2022 14:14:01 -0700"
  },
  {
    "commitHash": "a2e8f3c7ce47c9f8904e6afe39cf4aa8ac340c46",
    "parent": "5ed6e43686dec95cb47e444d4cae77060dcc4dc0",
    "subject": "Optimize the memory footprint of `MapMakerInternalMap` entries by special-casing linked entries.",
    "sanitized_subject_line": "Optimize-the-memory-footprint-of-MapMakerInternalMap-entries-by-special-casing-linked-entries",
    "commit_notes": "",
    "body": "The first entry in each bucket does not need a `next` field because it will only ever be the tail of the bucket's linked list. Because `MapMakerInternalMap` uses a load factor of 0.75, we can expect that most entries are tails, so long as the hash function is good.  For the common use case of a weak interner with compressed OOPs, omitting the `next` field reduces the shallow heap of `WeakKeyDummyValueEntry` from 40 bytes to 32 bytes.  RELNOTES=Memory optimizations for `Interner` and `MapMaker` PiperOrigin-RevId: 479157599 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Oct 2022 15:26:50 -0700"
  },
  {
    "commitHash": "5ed6e43686dec95cb47e444d4cae77060dcc4dc0",
    "parent": "e7d6821c9edef8182f7af85416af259bcf5c1947",
    "subject": "Make `Primitives` available to GWT/j2cl.",
    "sanitized_subject_line": "Make-Primitives-available-to-GWT-j2cl",
    "commit_notes": "",
    "body": "I was going to use it in https://github.com/google/truth/commit/3a47110360c0ab5fa224c7aabd5a123da810b7d0, but I found that it wasn't available under those environments.  RELNOTES=n/a PiperOrigin-RevId: 479106559 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Oct 2022 12:04:25 -0700"
  },
  {
    "commitHash": "e7d6821c9edef8182f7af85416af259bcf5c1947",
    "parent": "b880ac749efa023b52a17422e0d29eba3dbfa1ae",
    "subject": "Bump styfle/cancel-workflow-action from 0.10.0 to 0.10.1",
    "sanitized_subject_line": "Bump-styfle-cancel-workflow-action-from-0.10.0-to-0.10.1",
    "commit_notes": "",
    "body": "Bumps [styfle/cancel-workflow-action](https://github.com/styfle/cancel-workflow-action) from 0.10.0 to 0.10.1. - [Release notes](https://github.com/styfle/cancel-workflow-action/releases) - [Commits](https://github.com/styfle/cancel-workflow-action/compare/0.10.0...0.10.1)  Fixes #6193  RELNOTES=n/a PiperOrigin-RevId: 478524842 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 3 Oct 2022 09:29:30 -0700"
  },
  {
    "commitHash": "b880ac749efa023b52a17422e0d29eba3dbfa1ae",
    "parent": "e4522099b392197a7d2870af634b74fc07d780e7",
    "subject": "Bump actions/setup-java from 3.5.0 to 3.5.1",
    "sanitized_subject_line": "Bump-actions-setup-java-from-3.5.0-to-3.5.1",
    "commit_notes": "",
    "body": "Bumps [actions/setup-java](https://github.com/actions/setup-java) from 3.5.0 to 3.5.1. - [Release notes](https://github.com/actions/setup-java/releases) - [Commits](https://github.com/actions/setup-java/compare/v3.5.0...v3.5.1)  Fixes #6185  RELNOTES=n/a PiperOrigin-RevId: 478516762 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 3 Oct 2022 08:58:37 -0700"
  },
  {
    "commitHash": "e4522099b392197a7d2870af634b74fc07d780e7",
    "parent": "2e0f7984bdb90cd07282f503e6736df895f98e24",
    "subject": "Document that `ComparisonChain` is mostly obsolete.",
    "sanitized_subject_line": "Document-that-ComparisonChain-is-mostly-obsolete",
    "commit_notes": "",
    "body": "If you are able to use the Java 8 API, you should almost certainly be using the `Comparator` methods introduced there. They are less error-prone and more succinct. In particular they avoid slip-ups like `compare(a.foo(), a.foo())` or `compare(a.foo(), b.bar())`.  RELNOTES=Documented that `ComparisonChain` is mostly obsolete. PiperOrigin-RevId: 475862634 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 21 Sep 2022 10:28:11 -0700"
  },
  {
    "commitHash": "2e0f7984bdb90cd07282f503e6736df895f98e24",
    "parent": "f248c092260a0ccdcb937b5806251480104c5df5",
    "subject": "Add `package-info.java` (with `@CheckReturnValue`) to `com.google.common.collect.testing.*` packages, and add `@CanIgnoreReturnValue` as appropriate.",
    "sanitized_subject_line": "Add-package-info.java-with-CheckReturnValue-to-com.google.common.collect.testing.-packages-and-add-CanIgnoreReturnValue-as-appropriate",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 475830522 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 21 Sep 2022 08:08:35 -0700"
  },
  {
    "commitHash": "f248c092260a0ccdcb937b5806251480104c5df5",
    "parent": "94786f7c419041068ad48f04fe3d9fa4a266b6dd",
    "subject": "Add `@CheckReturnValue` to `com.google.common.testing`.",
    "sanitized_subject_line": "Add-CheckReturnValue-to-com.google.common.testing",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 475445692 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 19 Sep 2022 19:49:28 -0700"
  },
  {
    "commitHash": "94786f7c419041068ad48f04fe3d9fa4a266b6dd",
    "parent": "241b222097bb490e125b7c527ea4d64fbc908c8e",
    "subject": "Rewrite `ComparisonChainTest` to use Truth.",
    "sanitized_subject_line": "Rewrite-ComparisonChainTest-to-use-Truth",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 474669456 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 15 Sep 2022 15:23:32 -0700"
  },
  {
    "commitHash": "241b222097bb490e125b7c527ea4d64fbc908c8e",
    "parent": "1dd255155fae1385ca0497e5147e0fbdcf1a8dd4",
    "subject": "Change constructor of `ForwardingMap` to `protected`.",
    "sanitized_subject_line": "Change-constructor-of-ForwardingMap-to-protected",
    "commit_notes": "",
    "body": "`ForwardingMap` is `abstract`, so `protected` is just as accessible as `public`, and it's clearer.  Fixes #6171  RELNOTES=n/a PiperOrigin-RevId: 474291441 ",
    "author_name": "MartinWitt",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 14 Sep 2022 08:02:52 -0700"
  },
  {
    "commitHash": "1dd255155fae1385ca0497e5147e0fbdcf1a8dd4",
    "parent": "49e6b9c4a1f551d30b18483800f02de68d7ca062",
    "subject": "Bumps [actions/setup-java](https://github.com/actions/setup-java) from 3.4.1 to 3.5.0.",
    "sanitized_subject_line": "Bumps-actions-setup-java-https-github.com-actions-setup-java-from-3.4.1-to-3.5.0",
    "commit_notes": "",
    "body": "Fixes #6168.  RELNOTES=n/a PiperOrigin-RevId: 473345040 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 9 Sep 2022 14:38:31 -0700"
  },
  {
    "commitHash": "49e6b9c4a1f551d30b18483800f02de68d7ca062",
    "parent": "32f7a37c3dc87ef2056b04bdd9ac0e41fcedce10",
    "subject": "Add Sec-CH-UA-Wow64 to `HttpHeaders`. Spec: https://wicg.github.io/ua-client-hints/#sec-ch-ua-wow64",
    "sanitized_subject_line": "Add-Sec-CH-UA-Wow64-to-HttpHeaders",
    "commit_notes": "",
    "body": "RELNOTES=`net`: Added `HttpHeaders` constant `Sec-CH-UA-Wow64`. PiperOrigin-RevId: 471292642 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 31 Aug 2022 10:43:21 -0700"
  },
  {
    "commitHash": "32f7a37c3dc87ef2056b04bdd9ac0e41fcedce10",
    "parent": "807a5938700ba4041bf8fa4d1a1ebbc040b04906",
    "subject": "Remove J2ObjCIncompatible from Stopwatch.elapsed",
    "sanitized_subject_line": "Remove-J2ObjCIncompatible-from-Stopwatch.elapsed",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 471121659 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 30 Aug 2022 16:45:05 -0700"
  },
  {
    "commitHash": "807a5938700ba4041bf8fa4d1a1ebbc040b04906",
    "parent": "f1c700c3526034c2b1c304a0467c5d412392bbde",
    "subject": "Remove J2ObjCIncompatible from Stopwatch.elapsed",
    "sanitized_subject_line": "Remove-J2ObjCIncompatible-from-Stopwatch.elapsed",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 471074169 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 30 Aug 2022 13:28:01 -0700"
  },
  {
    "commitHash": "f1c700c3526034c2b1c304a0467c5d412392bbde",
    "parent": "43b5235ea828f0bdbe214459b877b1cb51d4a761",
    "subject": "Fix typos",
    "sanitized_subject_line": "Fix-typos",
    "commit_notes": "",
    "body": "Fixes #6161  RELNOTES=n/a PiperOrigin-RevId: 470263061 ",
    "author_name": "Michael Ernst",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 26 Aug 2022 09:25:17 -0700"
  },
  {
    "commitHash": "43b5235ea828f0bdbe214459b877b1cb51d4a761",
    "parent": "010ed2696a0e59660e2247079468f8cf5fbd1c86",
    "subject": "Minor improvements to `BaseEncoding`.",
    "sanitized_subject_line": "Minor-improvements-to-BaseEncoding",
    "commit_notes": "",
    "body": "* Use `volatile` instead of `transient` for cached values. The containing class isn't `Serializable` so `transient` isn't particularly meaningful, while `volatile` makes sense.  * Use `java.util.Objects` rather than `com.google.common.base.Objects`. The main advantage is that we avoid creating a varargs array in `Objects.hashCode`.  * Avoid integer division when computing chunk sizes. (This code isn't particularly performance-sensitive, but the replacement may also be a bit easier to follow.)  RELNOTES=n/a PiperOrigin-RevId: 470098559 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 25 Aug 2022 15:32:34 -0700"
  },
  {
    "commitHash": "010ed2696a0e59660e2247079468f8cf5fbd1c86",
    "parent": "b9c4a779ebb4a4c12cf80b348934e0b40eb53397",
    "subject": "Fix typos",
    "sanitized_subject_line": "Fix-typos",
    "commit_notes": "",
    "body": "Fixes #6159  RELNOTES=n/a PiperOrigin-RevId: 470067219 ",
    "author_name": "Michael Ernst",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 25 Aug 2022 13:22:48 -0700"
  },
  {
    "commitHash": "b9c4a779ebb4a4c12cf80b348934e0b40eb53397",
    "parent": "9c1e5dea4b980202ba003b90fcb64183d42031b3",
    "subject": "In `BaseEncoding`, ensure that `.lowerCase().ignoreCase()` is the same as `.ignoreCase().lowerCase()`.",
    "sanitized_subject_line": "In-BaseEncoding-ensure-that-.lowerCase-.ignoreCase-is-the-same-as-.ignoreCase-.lowerCase",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 470008821 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 25 Aug 2022 09:34:08 -0700"
  },
  {
    "commitHash": "9c1e5dea4b980202ba003b90fcb64183d42031b3",
    "parent": "0f1d9352e88ead08d4d2c984d480c3cc210a1a0b",
    "subject": "Add `BaseEncoding.ignoreCase()`.",
    "sanitized_subject_line": "Add-BaseEncoding.ignoreCase",
    "commit_notes": "",
    "body": "Calling `baseEncoding.ignoreCase()` returns a new `BaseEncoding` instance equivalent to `baseEncoding` except that it accepts either case when decoding. When *en*coding it continues to use whatever case the original `baseEncoding` used.  RELNOTES=`BaseEncoding` acquires a new `ignoreCase()` method to support case-insensitive decoding. PiperOrigin-RevId: 469812601 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 24 Aug 2022 13:43:38 -0700"
  },
  {
    "commitHash": "0f1d9352e88ead08d4d2c984d480c3cc210a1a0b",
    "parent": "c9c543ec82405d003ebf818e45a6a4e04f88acc9",
    "subject": "Modernize `BaseEncodingTest` somewhat.",
    "sanitized_subject_line": "Modernize-BaseEncodingTest-somewhat",
    "commit_notes": "",
    "body": "Use Truth throughout. Use try-with-resources.  Currently GWT support prevents us from being able to use JUnit 4, including `assertThrows`.  PiperOrigin-RevId: 469740441 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 24 Aug 2022 09:06:14 -0700"
  },
  {
    "commitHash": "c9c543ec82405d003ebf818e45a6a4e04f88acc9",
    "parent": "101dc3ea704d58a4ee172e40a73f40e5fb3cabe8",
    "subject": "Avoid reflection on `java.util.concurrent` internals during tests.",
    "sanitized_subject_line": "Avoid-reflection-on-java.util.concurrent-internals-during-tests",
    "commit_notes": "",
    "body": "Under modern JDKs, it will fail.  This lets us remove one of our `--add-opens` lines. (I haven't looked into [the others](https://github.com/google/guava/issues/5801#issuecomment-1075167434).)  Example failure:  ``` java.lang.reflect.InaccessibleObjectException: Unable to make protected final java.lang.Thread java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread() accessible: module java.base does not \"opens java.util.concurrent.locks\" to unnamed module @5ba184fc; did you mean --add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED at java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:348) at java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:280) at java.lang.reflect.Method.checkCanSetAccessible(Method.java:198) at java.lang.reflect.Method.setAccessible(Method.java:192) at com.google.common.util.concurrent.InterruptibleTaskTest.testInterruptIsSlow(InterruptibleTaskTest.java:160) ```  Relevant to https://github.com/google/guava/issues/5801  RELNOTES=n/a PiperOrigin-RevId: 469515689 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 23 Aug 2022 11:46:55 -0700"
  },
  {
    "commitHash": "101dc3ea704d58a4ee172e40a73f40e5fb3cabe8",
    "parent": "4312d949967f3fb245636f66437a00dd8c346d38",
    "subject": "`collect`: Presize the `ImmutableMap` builder when `uniqueIndex` is run on a `Collection`",
    "sanitized_subject_line": "collect-Presize-the-ImmutableMap-builder-when-uniqueIndex-is-run-on-a-Collection",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Presize the `ImmutableMap` builder when `uniqueIndex` is run on a `Collection` PiperOrigin-RevId: 469418201 ",
    "author_name": "Near Privman",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 23 Aug 2022 03:59:38 -0700"
  },
  {
    "commitHash": "4312d949967f3fb245636f66437a00dd8c346d38",
    "parent": "e9755b4f20de9ffe8c50a93f7c8c70a70bf28e5e",
    "subject": "Fix lenient format strings in common.",
    "sanitized_subject_line": "Fix-lenient-format-strings-in-common",
    "commit_notes": "",
    "body": "RELNOTES=N/A PiperOrigin-RevId: 469179783 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 22 Aug 2022 07:27:44 -0700"
  },
  {
    "commitHash": "e9755b4f20de9ffe8c50a93f7c8c70a70bf28e5e",
    "parent": "c111c0150225739b3f5914d1739cd22fb692bce7",
    "subject": "Fix comment from cl/468316113.",
    "sanitized_subject_line": "Fix-comment-from-cl-468316113",
    "commit_notes": "",
    "body": "I was mixing up two different problems.  (I'm pretty sure we've see this problem before, but I'm too lazy to search.)  RELNOTES=n/a PiperOrigin-RevId: 468480273 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 18 Aug 2022 09:48:17 -0700"
  },
  {
    "commitHash": "c111c0150225739b3f5914d1739cd22fb692bce7",
    "parent": "5c8719e28880a0f942272bdd57d9a194a2d6226c",
    "subject": "Tweak the mainline and backport to produce identical `.class` files.",
    "sanitized_subject_line": "Tweak-the-mainline-and-backport-to-produce-identical-.class-files",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 468316113 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 17 Aug 2022 16:08:31 -0700"
  },
  {
    "commitHash": "5c8719e28880a0f942272bdd57d9a194a2d6226c",
    "parent": "f942fd2c0e6cdf424a6a1d041c7213e663457fd6",
    "subject": "Attempt to improve documentation of `@ParametricNullness`.",
    "sanitized_subject_line": "Attempt-to-improve-documentation-of-ParametricNullness",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/6126 ...at least the documentation part (hopefully), which is the best we can do for the moment. For progress on nullness annotations in general, watch for news in our release notes and eventually on https://github.com/google/guava/issues/2960  RELNOTES=n/a PiperOrigin-RevId: 466785049 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 10 Aug 2022 14:27:51 -0700"
  },
  {
    "commitHash": "f942fd2c0e6cdf424a6a1d041c7213e663457fd6",
    "parent": "2c72146b7876ea490331591871f457d6e5c5544d",
    "subject": "Add application/jwt MediaType",
    "sanitized_subject_line": "Add-application-jwt-MediaType",
    "commit_notes": "",
    "body": "RELNOTES=`net`: Added the `MediaType` constant for JWT. PiperOrigin-RevId: 466457054 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 9 Aug 2022 13:50:01 -0700"
  },
  {
    "commitHash": "2c72146b7876ea490331591871f457d6e5c5544d",
    "parent": "0136f801410bac6d1b96653c2ca9734dccb2bb39",
    "subject": "Add a couple missing `@CIRV` annotations.",
    "sanitized_subject_line": "Add-a-couple-missing-CIRV-annotations",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 466056991 ",
    "author_name": "Colin Decker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 8 Aug 2022 09:05:39 -0700"
  },
  {
    "commitHash": "0136f801410bac6d1b96653c2ca9734dccb2bb39",
    "parent": "3b1ab72a093b1aa06125e0ffca900f2e289cba58",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 466031846 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 8 Aug 2022 07:01:15 -0700"
  },
  {
    "commitHash": "3b1ab72a093b1aa06125e0ffca900f2e289cba58",
    "parent": "bd5a777790e15226f9756701080da9168144206c",
    "subject": "Remove `@CanIgnoreReturnValue` from `CacheBuilderSpec.parse()` and fix up callers.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-CacheBuilderSpec.parse-and-fix-up-callers",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465939420 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sun, 7 Aug 2022 19:48:06 -0700"
  },
  {
    "commitHash": "bd5a777790e15226f9756701080da9168144206c",
    "parent": "67350a341c5cfd5e9bebf86ba87687ab7ef602b2",
    "subject": "Remove `@CheckReturnValue` from individual methods now that the entire package is annotated.",
    "sanitized_subject_line": "Remove-CheckReturnValue-from-individual-methods-now-that-the-entire-package-is-annotated",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465816628 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 6 Aug 2022 19:38:22 -0700"
  },
  {
    "commitHash": "67350a341c5cfd5e9bebf86ba87687ab7ef602b2",
    "parent": "11f526d9eaed561cfb5712268a5fad04f3138874",
    "subject": "Add `@CheckReturnValue` to `com.google.common.cache.package-info.java`, add `@CanIgnoreReturnValue` (as necessary), and trim `com.google.common.cache` entries from the cirv exclusion list.",
    "sanitized_subject_line": "Add-CheckReturnValue-to-com.google.common.cache.package-info.java-add-CanIgnoreReturnValue-as-necessary-and-trim-com.google.common.cache-entries-from-the-cirv-exclusion-list",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465774011 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 6 Aug 2022 10:12:03 -0700"
  },
  {
    "commitHash": "11f526d9eaed561cfb5712268a5fad04f3138874",
    "parent": "dc90ff245eaf94854d62a8c784f7797bee306e19",
    "subject": "Add `@CanIgnoreReturnValue` annotations and suppressions (as appropriate) to `com.google.common.cache`.",
    "sanitized_subject_line": "Add-CanIgnoreReturnValue-annotations-and-suppressions-as-appropriate-to-com.google.common.cache",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465615292 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 5 Aug 2022 11:53:23 -0700"
  },
  {
    "commitHash": "dc90ff245eaf94854d62a8c784f7797bee306e19",
    "parent": "4e929d089b84d4a6c80809e1ff4e5033eb2a14ab",
    "subject": "Add `@CanIgnoreReturnValue` annotations and suppressions (as appropriate) to `com.google.common.cache`.",
    "sanitized_subject_line": "Add-CanIgnoreReturnValue-annotations-and-suppressions-as-appropriate-to-com.google.common.cache",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465591310 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 5 Aug 2022 10:21:46 -0700"
  },
  {
    "commitHash": "4e929d089b84d4a6c80809e1ff4e5033eb2a14ab",
    "parent": "8f462ad09baf382920e82504d4ba720289615bdd",
    "subject": "Add `@CheckReturnValue` to `CacheBuilder`.",
    "sanitized_subject_line": "Add-CheckReturnValue-to-CacheBuilder",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465479134 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 4 Aug 2022 22:00:14 -0700"
  },
  {
    "commitHash": "8f462ad09baf382920e82504d4ba720289615bdd",
    "parent": "e06a8cec65815599e510d7f9c1ea9d2a8eaa438a",
    "subject": "Remove `@CanIgnoreReturnValue` from `converter.convertAll(Iterable)` and `converter.apply(A)`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-converter.convertAll-Iterable-and-converter.apply-A",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465338749 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 4 Aug 2022 09:59:18 -0700"
  },
  {
    "commitHash": "e06a8cec65815599e510d7f9c1ea9d2a8eaa438a",
    "parent": "38040508a3783e482dd28372c79c504ae45b6b75",
    "subject": "Enable Error Prone for Maven builds.",
    "sanitized_subject_line": "Enable-Error-Prone-for-Maven-builds",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/2484  RELNOTES=n/a PiperOrigin-RevId: 465199181 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 3 Aug 2022 18:39:13 -0700"
  },
  {
    "commitHash": "38040508a3783e482dd28372c79c504ae45b6b75",
    "parent": "3396208df88e0348285ed7b692d32218431e41a2",
    "subject": "Remove `@CanIgnoreReturnValue` from `Converter.convert()`, effectively making it `@CheckReturnValue`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-Converter.convert-effectively-making-it-CheckReturnValue",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 465155963 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 3 Aug 2022 14:57:58 -0700"
  },
  {
    "commitHash": "3396208df88e0348285ed7b692d32218431e41a2",
    "parent": "dd26f10a2141d0ba5c79a6a4889e9b22e5b6af2d",
    "subject": "Mark a field as `final`.",
    "sanitized_subject_line": "Mark-a-field-as-final",
    "commit_notes": "",
    "body": "I don't think there was any concurrency-related danger here from the non-`final` field. But it should have been `final` to begin with, so now it is.  PiperOrigin-RevId: 464094745 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 29 Jul 2022 09:31:42 -0700"
  },
  {
    "commitHash": "dd26f10a2141d0ba5c79a6a4889e9b22e5b6af2d",
    "parent": "4a37c76050216dc44a37b682f260506f556b296e",
    "subject": "Mark a field as `final`.",
    "sanitized_subject_line": "Mark-a-field-as-final",
    "commit_notes": "",
    "body": "I don't think there was any concurrency-related danger here from the non-`final` field. But it should have been `final` to begin with, so now it is.  PiperOrigin-RevId: 463690456 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 27 Jul 2022 15:14:51 -0700"
  },
  {
    "commitHash": "4a37c76050216dc44a37b682f260506f556b296e",
    "parent": "b037a558e88c7587dd77276182a4156c490a2144",
    "subject": "Mark a field as `final`.",
    "sanitized_subject_line": "Mark-a-field-as-final",
    "commit_notes": "",
    "body": "I don't think there was any concurrency-related danger here from the non-`final` field. But it should have been `final` to begin with, so now it is.  RELNOTES=n/a PiperOrigin-RevId: 463651681 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 27 Jul 2022 12:37:36 -0700"
  },
  {
    "commitHash": "b037a558e88c7587dd77276182a4156c490a2144",
    "parent": "0d5c16fc6b9eed1d3016dfceaf94d370fae27043",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 463079205 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 25 Jul 2022 07:23:31 -0700"
  },
  {
    "commitHash": "0d5c16fc6b9eed1d3016dfceaf94d370fae27043",
    "parent": "0bacca267f48f383438cdae16c04f13383309b9f",
    "subject": "Add a SUPPORTS_LOADING_MODE response header.",
    "sanitized_subject_line": "Add-a-SUPPORTS_LOADING_MODE-response-header",
    "commit_notes": "",
    "body": "The response header is needed for a document to be loaded in a fenced frame: https://developer.chrome.com/docs/privacy-sandbox/fenced-frame/#server-opt-in.  RELNOTES=`net`: Added `SUPPORTS_LOADING_MODE` HTTP response header. PiperOrigin-RevId: 462659126 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 22 Jul 2022 10:59:56 -0700"
  },
  {
    "commitHash": "0bacca267f48f383438cdae16c04f13383309b9f",
    "parent": "f5b5c2065a7c23ddf83ed9e4ee087ba504d8be3e",
    "subject": "Copy more `@CanIgnoreReturnValue` annotations to GWT emulations.",
    "sanitized_subject_line": "Copy-more-CanIgnoreReturnValue-annotations-to-GWT-emulations",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 461928636 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 19 Jul 2022 11:16:02 -0700"
  },
  {
    "commitHash": "f5b5c2065a7c23ddf83ed9e4ee087ba504d8be3e",
    "parent": "4fff0006bb26f254d36b3b0109b99238e216c718",
    "subject": "Remove GWT elemental2 dependency.",
    "sanitized_subject_line": "Remove-GWT-elemental2-dependency",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 461792069 ",
    "author_name": "Goktug Gokdogan",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 18 Jul 2022 21:29:50 -0700"
  },
  {
    "commitHash": "4fff0006bb26f254d36b3b0109b99238e216c718",
    "parent": "a98c363d44d76ee4db77df803fead71e0b57e7cf",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 461681687 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 18 Jul 2022 12:13:56 -0700"
  },
  {
    "commitHash": "a98c363d44d76ee4db77df803fead71e0b57e7cf",
    "parent": "2cb2cc6ac791bfe12d2b856c70d1cd9a7685c75b",
    "subject": "Bump styfle/cancel-workflow-action from 0.9.1 to 0.10.0",
    "sanitized_subject_line": "Bump-styfle-cancel-workflow-action-from-0.9.1-to-0.10.0",
    "commit_notes": "",
    "body": "Bumps [styfle/cancel-workflow-action](https://github.com/styfle/cancel-workflow-action) from 0.9.1 to 0.10.0. - [Release notes](https://github.com/styfle/cancel-workflow-action/releases) - [Commits](https://github.com/styfle/cancel-workflow-action/compare/0.9.1...0.10.0)  --- updated-dependencies: - dependency-name: styfle/cancel-workflow-action   dependency-type: direct:production   update-type: version-update:semver-minor ...  Signed-off-by: dependabot[bot] <support@github.com>  Closes https://github.com/google/guava/pull/6092  RELNOTES=n/a PiperOrigin-RevId: 460776493 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 13 Jul 2022 12:20:35 -0700"
  },
  {
    "commitHash": "2cb2cc6ac791bfe12d2b856c70d1cd9a7685c75b",
    "parent": "bb374970373ccf0f526f20e227f009e94656ca44",
    "subject": "Bump actions/setup-java from 3.4.0 to 3.4.1",
    "sanitized_subject_line": "Bump-actions-setup-java-from-3.4.0-to-3.4.1",
    "commit_notes": "",
    "body": "Bumps [actions/setup-java](https://github.com/actions/setup-java) from 3.4.0 to 3.4.1. - [Release notes](https://github.com/actions/setup-java/releases) - [Commits](https://github.com/actions/setup-java/compare/v3.4.0...v3.4.1)  --- updated-dependencies: - dependency-name: actions/setup-java   dependency-type: direct:production   update-type: version-update:semver-patch ...  Signed-off-by: dependabot[bot] <support@github.com>  Closes https://github.com/google/guava/pull/6105  RELNOTES=n/a PiperOrigin-RevId: 460743177 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 13 Jul 2022 10:07:50 -0700"
  },
  {
    "commitHash": "bb374970373ccf0f526f20e227f009e94656ca44",
    "parent": "4cf437c75062d98fcb1172dc3b0a3d309650aa37",
    "subject": "ci: add GitHub token permissions for workflow",
    "sanitized_subject_line": "ci-add-GitHub-token-permissions-for-workflow",
    "commit_notes": "",
    "body": "Signed-off-by: Varun Sharma <varunsh@stepsecurity.io>  Closes https://github.com/google/guava/pull/6106  RELNOTES=n/a PiperOrigin-RevId: 460733976 ",
    "author_name": "Varun Sharma",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 13 Jul 2022 09:26:29 -0700"
  },
  {
    "commitHash": "4cf437c75062d98fcb1172dc3b0a3d309650aa37",
    "parent": "e9ff35e61201922c96d8b6505db1ba4688c31f0a",
    "subject": "Remove mod.uk from changes file for Public Suffix List.",
    "sanitized_subject_line": "Remove-mod.uk-from-changes-file-for-Public-Suffix-List",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 459753329 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 8 Jul 2022 07:29:35 -0700"
  },
  {
    "commitHash": "e9ff35e61201922c96d8b6505db1ba4688c31f0a",
    "parent": "ee0a3b0c1022040d165cb3231b852a73174dfc20",
    "subject": "Add `@CanIgnoreReturnValue` to `Uninterruptibles.getUninterruptibly()` under GWT.",
    "sanitized_subject_line": "Add-CanIgnoreReturnValue-to-Uninterruptibles.getUninterruptibly-under-GWT",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 459508737 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 7 Jul 2022 07:34:20 -0700"
  },
  {
    "commitHash": "ee0a3b0c1022040d165cb3231b852a73174dfc20",
    "parent": "f71fa1507c35470a43a8f5319a513eacf5a5ed28",
    "subject": "Add missing `@CanIgnoreReturnValue` annotation to `ImmutableCollection.Builder.add()`.",
    "sanitized_subject_line": "Add-missing-CanIgnoreReturnValue-annotation-to-ImmutableCollection.Builder.add",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 459500346 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 7 Jul 2022 06:48:31 -0700"
  },
  {
    "commitHash": "f71fa1507c35470a43a8f5319a513eacf5a5ed28",
    "parent": "6da6def85e3ae7b1a851ca1a5de756b3eb2ca313",
    "subject": "Add more missing `@CanIgnoreReturnValue` annotations to GWT emulations.",
    "sanitized_subject_line": "Add-more-missing-CanIgnoreReturnValue-annotations-to-GWT-emulations",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 459253474 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 6 Jul 2022 08:10:02 -0700"
  },
  {
    "commitHash": "6da6def85e3ae7b1a851ca1a5de756b3eb2ca313",
    "parent": "1db31fea45a5dba96b406f270089b56f4e1e6522",
    "subject": "Annotate some GWT emulation code with `@CanIgnoreReturnValue`.",
    "sanitized_subject_line": "Annotate-some-GWT-emulation-code-with-CanIgnoreReturnValue",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 458313307 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 30 Jun 2022 14:26:09 -0700"
  },
  {
    "commitHash": "1db31fea45a5dba96b406f270089b56f4e1e6522",
    "parent": "91b10f0754fb64f976fcc790c772cfbf51d14c1d",
    "subject": "Annotate GWT emul `AbstractFuture` with `@CanIgnoreReturnValue`.",
    "sanitized_subject_line": "Annotate-GWT-emul-AbstractFuture-with-CanIgnoreReturnValue",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 458297776 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 30 Jun 2022 13:18:34 -0700"
  },
  {
    "commitHash": "91b10f0754fb64f976fcc790c772cfbf51d14c1d",
    "parent": "4d733da8b2af9b1b340afd360c084ad938745b4a",
    "subject": "Fix erroneous -0 literals in tests",
    "sanitized_subject_line": "Fix-erroneous-0-literals-in-tests",
    "commit_notes": "",
    "body": "-0 is evaluated to 0, even if the result is afterwards converted to float or double, for example: Double.toString(-0)  Fixes #6093  RELNOTES=n/a PiperOrigin-RevId: 457985998 ",
    "author_name": "Marcono1234",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 29 Jun 2022 08:49:27 -0700"
  },
  {
    "commitHash": "4d733da8b2af9b1b340afd360c084ad938745b4a",
    "parent": "4df79d565eef5e523c04bb6865d93f62c52e98d1",
    "subject": "Bump actions/setup-java from 3.3.0 to 3.4.0",
    "sanitized_subject_line": "Bump-actions-setup-java-from-3.3.0-to-3.4.0",
    "commit_notes": "",
    "body": "Bumps [actions/setup-java](https://github.com/actions/setup-java) from 3.3.0 to 3.4.0. - [Release notes](https://github.com/actions/setup-java/releases) - [Commits](https://github.com/actions/setup-java/compare/v3.3.0...v3.4.0)  Fixes #6086  RELNOTES=n/a PiperOrigin-RevId: 456758095 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Jun 2022 07:03:12 -0700"
  },
  {
    "commitHash": "4df79d565eef5e523c04bb6865d93f62c52e98d1",
    "parent": "d8633ac8539dae52c8361f79c7a0dbd9ad6dd2c4",
    "subject": "Remove incorrect `@CanIgnoreReturnValue`s on `MonitorBasedPriorityBlockingQueue`.",
    "sanitized_subject_line": "Remove-incorrect-CanIgnoreReturnValue-s-on-MonitorBasedPriorityBlockingQueue",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 455971132 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sun, 19 Jun 2022 18:13:04 -0700"
  },
  {
    "commitHash": "d8633ac8539dae52c8361f79c7a0dbd9ad6dd2c4",
    "parent": "78e518b79012a3522d8d1f1c06ac327545ae54bf",
    "subject": "Fix typos in MoreExecutors javadoc",
    "sanitized_subject_line": "Fix-typos-in-MoreExecutors-javadoc",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 455325511 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 16 Jun 2022 01:55:17 -0700"
  },
  {
    "commitHash": "78e518b79012a3522d8d1f1c06ac327545ae54bf",
    "parent": "78d67c94dbe95b918c839b3a0b50d44508c2838b",
    "subject": "Tidy up Guava's `@CheckReturnValue` / `@CanIgnoreReturnValue` annotations (including pushing `@CIRV` annotations down from the class-level to method-level).",
    "sanitized_subject_line": "Tidy-up-Guava-s-CheckReturnValue-CanIgnoreReturnValue-annotations-including-pushing-CIRV-annotations-down-from-the-class-level-to-method-level",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 455212673 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 15 Jun 2022 13:59:00 -0700"
  },
  {
    "commitHash": "78d67c94dbe95b918c839b3a0b50d44508c2838b",
    "parent": "cc893a98ca1673d492b2206e991a2399d9f3a7cd",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 453284779 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 6 Jun 2022 14:36:16 -0700"
  },
  {
    "commitHash": "cc893a98ca1673d492b2206e991a2399d9f3a7cd",
    "parent": "78b41ebe5c327e26709cb61a737cb4236cfe7cb3",
    "subject": "Remove `@CanIgnoreReturnValue` from `ThreadFactoryBuilder`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-ThreadFactoryBuilder",
    "commit_notes": "",
    "body": "RELNOTES=none PiperOrigin-RevId: 453213068 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 6 Jun 2022 09:16:42 -0700"
  },
  {
    "commitHash": "78b41ebe5c327e26709cb61a737cb4236cfe7cb3",
    "parent": "d0fc167507031149c4bbcbd4e08d4ca89d727783",
    "subject": "Add a warning to `ThreadFactoryBuilder.setPriority(int)`.",
    "sanitized_subject_line": "Add-a-warning-to-ThreadFactoryBuilder.setPriority-int",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 452789242 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 3 Jun 2022 10:10:18 -0700"
  },
  {
    "commitHash": "d0fc167507031149c4bbcbd4e08d4ca89d727783",
    "parent": "2386c63c36db6f4eb84f2b8ac8973f50522ff8dc",
    "subject": "Add `@CanIgnoreReturnValue` to some `com.google.common.graph` builders.",
    "sanitized_subject_line": "Add-CanIgnoreReturnValue-to-some-com.google.common.graph-builders",
    "commit_notes": "",
    "body": "RELNOTES=none PiperOrigin-RevId: 452664712 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 2 Jun 2022 18:21:31 -0700"
  },
  {
    "commitHash": "2386c63c36db6f4eb84f2b8ac8973f50522ff8dc",
    "parent": "e62d6a0456420d295089a9c319b7593a3eae4a83",
    "subject": "Upgrade maven-gpg-plugin to 3.0.1.",
    "sanitized_subject_line": "Upgrade-maven-gpg-plugin-to-3.0.1",
    "commit_notes": "",
    "body": "Fixes #6063  RELNOTES=n/a PiperOrigin-RevId: 451398302 ",
    "author_name": "William Collishaw",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 27 May 2022 08:13:57 -0700"
  },
  {
    "commitHash": "e62d6a0456420d295089a9c319b7593a3eae4a83",
    "parent": "76260d9b3c6acbabf9a8ddae11d4fff3985b6272",
    "subject": "Add exception-throwing `readObject` to classes using the serial-proxy pattern.",
    "sanitized_subject_line": "Add-exception-throwing-readObject-to-classes-using-the-serial-proxy-pattern",
    "commit_notes": "",
    "body": "See _Effective Java_, 3rd edition, Item 90.  RELNOTES=Classes with \"serial proxies\" acquire exception-throwing `readObject` methods, in accordance with best practice. PiperOrigin-RevId: 451001736 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 25 May 2022 13:32:46 -0700"
  },
  {
    "commitHash": "76260d9b3c6acbabf9a8ddae11d4fff3985b6272",
    "parent": "7731825df8008c3fa65096d2681952eddd3b0c2d",
    "subject": "Fix issue #5843",
    "sanitized_subject_line": "Fix-issue-5843",
    "commit_notes": "",
    "body": "RELNOTES=Fix issue #5843 PiperOrigin-RevId: 450827341 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 24 May 2022 20:01:05 -0700"
  },
  {
    "commitHash": "7731825df8008c3fa65096d2681952eddd3b0c2d",
    "parent": "7581939985e53d0048d3a93cd7ca4652a99e8b08",
    "subject": "Change `RangeMap.putAll()` to take `RangeMap<K, ? extends V>` so that, for example, you could put a `RangeMap<Instant, String>` into a `RangeMap<Instant, CharSequence>` just as you could put each entry using `put(Range<Instant>, CharSequence)`.",
    "sanitized_subject_line": "Change-RangeMap.putAll-to-take-RangeMap-K-extends-V-so-that-for-example-you-could-put-a-RangeMap-Instant-String-into-a-RangeMap-Instant-CharSequence-just-as-you-could-put-each-entry-using-put-Range-Instant-CharSequence",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 449758638 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 19 May 2022 09:11:28 -0700"
  },
  {
    "commitHash": "7581939985e53d0048d3a93cd7ca4652a99e8b08",
    "parent": "9303eb2115f3be584c1efba78b39055f098be0f8",
    "subject": "Improve the performance of Hashing's toString computation.",
    "sanitized_subject_line": "Improve-the-performance-of-Hashing-s-toString-computation",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 449257918 ",
    "author_name": "Nick Glorioso",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 17 May 2022 10:40:57 -0700"
  },
  {
    "commitHash": "9303eb2115f3be584c1efba78b39055f098be0f8",
    "parent": "05df05d1c0e119faebde028a3ea56d6caed91f16",
    "subject": "Updating common.graph {Network,Graph,ValueGraph}Builder documentation",
    "sanitized_subject_line": "Updating-common.graph-Network-Graph-ValueGraph-Builder-documentation",
    "commit_notes": "",
    "body": "RELNOTES=Updating common.graph {Network,Graph,ValueGraph}Builder documentation PiperOrigin-RevId: 449166390 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 17 May 2022 02:34:24 -0700"
  },
  {
    "commitHash": "05df05d1c0e119faebde028a3ea56d6caed91f16",
    "parent": "8f0350a21a713e2367cbcb526aa7bc5bf381fcb9",
    "subject": "Remove workaround for old GWT bug.",
    "sanitized_subject_line": "Remove-workaround-for-old-GWT-bug",
    "commit_notes": "",
    "body": "It was fixed in https://gwt-review.googlesource.com/c/gwt/+/19960, which made it into [GWT 2.9.0](https://www.gwtproject.org/release-notes.html), which our tests [have been using for some time](https://github.com/google/guava/blob/8f0350a21a713e2367cbcb526aa7bc5bf381fcb9/guava-gwt/pom.xml#L20).  PiperOrigin-RevId: 448991833 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 16 May 2022 10:18:39 -0700"
  },
  {
    "commitHash": "8f0350a21a713e2367cbcb526aa7bc5bf381fcb9",
    "parent": "cd5cf321c37107a5e262211ea4299f0c001ee872",
    "subject": "When we catch `InterruptedException`, take care to restore the interrupt bit.",
    "sanitized_subject_line": "When-we-catch-InterruptedException-take-care-to-restore-the-interrupt-bit",
    "commit_notes": "",
    "body": "We already were doing this in the cases in which our `catch` block was of the form `catch (InterruptedException e)`, but we weren't doing it when we were catching a more general type, such as `Exception`.  RELNOTES=`util.concurrent`: Fixed some cases in which we could catch `InterruptedException` but fail to restore the interrupt bit. PiperOrigin-RevId: 447706714 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 10 May 2022 05:27:25 -0700"
  },
  {
    "commitHash": "cd5cf321c37107a5e262211ea4299f0c001ee872",
    "parent": "412a42043c7104d3e2c5b08a70e68faf947af626",
    "subject": "[PATCH] Bump actions/setup-java from 3.1.1 to 3.3.0",
    "sanitized_subject_line": "PATCH-Bump-actions-setup-java-from-3.1.1-to-3.3.0",
    "commit_notes": "",
    "body": "Bumps [actions/setup-java](https://github.com/actions/setup-java) from 3.1.1 to 3.3.0. - [Release notes](https://github.com/actions/setup-java/releases) - [Commits](https://github.com/actions/setup-java/compare/v3.1.1...v3.3.0)  Closes https://github.com/google/guava/pull/6040  RELNOTES=N/A PiperOrigin-RevId: 447472497 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 9 May 2022 08:17:14 -0700"
  },
  {
    "commitHash": "412a42043c7104d3e2c5b08a70e68faf947af626",
    "parent": "7526b1f9bc1744729aa269064d20aa7cedc2ace9",
    "subject": "Use built-in cache in actions/setup-java.",
    "sanitized_subject_line": "Use-built-in-cache-in-actions-setup-java",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6037, https://github.com/google/guava/issues/6035  RELNOTES=N/A PiperOrigin-RevId: 447461881 ",
    "author_name": "Certseeds",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 9 May 2022 07:20:44 -0700"
  },
  {
    "commitHash": "7526b1f9bc1744729aa269064d20aa7cedc2ace9",
    "parent": "6e9057d0f28799b7483d96097fc7ea2247ebf8d5",
    "subject": "`collect`: Marked `Range` as `@Immutable`",
    "sanitized_subject_line": "collect-Marked-Range-as-Immutable",
    "commit_notes": "",
    "body": "RELNOTES=Mark `Range` as `@Immutable` PiperOrigin-RevId: 446705346 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 5 May 2022 06:56:02 -0700"
  },
  {
    "commitHash": "6e9057d0f28799b7483d96097fc7ea2247ebf8d5",
    "parent": "f2bb1718f800a2486527b0bf5d83218945d3d9f1",
    "subject": "Add `rotate()` methods for other primitive array types, except `boolean`.",
    "sanitized_subject_line": "Add-rotate-methods-for-other-primitive-array-types-except-boolean",
    "commit_notes": "",
    "body": "Also add an explanation of possible alternative algorithms, in `Ints.rotate`.  RELNOTES=`primitives`: Added `rotate()` for arrays of all primitive types. PiperOrigin-RevId: 446428068 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 4 May 2022 05:18:26 -0700"
  },
  {
    "commitHash": "f2bb1718f800a2486527b0bf5d83218945d3d9f1",
    "parent": "6d986d1100d2031d2407e434b2a775a848173445",
    "subject": "Be clearer about what types we're catching.",
    "sanitized_subject_line": "Be-clearer-about-what-types-we-re-catching",
    "commit_notes": "",
    "body": "In particular, this helps make clearer that none of these particular `catch` blocks catch arbitrary checked exceptions—and thus that none of them catch `InterruptedException`.  Also, I've removed some `catch (Throwable t)` blocks from `FakeTimeLimiter`. They could never be hit, since previous blocks had caught both `Error` and `Exception` (in the case of `Callable`) or `RuntimeException` (in the case of `Runnable`).  RELNOTES=n/a PiperOrigin-RevId: 445538563 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 29 Apr 2022 17:11:19 -0700"
  },
  {
    "commitHash": "6d986d1100d2031d2407e434b2a775a848173445",
    "parent": "a5660b462ceed47283d058ac546bd0d4649ee9fb",
    "subject": "Annotate a safe racy initialization with `@LazyInit`.",
    "sanitized_subject_line": "Annotate-a-safe-racy-initialization-with-LazyInit",
    "commit_notes": "",
    "body": "This makes TSAN happy.  Compare the other `@LazyInit` field in the class, added in cl/273585560 (and others in other classes).  RELNOTES=n/a PiperOrigin-RevId: 445477791 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 29 Apr 2022 12:21:30 -0700"
  },
  {
    "commitHash": "a5660b462ceed47283d058ac546bd0d4649ee9fb",
    "parent": "0292b730b86129aa69cb165a4a5f349fa2936edb",
    "subject": "Mark some tests that don't pass under Android as `@AndroidIncompatible`.",
    "sanitized_subject_line": "Mark-some-tests-that-don-t-pass-under-Android-as-AndroidIncompatible",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 444929745 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 27 Apr 2022 12:06:56 -0700"
  },
  {
    "commitHash": "0292b730b86129aa69cb165a4a5f349fa2936edb",
    "parent": "a24a8949264dce674d70d97b75696230437b3e21",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 444926867 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 27 Apr 2022 11:57:08 -0700"
  },
  {
    "commitHash": "a24a8949264dce674d70d97b75696230437b3e21",
    "parent": "69332c6da014c30713aca369921d9c484efc589b",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 444869006 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 27 Apr 2022 08:41:25 -0700"
  },
  {
    "commitHash": "69332c6da014c30713aca369921d9c484efc589b",
    "parent": "acb004c10193c1c476a9a9ba8683eeff910e4a82",
    "subject": "Make testSupplierThreadSafe private.",
    "sanitized_subject_line": "Make-testSupplierThreadSafe-private",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 444854646 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 27 Apr 2022 07:41:44 -0700"
  },
  {
    "commitHash": "acb004c10193c1c476a9a9ba8683eeff910e4a82",
    "parent": "c355ce77bfe19a292c59e3d04a9cf0041c6e859e",
    "subject": "Internal changes",
    "sanitized_subject_line": "Internal-changes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 444314425 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 25 Apr 2022 10:54:20 -0700"
  },
  {
    "commitHash": "c355ce77bfe19a292c59e3d04a9cf0041c6e859e",
    "parent": "cd338fa2bc69c88b50bfa6ab0eff3ac26e769ec9",
    "subject": "Add `@since NEXT` for `Ints.rotate`.",
    "sanitized_subject_line": "Add-since-NEXT-for-Ints.rotate",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 443720547 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 22 Apr 2022 11:48:23 -0700"
  },
  {
    "commitHash": "cd338fa2bc69c88b50bfa6ab0eff3ac26e769ec9",
    "parent": "ac878a5180eaf952d4d5c3ae0cc15d64d4edca29",
    "subject": "Adds rotate() for arrays of ints.",
    "sanitized_subject_line": "Adds-rotate-for-arrays-of-ints",
    "commit_notes": "",
    "body": "RELNOTES=Adds rotate() for arrays of ints. PiperOrigin-RevId: 443706002 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 22 Apr 2022 10:51:56 -0700"
  },
  {
    "commitHash": "ac878a5180eaf952d4d5c3ae0cc15d64d4edca29",
    "parent": "e7b86f4767ad1cfa58c5bcad1f7ca9358d52ee45",
    "subject": "Remove @GwtIncompatible from LongMath.checkedAdd",
    "sanitized_subject_line": "Remove-GwtIncompatible-from-LongMath.checkedAdd",
    "commit_notes": "",
    "body": "RELNOTES=Remove @GwtIncompatible from LongMath.checkedAdd PiperOrigin-RevId: 443380750 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 21 Apr 2022 08:11:35 -0700"
  },
  {
    "commitHash": "e7b86f4767ad1cfa58c5bcad1f7ca9358d52ee45",
    "parent": "0ca124d8a9a463e7aceb84bbc4e727644a5fda3e",
    "subject": "Further Truthy fixes.",
    "sanitized_subject_line": "Further-Truthy-fixes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 442815521 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 19 Apr 2022 08:17:35 -0700"
  },
  {
    "commitHash": "0ca124d8a9a463e7aceb84bbc4e727644a5fda3e",
    "parent": "ca12b7dee09ae83755104aaf36dc449c998b942e",
    "subject": "Migrate the `primitives` tests to Truth.",
    "sanitized_subject_line": "Migrate-the-primitives-tests-to-Truth",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 442609367 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 18 Apr 2022 12:54:48 -0700"
  },
  {
    "commitHash": "ca12b7dee09ae83755104aaf36dc449c998b942e",
    "parent": "fcca066e6d1ea878d1d5703524a67c3cdeb1d586",
    "subject": "Bump actions/setup-java from 2 to 3.1.1",
    "sanitized_subject_line": "Bump-actions-setup-java-from-2-to-3.1.1",
    "commit_notes": "",
    "body": "Bumps [actions/setup-java](https://github.com/actions/setup-java) from 2 to 3.1.1. - [Release notes](https://github.com/actions/setup-java/releases) - [Commits](https://github.com/actions/setup-java/compare/v2...v3.1.1)  Fixes #6007  RELNOTES=n/a PiperOrigin-RevId: 442591796 ",
    "author_name": "dependabot[bot]",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 18 Apr 2022 11:39:54 -0700"
  },
  {
    "commitHash": "fcca066e6d1ea878d1d5703524a67c3cdeb1d586",
    "parent": "30a8aed9b9e263dd23cf546befed9552779c9cbc",
    "subject": "Various simplifications to code and comments.",
    "sanitized_subject_line": "Various-simplifications-to-code-and-comments",
    "commit_notes": "",
    "body": "This time, with a workaround for a breakage in code that uses a particular custom classloader.  Fixes https://github.com/google/guava/pull/6006  PiperOrigin-RevId: 441881361 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 14 Apr 2022 16:23:01 -0700"
  },
  {
    "commitHash": "30a8aed9b9e263dd23cf546befed9552779c9cbc",
    "parent": "da1aa6184f15a070e327cccb0172f7567448bfa1",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 441528697 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 13 Apr 2022 11:11:33 -0700"
  },
  {
    "commitHash": "da1aa6184f15a070e327cccb0172f7567448bfa1",
    "parent": "ba44e3996d619f506f53f4c26309abe16f688cc2",
    "subject": "Various simplifications to code and comments.",
    "sanitized_subject_line": "Various-simplifications-to-code-and-comments",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6006  PiperOrigin-RevId: 440995567 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 11 Apr 2022 14:24:00 -0700"
  },
  {
    "commitHash": "ba44e3996d619f506f53f4c26309abe16f688cc2",
    "parent": "48b02ce53ca35b0db1e3def8f00d257cd4adf68c",
    "subject": "Various simplifications to code and comments.",
    "sanitized_subject_line": "Various-simplifications-to-code-and-comments",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/6006  RELNOTES=n/a PiperOrigin-RevId: 440971108 ",
    "author_name": "cedric.ai",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 11 Apr 2022 12:52:32 -0700"
  },
  {
    "commitHash": "48b02ce53ca35b0db1e3def8f00d257cd4adf68c",
    "parent": "8689448f815fb62125dba21d80615c60aa96e111",
    "subject": "Convert nested test classes to top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 438928695 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 1 Apr 2022 15:53:42 -0700"
  },
  {
    "commitHash": "8689448f815fb62125dba21d80615c60aa96e111",
    "parent": "f5157203468fa652d0b113c1d11d1d0f055319b4",
    "subject": "Convert nested test class to top-level class, and un-nest other test methods.",
    "sanitized_subject_line": "Convert-nested-test-class-to-top-level-class-and-un-nest-other-test-methods",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 438928368 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 1 Apr 2022 15:48:57 -0700"
  },
  {
    "commitHash": "f5157203468fa652d0b113c1d11d1d0f055319b4",
    "parent": "b30a7120f901b4a367b8a9839a8b8ba62457fbdf",
    "subject": "Use `long` multiplication `FarmHashFingerprint64`.",
    "sanitized_subject_line": "Use-long-multiplication-FarmHashFingerprint64",
    "commit_notes": "",
    "body": "This doesn't change behavior: The modified methods run only on small arrays, so there is no danger of overflow.  Still, in general, it's probably bad style to perform `int` math and then autoconvert the result to a `long` (which I _think_ is what we're doing here?), and I think there may even be an Error Prone check for a similar case(??). So let's not.  (part of https://github.com/google/guava/pull/5989)  RELNOTES=n/a PiperOrigin-RevId: 438926612 ",
    "author_name": "cedric.ai",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 1 Apr 2022 15:39:48 -0700"
  },
  {
    "commitHash": "b30a7120f901b4a367b8a9839a8b8ba62457fbdf",
    "parent": "6ec853ce614e1184876be90d195e1180ca3ab6c8",
    "subject": "Minor simplifications to `LittleEndianByteArray`.",
    "sanitized_subject_line": "Minor-simplifications-to-LittleEndianByteArray",
    "commit_notes": "",
    "body": "(part of https://github.com/google/guava/pull/5989)  RELNOTES=n/a PiperOrigin-RevId: 438921315 ",
    "author_name": "cedric.ai",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 1 Apr 2022 15:14:09 -0700"
  },
  {
    "commitHash": "6ec853ce614e1184876be90d195e1180ca3ab6c8",
    "parent": "2a268346329c3ce17ad1269c5c0206ddd2747a17",
    "subject": "Copy some tests from the mainline to the backport.",
    "sanitized_subject_line": "Copy-some-tests-from-the-mainline-to-the-backport",
    "commit_notes": "",
    "body": "Those tests aren't necessarily all as _interesting_ for the backport's implementation, but they can be made to work with little or no modification. So a bit of extra testing shouldn't hurt, and it's nice to minimize diffs between the two versions.  Complications: - `testBuilderPutAllEntryListJdkBacked` makes sense only when there is a JDK-backed implementation, so I didn't copy that over. (Probably there were other tests like this, too: This is just the one that I copied over without noticing the dependency on the JDK-backed implementation.) - `testBuildKeepingLast_collisions` kind of only does, too, though maybe testing of hash collisions in general is a reasonable idea (though I want to say we already have testing for that...). I had to modify it slightly. I could be convinced to revert this one entirely.  I just happened to notice these while working to convert nested test classes to top-level classes.  (The tests came from cl/184313314 and cl/416035210.)  PiperOrigin-RevId: 438650986 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 31 Mar 2022 13:49:56 -0700"
  },
  {
    "commitHash": "2a268346329c3ce17ad1269c5c0206ddd2747a17",
    "parent": "4d323b2b117a5906ab16074c8c88b4ff162b1b82",
    "subject": "Convert nested test class to top-level class.",
    "sanitized_subject_line": "Convert-nested-test-class-to-top-level-class",
    "commit_notes": "",
    "body": "This improves the chances that it's found by test runners.  PiperOrigin-RevId: 438028112 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 29 Mar 2022 08:15:31 -0700"
  },
  {
    "commitHash": "4d323b2b117a5906ab16074c8c88b4ff162b1b82",
    "parent": "fd8f5615ab66fd7adb1b882d6ab4ade708e4c5be",
    "subject": "Roll forward of https://github.com/google/guava/commit/6ad621e76d6dec9f00804c53cbeaa3c9c5854d59 - test was fixed",
    "sanitized_subject_line": "Roll-forward-of-https-github.com-google-guava-commit-6ad621e76d6dec9f00804c53cbeaa3c9c5854d59-test-was-fixed",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 437017110 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 24 Mar 2022 09:48:49 -0700"
  },
  {
    "commitHash": "fd8f5615ab66fd7adb1b882d6ab4ade708e4c5be",
    "parent": "0d4eb3bc01252001344d3578007e823210b36243",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 436770124 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 23 Mar 2022 10:21:19 -0700"
  },
  {
    "commitHash": "0d4eb3bc01252001344d3578007e823210b36243",
    "parent": "efcba8a60aec69fbc2fe9d1427d80cf9aab4bd0d",
    "subject": "Temporary rollback of https://github.com/google/guava/commit/6ad621e76d6dec9f00804c53cbeaa3c9c5854d59 while we investigate a mystery test failure.",
    "sanitized_subject_line": "Temporary-rollback-of-https-github.com-google-guava-commit-6ad621e76d6dec9f00804c53cbeaa3c9c5854d59-while-we-investigate-a-mystery-test-failure",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 436726845 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 23 Mar 2022 06:58:34 -0700"
  },
  {
    "commitHash": "efcba8a60aec69fbc2fe9d1427d80cf9aab4bd0d",
    "parent": "53fa691f6dda9619b5d4e02b19f2f9b9f2903803",
    "subject": "Use `--add-opens` to allow tests to pass on recent JDKs.",
    "sanitized_subject_line": "Use-add-opens-to-allow-tests-to-pass-on-recent-JDKs",
    "commit_notes": "",
    "body": "We make the same changes to `pom.xml` in the Android branch, even though they have no effect there. That's just to minimize differences between the two branches.  More progress toward https://github.com/google/guava/issues/5801 (maybe enough to close it?)  RELNOTES=n/a PiperOrigin-RevId: 436544563 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 22 Mar 2022 12:46:35 -0700"
  },
  {
    "commitHash": "53fa691f6dda9619b5d4e02b19f2f9b9f2903803",
    "parent": "6ad621e76d6dec9f00804c53cbeaa3c9c5854d59",
    "subject": "Convert nested test classes to top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 436529793 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 22 Mar 2022 11:45:45 -0700"
  },
  {
    "commitHash": "6ad621e76d6dec9f00804c53cbeaa3c9c5854d59",
    "parent": "7e04a00131a3a88888752e3548f3c5140b996c85",
    "subject": "Adjust the capacity computation in `Maps.newHashMapWithExpectedSize`.",
    "sanitized_subject_line": "Adjust-the-capacity-computation-in-Maps.newHashMapWithExpectedSize",
    "commit_notes": "",
    "body": "[This JDK change](https://github.com/openjdk/jdk/commit/3e393047e12147a81e2899784b943923fc34da8e) fixed the computation used when the first write to a `HashMap` is `putAll(otherMap)`. Previously that would occasionally lead to an unnecessarily large internal table. That same computation was copied into `Maps.newHashMapWithExpectedSize`, so it should also be adjusted.  Thanks to @XenoAmess for both the JDK fix and the fix here.  Closes https://github.com/google/guava/pull/5965.  RELNOTES=`Maps.newHashMapWithExpectedSize` sometimes allocated maps that were larger than they needed to be. PiperOrigin-RevId: 436464386 ",
    "author_name": "XenoAmess",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 22 Mar 2022 07:14:01 -0700"
  },
  {
    "commitHash": "7e04a00131a3a88888752e3548f3c5140b996c85",
    "parent": "df55981b5d5cc46e67fcb19d13847b424632405f",
    "subject": "Small fixes to progress towards building Guava on JDK 17.",
    "sanitized_subject_line": "Small-fixes-to-progress-towards-building-Guava-on-JDK-17",
    "commit_notes": "",
    "body": "* JDK 15 introduced a default method `CharSequence.isEmpty()` and that makes a type variable `<T extends List<E> & CharSequence>` illegal. Use `Serializable` instead of `CharSequence` (we're only testing reflection on type variables, not actually using this).  * `FuturesGetCheckedBenchmark` has a list of example exception classes which included one from the now-deleted package `java.security.acl`. Use a different exception instead.  RELNOTES=n/a PiperOrigin-RevId: 436368651 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 21 Mar 2022 20:01:34 -0700"
  },
  {
    "commitHash": "df55981b5d5cc46e67fcb19d13847b424632405f",
    "parent": "4cbc6f10822fd44225ab042473cd3a08ea46b6ce",
    "subject": "Bump actions/cache from 2.1.7 to 3.",
    "sanitized_subject_line": "Bump-actions-cache-from-2.1.7-to-3",
    "commit_notes": "",
    "body": "Closes #5798.  RELNOTES=n/a PiperOrigin-RevId: 436273354 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 21 Mar 2022 12:19:49 -0700"
  },
  {
    "commitHash": "4cbc6f10822fd44225ab042473cd3a08ea46b6ce",
    "parent": "91d09d9282bab509f9510d50a22708c99600f872",
    "subject": "Remove `@CanIgnoreReturnValue` from `Function.apply`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-Function.apply",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 436047863 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sun, 20 Mar 2022 11:30:19 -0700"
  },
  {
    "commitHash": "91d09d9282bab509f9510d50a22708c99600f872",
    "parent": "5708344667f932e4acf70864ca85dfd32a71b05a",
    "subject": "Allow `UnsafeByteArray` on aarch64 too, but not on Android.",
    "sanitized_subject_line": "Allow-UnsafeByteArray-on-aarch64-too-but-not-on-Android",
    "commit_notes": "",
    "body": "Closes https://github.com/google/guava/pull/5954.  RELNOTES=n/a PiperOrigin-RevId: 435780159 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 18 Mar 2022 17:57:15 -0700"
  },
  {
    "commitHash": "5708344667f932e4acf70864ca85dfd32a71b05a",
    "parent": "1bc1bd24dfe5dc1bd4ea246934c6eb8a8e3e577a",
    "subject": "Bump actions/checkout from 2.4.0 to 3.",
    "sanitized_subject_line": "Bump-actions-checkout-from-2.4.0-to-3",
    "commit_notes": "",
    "body": "Closes https://github.com/google/guava/pull/5941.  RELNOTES=n/a PiperOrigin-RevId: 435692953 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 18 Mar 2022 11:42:40 -0700"
  },
  {
    "commitHash": "1bc1bd24dfe5dc1bd4ea246934c6eb8a8e3e577a",
    "parent": "6c8a2e1658c86e0aed72b0f618814d25aec2d836",
    "subject": "Convert nested test classes to top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  I've also attempted to simplify `FeatureSpecificTestSuiteBuilderTest`: It includes a test that `MyTester` (previously `MyAbstractTester`) was run as part of the `TestSuite` that that test constructs. Before this CL, that was tested by resetting and then checking a `static boolean` field. Now it's done by counting how many times the test has run in total, which is (maybe?) more obviously correct in the face of multiple runs of the test. And I believe there _are_ multiple runs of the test, since `MyAbstractTester` probably gets picked up and run by the main test-suite builder in addition to being run by `FeatureSpecificTestSuiteBuilderTest`.  A word on the `@Ignore` annotation in `MyTester`/`MyAbstractTester`: It was added in cl/181351240, which tried to keep all `abstract` tester classes from being run under Android (whose test runner otherwise tried to run them). It looks like forthcoming cl/422861434 would prevent that, but until then, the test runner tries to run them. I wouldn't have guessed that _this particular_ `@Ignore` was necessary, since `MyTester`/`MyAbstractTester` is not actually `abstract` and thus should be safe to run. Thus, I figured that I just added `@Ignore` there while adding it for all the other classes where it _was_ necessary. But, when I tried to remove `@Ignore` as a drive-by changes during this CL, I saw a failure -- a somewhat mysterious one, in fact, like the test runner simultaneously knew that it shouldn't run the test but then included it in the list of tests to run... and then got surprised because it didn't run? or something? Anyway, I've restored `@Ignore` for now, and I'll try to remove it after cl/422861434. (See b/225350400.)  PiperOrigin-RevId: 435682700 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 18 Mar 2022 11:06:40 -0700"
  },
  {
    "commitHash": "6c8a2e1658c86e0aed72b0f618814d25aec2d836",
    "parent": "ce42394bbddc8c65395cfa7ff7a199a5bcd4ee0e",
    "subject": "Remove `@CanIgnoreReturnValue` from `CycleDetectingLockFactory`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-CycleDetectingLockFactory",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 435510102 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 17 Mar 2022 19:13:39 -0700"
  },
  {
    "commitHash": "ce42394bbddc8c65395cfa7ff7a199a5bcd4ee0e",
    "parent": "7b37db9a62ff489a6b3a683f1888fb2fa0fcba06",
    "subject": "Remove `@CanIgnoreReturnValue` from `ForwardingListeningExecutorService`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-ForwardingListeningExecutorService",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 435509991 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 17 Mar 2022 19:08:57 -0700"
  },
  {
    "commitHash": "7b37db9a62ff489a6b3a683f1888fb2fa0fcba06",
    "parent": "edfcb30297f6b89d3af0be0afb98b394137ec950",
    "subject": "Remove `@CanIgnoreReturnValue` from `AbstractIterator.hasNext`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-AbstractIterator.hasNext",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 435509968 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 17 Mar 2022 19:04:10 -0700"
  },
  {
    "commitHash": "edfcb30297f6b89d3af0be0afb98b394137ec950",
    "parent": "e3fc49e53990e63a3dbc37d84a2821e23a23b2fd",
    "subject": "Remove `@CanIgnoreReturnValue` from most of `ForwardingExecutorService`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-most-of-ForwardingExecutorService",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 435345147 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 17 Mar 2022 19:02:03 -0700"
  },
  {
    "commitHash": "e3fc49e53990e63a3dbc37d84a2821e23a23b2fd",
    "parent": "a0dba15e5e700e12f474cd5fad12f728c8d1107f",
    "subject": "Apply `@CheckReturnValue` to most of `WrappingExecutorService` and `WrappingScheduledExecutorService`.",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-most-of-WrappingExecutorService-and-WrappingScheduledExecutorService",
    "commit_notes": "",
    "body": "Work toward https://github.com/google/guava/issues/3655 Somewhat relevant to https://github.com/google/error-prone/issues/1490  RELNOTES=n/a PiperOrigin-RevId: 435341836 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 17 Mar 2022 18:59:46 -0700"
  },
  {
    "commitHash": "a0dba15e5e700e12f474cd5fad12f728c8d1107f",
    "parent": "75a3d4dd360112c762200e7807b519853e0ee0b0",
    "subject": "Convert nested test classes to top-level classes, and un-nest other test methods.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes-and-un-nest-other-test-methods",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 435215957 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 16 Mar 2022 18:34:55 -0700"
  },
  {
    "commitHash": "75a3d4dd360112c762200e7807b519853e0ee0b0",
    "parent": "aa4523514135bd75cd389566ffc0b691dd7a0d0f",
    "subject": "Add HttpHeaders constants for Sec-CH-DPR.",
    "sanitized_subject_line": "Add-HttpHeaders-constants-for-Sec-CH-DPR",
    "commit_notes": "",
    "body": "RELNOTES=`net`: Added `HttpHeaders` constants for `Sec-CH-DPR`. PiperOrigin-RevId: 435172482 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 16 Mar 2022 15:17:16 -0700"
  },
  {
    "commitHash": "aa4523514135bd75cd389566ffc0b691dd7a0d0f",
    "parent": "a183b59ace3dc778db40c763666c0aaf61c81f77",
    "subject": "Convert nested test classes to top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  In this case, I've left some _abstract_ test classes as nested classes. Maybe I should just make them top-level classes, too. But test runners don't look for them, so it probably doesn't matter.  PiperOrigin-RevId: 435166129 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 16 Mar 2022 14:55:55 -0700"
  },
  {
    "commitHash": "a183b59ace3dc778db40c763666c0aaf61c81f77",
    "parent": "bbe7ad5d438c13b324110393b53edacbd0655c22",
    "subject": "Apply `@CheckReturnValue` to `ForwardingExecutorService.awaitTermination`.",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-ForwardingExecutorService.awaitTermination",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 435049354 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 16 Mar 2022 07:58:05 -0700"
  },
  {
    "commitHash": "bbe7ad5d438c13b324110393b53edacbd0655c22",
    "parent": "5784b7fb8ab90a50005b1f4475963a80bb1ef543",
    "subject": "Fix (or suppress) use of reference equality on boxed primitive types.",
    "sanitized_subject_line": "Fix-or-suppress-use-of-reference-equality-on-boxed-primitive-types",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 434450016 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 14 Mar 2022 06:46:39 -0700"
  },
  {
    "commitHash": "5784b7fb8ab90a50005b1f4475963a80bb1ef543",
    "parent": "ad32f6f6ff26d1750645ccc22be569ed2f92a39d",
    "subject": "Apply `@CheckReturnValue` to `CacheStats.plus`.",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-CacheStats.plus",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 433751881 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 10 Mar 2022 07:54:27 -0800"
  },
  {
    "commitHash": "ad32f6f6ff26d1750645ccc22be569ed2f92a39d",
    "parent": "5f781850803106eda0d2ef062765409eeeee7753",
    "subject": "Convert nested test classes to top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 433575773 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 9 Mar 2022 14:28:12 -0800"
  },
  {
    "commitHash": "5f781850803106eda0d2ef062765409eeeee7753",
    "parent": "ceee251339806a7c06274708c93ae15cd2c2f05c",
    "subject": "Convert nested test classes to top-level classes. (Or, sometimes, just move their methods into the top-level class.)",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes.-Or-sometimes-just-move-their-methods-into-the-top-level-class",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  One detail: I made sure to add `suite.addTestSuite(ImmutableBiMapTest.class)` to the `java7` version of `ImmutableBiMapTest`. It was already present in the `current` version. It wasn't previously necessary in the `java7` version, since there were no \"real\" test methods in that class, only `testNoop`. This CL moves some methods into that class, so we need that call in order to keep them running. (It looks like the call in the `current` version was added in cl/286604248, belatedly enabling some tests that were added back in cl/185017249.)  (Also, I think IntelliJ may have changed \"`Map.Entry`\" to \"`Entry`\" for me in `ImmutableBiMapFloodingTest`, I guess because it was already used as \"`Entry`\" sometimes? I sure don't remember doing it. Weird. Not that I'm upset :))  (And I did choose to apply a couple other suggestions from Error Prone.)  PiperOrigin-RevId: 433482566 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 9 Mar 2022 08:16:28 -0800"
  },
  {
    "commitHash": "ceee251339806a7c06274708c93ae15cd2c2f05c",
    "parent": "a9c3d3ac68223c83a98022eb88bbcf0f14a66863",
    "subject": "Convert nested test classes to top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 433359524 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 8 Mar 2022 18:18:08 -0800"
  },
  {
    "commitHash": "a9c3d3ac68223c83a98022eb88bbcf0f14a66863",
    "parent": "a7f6b089d71b853728e0885334f6dafd2e51be25",
    "subject": "Move test methods from nested classes to the top-level class.",
    "sanitized_subject_line": "Move-test-methods-from-nested-classes-to-the-top-level-class",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 433353452 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 8 Mar 2022 17:44:48 -0800"
  },
  {
    "commitHash": "a7f6b089d71b853728e0885334f6dafd2e51be25",
    "parent": "24c1b8567069887373846fe8a4c218614b71cfc1",
    "subject": "Remove `@CanIgnoreReturnValue` from `Futures.combine` and from all `FutureCombiner` methods.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-Futures.combine-and-from-all-FutureCombiner-methods",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 432643990 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 5 Mar 2022 05:58:00 -0800"
  },
  {
    "commitHash": "24c1b8567069887373846fe8a4c218614b71cfc1",
    "parent": "4ddae0d488bc9e20d5f8295c269bcd4545337f58",
    "subject": "Remove `@CanIgnoreReturnValue` from most of `ForwardingFuture`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-most-of-ForwardingFuture",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 432413913 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 4 Mar 2022 04:28:17 -0800"
  },
  {
    "commitHash": "4ddae0d488bc9e20d5f8295c269bcd4545337f58",
    "parent": "b0673d8c7d3c14c3623b9c6fbcc5ee00010230f3",
    "subject": "Remove `@CanIgnoreReturnValue` from `ForwardingListenableFuture`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-ForwardingListenableFuture",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 432413771 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 4 Mar 2022 04:23:41 -0800"
  },
  {
    "commitHash": "b0673d8c7d3c14c3623b9c6fbcc5ee00010230f3",
    "parent": "0333746706e3a3e01635626a807b0efbfbce31db",
    "subject": "Remove `@CanIgnoreReturnValue` from `Interner.intern`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-Interner.intern",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 432345398 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 3 Mar 2022 20:06:35 -0800"
  },
  {
    "commitHash": "0333746706e3a3e01635626a807b0efbfbce31db",
    "parent": "0ef6688750d6432e42830dbe5b522cf8c8182790",
    "subject": "Remove `@CanIgnoreReturnValue` from `Ordering.compare`.",
    "sanitized_subject_line": "Remove-CanIgnoreReturnValue-from-Ordering.compare",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 432213378 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 3 Mar 2022 09:37:06 -0800"
  },
  {
    "commitHash": "0ef6688750d6432e42830dbe5b522cf8c8182790",
    "parent": "aedb0efb151c0c27a2d4f88a91018e25d589039d",
    "subject": "Apply `@CheckReturnValue` to `Uninterruptibles#awaitUninterruptibly(CountDownLatch, long, TimeUnit)`.",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-Uninterruptibles-awaitUninterruptibly-CountDownLatch-long-TimeUnit",
    "commit_notes": "",
    "body": "Work toward https://github.com/google/guava/issues/3655 Somewhat relevant to https://github.com/google/error-prone/issues/1490  PiperOrigin-RevId: 432003331 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 2 Mar 2022 12:37:51 -0800"
  },
  {
    "commitHash": "aedb0efb151c0c27a2d4f88a91018e25d589039d",
    "parent": "fa7be172245b05edcd3b3ef3a2b7db2659ecea9e",
    "subject": "Apply `@CheckReturnValue` to `Uninterruptibles#awaitUninterruptibly(CountDownLatch, Duration)`.",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-Uninterruptibles-awaitUninterruptibly-CountDownLatch-Duration",
    "commit_notes": "",
    "body": "Work toward https://github.com/google/guava/issues/3655 Somewhat relevant to https://github.com/google/error-prone/issues/1490  PiperOrigin-RevId: 431945149 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 2 Mar 2022 08:27:20 -0800"
  },
  {
    "commitHash": "fa7be172245b05edcd3b3ef3a2b7db2659ecea9e",
    "parent": "44df85a82900867ce4785b0ffced8db20c7e1968",
    "subject": "Don't allocate multiple ImmediateCancelledFuture instances if cancellation causes are not enabled",
    "sanitized_subject_line": "Don-t-allocate-multiple-ImmediateCancelledFuture-instances-if-cancellation-causes-are-not-enabled",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 431727880 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 1 Mar 2022 11:02:25 -0800"
  },
  {
    "commitHash": "44df85a82900867ce4785b0ffced8db20c7e1968",
    "parent": "ac11adc359943ff2ae897ec4093c67b990ded3a6",
    "subject": "Add `HttpHeaders` constants for `Sec-CH-Viewport-Width` and `Sec-CH-Viewport-Height`.",
    "sanitized_subject_line": "Add-HttpHeaders-constants-for-Sec-CH-Viewport-Width-and-Sec-CH-Viewport-Height",
    "commit_notes": "",
    "body": "RELNOTES=`net`: Added `HttpHeaders` constants for `Sec-CH-Viewport-Width` and `Sec-CH-Viewport-Height`. PiperOrigin-RevId: 431695339 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 1 Mar 2022 08:45:35 -0800"
  },
  {
    "commitHash": "ac11adc359943ff2ae897ec4093c67b990ded3a6",
    "parent": "1962106f6f6d1b86bcb23200ba5e80b65e04ae8f",
    "subject": "Don't allocate multiple ImmediateCancelledFuture instances if cancellation causes are not enabled",
    "sanitized_subject_line": "Don-t-allocate-multiple-ImmediateCancelledFuture-instances-if-cancellation-causes-are-not-enabled",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 431542091 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 28 Feb 2022 15:39:52 -0800"
  },
  {
    "commitHash": "1962106f6f6d1b86bcb23200ba5e80b65e04ae8f",
    "parent": "7256a1d9b2113b942070cf1e16a7dbff0c341680",
    "subject": "Prepare for release 31.1.",
    "sanitized_subject_line": "Prepare-for-release-31.1",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 431504880 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 28 Feb 2022 13:00:54 -0800"
  },
  {
    "commitHash": "7256a1d9b2113b942070cf1e16a7dbff0c341680",
    "parent": "b854f7117e981bde7ecb86f902d1d1df754ae80e",
    "subject": "Don't allocate multiple ImmediateCancelledFuture instances if cancellation causes are not enabled",
    "sanitized_subject_line": "Don-t-allocate-multiple-ImmediateCancelledFuture-instances-if-cancellation-causes-are-not-enabled",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 431489752 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 28 Feb 2022 11:51:50 -0800"
  },
  {
    "commitHash": "b854f7117e981bde7ecb86f902d1d1df754ae80e",
    "parent": "c1a450d511821d26d8fa0c044f073e890bc25c05",
    "subject": "Apply @CheckReturnValue to com.google.common.base.Converter#reverse().",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-com.google.common.base.Converter-reverse",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 431324239 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sun, 27 Feb 2022 17:49:47 -0800"
  },
  {
    "commitHash": "c1a450d511821d26d8fa0c044f073e890bc25c05",
    "parent": "a580ed07844fedb34ec48260a663262c2d00e87f",
    "subject": "Apply @CheckReturnValue to com.google.common.base.Converter#reverse(), suppressing all callers currently using it.",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-com.google.common.base.Converter-reverse-suppressing-all-callers-currently-using-it",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 431171973 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 26 Feb 2022 12:21:52 -0800"
  },
  {
    "commitHash": "a580ed07844fedb34ec48260a663262c2d00e87f",
    "parent": "ab6b2fd5468e386bd78dd59dd9f007d3efc70e83",
    "subject": "Apply @CheckReturnValue to com.google.common.base.Converter#reverse(), suppressing all callers currently using it.",
    "sanitized_subject_line": "Apply-CheckReturnValue-to-com.google.common.base.Converter-reverse-suppressing-all-callers-currently-using-it",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 431165362 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 26 Feb 2022 11:06:46 -0800"
  },
  {
    "commitHash": "ab6b2fd5468e386bd78dd59dd9f007d3efc70e83",
    "parent": "a0e2577de61a0d7e8a3dd075be66a31c93ea0446",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 430735252 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 24 Feb 2022 10:31:13 -0800"
  },
  {
    "commitHash": "a0e2577de61a0d7e8a3dd075be66a31c93ea0446",
    "parent": "6652237230814c7901d35b6c74bd13edb5f68db5",
    "subject": "Add `@CheckReturnValue` to `com.google.common.net` (with a few exceptions).",
    "sanitized_subject_line": "Add-CheckReturnValue-to-com.google.common.net-with-a-few-exceptions",
    "commit_notes": "",
    "body": "RELNOTES=`net`: Added `@CheckReturnValue` to the package (with a few exceptions). PiperOrigin-RevId: 429560962 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 18 Feb 2022 07:33:20 -0800"
  },
  {
    "commitHash": "6652237230814c7901d35b6c74bd13edb5f68db5",
    "parent": "565589953a4f4d25701aa04510e33be22146fef6",
    "subject": "Add another ReturnValueIgnored suppression.",
    "sanitized_subject_line": "Add-another-ReturnValueIgnored-suppression",
    "commit_notes": "",
    "body": "RELNOTES=N/A PiperOrigin-RevId: 429314735 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 17 Feb 2022 08:29:57 -0800"
  },
  {
    "commitHash": "565589953a4f4d25701aa04510e33be22146fef6",
    "parent": "1cd85d01c96ae433e2f3d8ca77f304f6170c34b4",
    "subject": "Suppress ignored return values off Object in Guava/Truth.",
    "sanitized_subject_line": "Suppress-ignored-return-values-off-Object-in-Guava-Truth",
    "commit_notes": "",
    "body": "RELNOTES=N/A PiperOrigin-RevId: 428875389 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 15 Feb 2022 14:31:55 -0800"
  },
  {
    "commitHash": "1cd85d01c96ae433e2f3d8ca77f304f6170c34b4",
    "parent": "09960ffb041560438f22342d1b21a43ceac5364d",
    "subject": "Enforce bounds checking in the null output stream.",
    "sanitized_subject_line": "Enforce-bounds-checking-in-the-null-output-stream",
    "commit_notes": "",
    "body": "This is consistent with the contract of `OutputStream.write`.  RELNOTES=`ByteStreams.nullOutputStream()` now follows the contract of `OutputStream.write` by throwing an exception if the range of bytes is out of bounds. PiperOrigin-RevId: 428511460 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 14 Feb 2022 08:14:14 -0800"
  },
  {
    "commitHash": "09960ffb041560438f22342d1b21a43ceac5364d",
    "parent": "f881fab53f764db184ae47b91ec06dfd24331ce8",
    "subject": "Add `@InlineMe` to `Converter.apply(A)`.",
    "sanitized_subject_line": "Add-InlineMe-to-Converter.apply-A",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 428107715 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 11 Feb 2022 15:50:06 -0800"
  },
  {
    "commitHash": "f881fab53f764db184ae47b91ec06dfd24331ce8",
    "parent": "f5264779dbb891d195931a6d3879e5541596e2b7",
    "subject": "Assorted improvements to nullness annotations.",
    "sanitized_subject_line": "Assorted-improvements-to-nullness-annotations",
    "commit_notes": "",
    "body": "I don't think any of the Guava changes are user-visible.  Details: - Many of these fix bugs that will be noticed by the forthcoming version of our hacky internal nullness checker. - Some of these fix bugs that even the forthcoming version won't notice but that I happened to see. - Some changes add `@Nullable` to return types of methods that always throw an exception. There's no strict need for this, but we've mostly done it otherwise, so I figured I'd be consistent (and quiet `ReturnMissingNullable`, at least until I quiet it for all such methods with https://github.com/google/error-prone/issues/2910). - The `NullnessCasts` change is to discourage `ReturnMissingNullable` from adding a `@Nullable` annotation where we don't want it. (But we'll probably never run `ReturnMissingNullable` in the \"aggressive\" mode over this code, anyway, so there's not likely to be a need for the suppression.) - The `@ParametricNullness` changes evidently aren't necessary for anyone right now, but they could theoretically be necessary for j2objc users until j2objc further enhances its support for nullness annotations. - The `AbstractFuture` change removes a suppression that would be necessary under the Checker Framework (which would consider the supermethod's return type to be non-nullable) but isn't necessary for us (because we consider the supermethod's return type to have unspecified nullness). RELNOTES=n/a PiperOrigin-RevId: 427818689 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 10 Feb 2022 12:36:34 -0800"
  },
  {
    "commitHash": "f5264779dbb891d195931a6d3879e5541596e2b7",
    "parent": "11a48cafdcf365f78caedd08d6c3fd541904a1a7",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 427578600 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 9 Feb 2022 14:57:07 -0800"
  },
  {
    "commitHash": "11a48cafdcf365f78caedd08d6c3fd541904a1a7",
    "parent": "8c908a3c8b4363a58edb69cf029d761bdaec0abc",
    "subject": "Move `Compact*Hash*` nested `FloodingTest` classes to top-level.",
    "sanitized_subject_line": "Move-Compact-Hash-nested-FloodingTest-classes-to-top-level",
    "commit_notes": "",
    "body": "(Note that the flooding tests have never existed in the java7/android branch: b/218358400.)  This improves the chances that they're found by test runners.  PiperOrigin-RevId: 427551169 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 9 Feb 2022 13:08:15 -0800"
  },
  {
    "commitHash": "8c908a3c8b4363a58edb69cf029d761bdaec0abc",
    "parent": "a5eb7fd6fbc3e5fdebe65f90dc6c41729f17b7b0",
    "subject": "Convert nested test classes into top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-into-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 427543883 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 9 Feb 2022 12:39:05 -0800"
  },
  {
    "commitHash": "a5eb7fd6fbc3e5fdebe65f90dc6c41729f17b7b0",
    "parent": "bb209490cd2eeced82b4c435083588af04448b95",
    "subject": "Convert nested test classes to top-level classes.",
    "sanitized_subject_line": "Convert-nested-test-classes-to-top-level-classes",
    "commit_notes": "",
    "body": "This improves the chances that they're found by test runners.  PiperOrigin-RevId: 427278450 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 8 Feb 2022 13:35:40 -0800"
  },
  {
    "commitHash": "bb209490cd2eeced82b4c435083588af04448b95",
    "parent": "1df898a681347c3f1356ad0c8d70860ac4a6c9a4",
    "subject": "Move test methods from nested classes to the top-level class.",
    "sanitized_subject_line": "Move-test-methods-from-nested-classes-to-the-top-level-class",
    "commit_notes": "",
    "body": "Also, document why `testInitialCapacity_setTwice` is currently disabled, and change its expected exception type to `IllegalStateException`, which is what we'd eventually want the test to trigger.  A small note about `SetOperationsTest`: Yes, it is safe and effective for `SetOperationsTest` to call `addTestSuite(SetOperationsTest.class)`. We already do that in many of our classes (for better or for worse). As a further test, I inserted a `fail()` call into one of the test methods and verified that the test target fails both when run with a given test class and when running the whole target.  This move improves the chances that the tests are found by test runners.  PiperOrigin-RevId: 427072893 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 7 Feb 2022 18:31:33 -0800"
  },
  {
    "commitHash": "1df898a681347c3f1356ad0c8d70860ac4a6c9a4",
    "parent": "6dabbdf9c9154a0c4cda276779ca7c9a14cfa720",
    "subject": "Fix some warnings in the AtomicLongMapBasherTest.java",
    "sanitized_subject_line": "Fix-some-warnings-in-the-AtomicLongMapBasherTest.java",
    "commit_notes": "",
    "body": "We were looking at this anyhow, so I thought I would quickly fix some of the warnings.  1) Do not ignore the futures. Instead, get rid of the atomic used to report, and simply have each thread report the \"threadSum\" through the future. Then request the future. This also fixes the ignored exceptions.  2) Unit.SECONDS -> Seconds.  PiperOrigin-RevId: 426909173 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 7 Feb 2022 07:16:58 -0800"
  },
  {
    "commitHash": "6dabbdf9c9154a0c4cda276779ca7c9a14cfa720",
    "parent": "bd932e561c6f6b6589ad849081683dd3e8c5d5d5",
    "subject": "Add Access-Control-Allow-Private-Network header to common library. https://developer.chrome.com/blog/private-network-access-update",
    "sanitized_subject_line": "Add-Access-Control-Allow-Private-Network-header-to-common-library",
    "commit_notes": "",
    "body": "RELNOTES=`net`: Added `HttpHeaders` constant for `Access-Control-Allow-Private-Network`. PiperOrigin-RevId: 426407160 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 4 Feb 2022 08:17:14 -0800"
  },
  {
    "commitHash": "bd932e561c6f6b6589ad849081683dd3e8c5d5d5",
    "parent": "8c71e0a259702874f6ed3febadbf4c549507b500",
    "subject": "Warn that `directExecutor` listeners may be run by any thread that cancels the `Future`.",
    "sanitized_subject_line": "Warn-that-directExecutor-listeners-may-be-run-by-any-thread-that-cancels-the-Future",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 426250440 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 3 Feb 2022 15:24:53 -0800"
  },
  {
    "commitHash": "8c71e0a259702874f6ed3febadbf4c549507b500",
    "parent": "247d4eff0b98c43c6593605b590a8d6f4464ba59",
    "subject": "Use `ImmutableMap.Builder.buildOrThrow()` instead of `.build()`.",
    "sanitized_subject_line": "Use-ImmutableMap.Builder.buildOrThrow-instead-of-.build",
    "commit_notes": "",
    "body": "The methods are equivalent but `.build()` has been deprecated.  RELNOTES=n/a PiperOrigin-RevId: 425692373 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 1 Feb 2022 12:46:24 -0800"
  },
  {
    "commitHash": "247d4eff0b98c43c6593605b590a8d6f4464ba59",
    "parent": "4b9c269f5cba1431101ffde0290a871769120316",
    "subject": "Use `ImmutableMap.Builder.buildOrThrow()` instead of deprecated `build()`.",
    "sanitized_subject_line": "Use-ImmutableMap.Builder.buildOrThrow-instead-of-deprecated-build",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 425630392 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 1 Feb 2022 08:30:37 -0800"
  },
  {
    "commitHash": "4b9c269f5cba1431101ffde0290a871769120316",
    "parent": "1daedb51f14851f178999d3b83d1e15950165a09",
    "subject": "Use `ImmutableMap.Builder.buildOrThrow()` instead of deprecated `build()`.",
    "sanitized_subject_line": "Use-ImmutableMap.Builder.buildOrThrow-instead-of-deprecated-build",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 425624900 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 1 Feb 2022 08:04:20 -0800"
  },
  {
    "commitHash": "1daedb51f14851f178999d3b83d1e15950165a09",
    "parent": "9a13e8664f308ca7a93041781d6d7680fb1b59a5",
    "subject": "Assign the constructed instance to an unused variable.",
    "sanitized_subject_line": "Assign-the-constructed-instance-to-an-unused-variable",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 424706930 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 27 Jan 2022 14:23:22 -0800"
  },
  {
    "commitHash": "9a13e8664f308ca7a93041781d6d7680fb1b59a5",
    "parent": "9066755eb342cdbd98ea1aa189bbee39fa2ef492",
    "subject": "Suppress AlwaysThrows in Guava tests.",
    "sanitized_subject_line": "Suppress-AlwaysThrows-in-Guava-tests",
    "commit_notes": "",
    "body": "These are specifically testing throwing.  PiperOrigin-RevId: 424622026 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 27 Jan 2022 08:44:32 -0800"
  },
  {
    "commitHash": "9066755eb342cdbd98ea1aa189bbee39fa2ef492",
    "parent": "89ad267a131caff1be90ad144633c4d05693ed5a",
    "subject": "Minor clarifications after CL 423822183.",
    "sanitized_subject_line": "Minor-clarifications-after-CL-423822183",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 424346757 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 26 Jan 2022 08:02:55 -0800"
  },
  {
    "commitHash": "89ad267a131caff1be90ad144633c4d05693ed5a",
    "parent": "593b5963269abc2b32ee7f4d0bbc96d1539a7afa",
    "subject": "Add `@Keep` annotations",
    "sanitized_subject_line": "Add-Keep-annotations",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 424151414 ",
    "author_name": "Liam Miller-Cushon",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 25 Jan 2022 12:35:27 -0800"
  },
  {
    "commitHash": "593b5963269abc2b32ee7f4d0bbc96d1539a7afa",
    "parent": "753b0dfcbfbc1270ed9f4c90e93d649104f2eae2",
    "subject": "Remove harmless but ugly spaces between link open tag and content.",
    "sanitized_subject_line": "Remove-harmless-but-ugly-spaces-between-link-open-tag-and-content",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 423838896 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 24 Jan 2022 09:47:51 -0800"
  },
  {
    "commitHash": "753b0dfcbfbc1270ed9f4c90e93d649104f2eae2",
    "parent": "6ebd7d864830dbf615a767702bf5b0261f1a9722",
    "subject": "Write a novel about the nullness of the `V` types in `getOrDefault`.",
    "sanitized_subject_line": "Write-a-novel-about-the-nullness-of-the-V-types-in-getOrDefault",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 423822183 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 24 Jan 2022 08:40:12 -0800"
  },
  {
    "commitHash": "6ebd7d864830dbf615a767702bf5b0261f1a9722",
    "parent": "7031494cbb29f3443a85303bdf14389ae6a5b58e",
    "subject": "Deprecate `Throwables.lazyStackTrace`.",
    "sanitized_subject_line": "Deprecate-Throwables.lazyStackTrace",
    "commit_notes": "",
    "body": "This method is no longer lazy on any current platform. The JDK-internal method it depends on was removed in JDK 9, and the method has never been lazy on Android.  RELNOTES=The `Throwables` methods `lazyStackTrace` and `lazyStackTraceIsLazy` have been deprecated. They are no longer useful on any current platform. PiperOrigin-RevId: 423821947 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 24 Jan 2022 08:35:30 -0800"
  },
  {
    "commitHash": "7031494cbb29f3443a85303bdf14389ae6a5b58e",
    "parent": "6bbf880d40c484398340fc76e538b8de93fef74e",
    "subject": "Import PR https://github.com/google/guava/pull/5877: Unify unmodifiable map behavior",
    "sanitized_subject_line": "Import-PR-https-github.com-google-guava-pull-5877-Unify-unmodifiable-map-behavior",
    "commit_notes": "",
    "body": "Makes default methods on `Map` that can modify the map always throw `UOE`, rather than throwing only when the input would cause an actual modification, for `unmodifiablBiMap` and `unmodifiableNavigableMap`.  Fixes #5877 Fixes #5874  RELNOTES=n/a PiperOrigin-RevId: 423376424 ",
    "author_name": "Wojciech Zankowski",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 21 Jan 2022 12:06:55 -0800"
  },
  {
    "commitHash": "6bbf880d40c484398340fc76e538b8de93fef74e",
    "parent": "ddc708ad23ae23012bff83f441069cd85077e1cf",
    "subject": "Link to a Guava-Caffeine comparison with much more information.",
    "sanitized_subject_line": "Link-to-a-Guava-Caffeine-comparison-with-much-more-information",
    "commit_notes": "",
    "body": "Thanks, @ben-manes: https://github.com/google/guava/commit/66433011733d8dafda8d6812c07e8356cc86c9f3#commitcomment-64266605  RELNOTES=n/a PiperOrigin-RevId: 423136992 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 20 Jan 2022 12:54:49 -0800"
  },
  {
    "commitHash": "ddc708ad23ae23012bff83f441069cd85077e1cf",
    "parent": "66433011733d8dafda8d6812c07e8356cc86c9f3",
    "subject": "Automated g4 rollback of changelist 413130485.",
    "sanitized_subject_line": "Automated-g4-rollback-of-changelist-413130485",
    "commit_notes": "",
    "body": "*** Reason for rollback ***  The bug, which affects a fraction of versions of Android, now has [a more thorough workaround in r8](https://r8.googlesource.com/r8/+/494659a6ee23fae24c14befcc7e8311eadcdf467). That workaround is present in [3.3.6-dev](https://r8.googlesource.com/r8/+log/c731cb2606ad41827c631831d35064ffe1f9340b) and has been backported to [to 3.2.41](https://r8.googlesource.com/r8/+log/5c1bd9570893eb2cd900e98f242316851a58f9bd) and [to 3.1.60](https://r8.googlesource.com/r8/+log/fb003e8d34e104e3a9c00f5b01c9599b7f5b81a5). All apps that are compiled with a new enough version of r8 no longer need Guava's temporary workaround.  *** Original change description ***  Attempt `casValue` CAS in a loop.  This shouldn't be necessary, but we're seeing some evidence that it may help with a mysterious bug.  ... ***  PiperOrigin-RevId: 423102717 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 20 Jan 2022 10:34:56 -0800"
  },
  {
    "commitHash": "66433011733d8dafda8d6812c07e8356cc86c9f3",
    "parent": "59b26ca105d9ddce3160c420eb51ca22f597431b",
    "subject": "Note that Caffeine does sometimes behave differently then Guava's cache.",
    "sanitized_subject_line": "Note-that-Caffeine-does-sometimes-behave-differently-then-Guava-s-cache",
    "commit_notes": "",
    "body": "This is typically in cases in which users won't care about the differences, but it's worth acknowledging.  Prompted by https://github.com/trinodb/trino/issues/10512#issuecomment-1016221168  RELNOTES=n/a PiperOrigin-RevId: 423071314 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 20 Jan 2022 08:16:32 -0800"
  },
  {
    "commitHash": "59b26ca105d9ddce3160c420eb51ca22f597431b",
    "parent": "f02feaff11850858a6d7dde000e6da0db5c30140",
    "subject": "Omit com.azul.tooling.in classes from generated Javadoc.",
    "sanitized_subject_line": "Omit-com.azul.tooling.in-classes-from-generated-Javadoc",
    "commit_notes": "",
    "body": "These must come from the Zulu JDK that we use in GitHub Actions: I don't see them when I build locally.  RELNOTES=n/a PiperOrigin-RevId: 423066750 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 20 Jan 2022 07:53:39 -0800"
  },
  {
    "commitHash": "f02feaff11850858a6d7dde000e6da0db5c30140",
    "parent": "fefa769d334e831bbea9340b97aab800dca0d31c",
    "subject": "Merge java docs for Futures.successfulAsList.",
    "sanitized_subject_line": "Merge-java-docs-for-Futures.successfulAsList",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 422858126 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 19 Jan 2022 11:15:49 -0800"
  },
  {
    "commitHash": "fefa769d334e831bbea9340b97aab800dca0d31c",
    "parent": "dd462afa6b871397ca9f4ca3927cc7946fc343a0",
    "subject": "Add \"Sec-CH-UA-Full-Version-List\" header.",
    "sanitized_subject_line": "Add-Sec-CH-UA-Full-Version-List-header",
    "commit_notes": "",
    "body": "Spec: https://wicg.github.io/ua-client-hints/#sec-ch-ua-full-version-list RELNOTES=N/A PiperOrigin-RevId: 422835617 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 19 Jan 2022 09:43:36 -0800"
  },
  {
    "commitHash": "dd462afa6b871397ca9f4ca3927cc7946fc343a0",
    "parent": "468c68a6ac0340459c867648b4c1c8b9c65239c3",
    "subject": "Remove `@Beta` from two methods in `Throwables`.",
    "sanitized_subject_line": "Remove-Beta-from-two-methods-in-Throwables",
    "commit_notes": "",
    "body": "The methods, `getCausalChain` and `getCauseAs`, have existed for years. They work reliably and we are unlikely to change their APIs.  The remaining two `@Beta` methods, `lazyStackTrace` and `lazyStackTraceIsLazy`, should probably be deprecated in a later step. The optimization they encapsulate no longer works on JDK versions ≥ 9 and has never worked on Android. Meanwhile, JDK 9 introduced the `StackWalker` API which does work and covers the most usual use case of `lazyStackTrace`.  RELNOTES=The `Throwables` methods `getCausalChain` and `getCauseAs` were `@Beta` but are now fully supported. PiperOrigin-RevId: 422652352 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 18 Jan 2022 14:47:47 -0800"
  },
  {
    "commitHash": "468c68a6ac0340459c867648b4c1c8b9c65239c3",
    "parent": "c6dba9b862b43fe2f73726f11015f67d5ebf7b58",
    "subject": "Remove `@Beta` from various Escapers and Escaper accessories.",
    "sanitized_subject_line": "Remove-Beta-from-various-Escapers-and-Escaper-accessories",
    "commit_notes": "",
    "body": "Fixes #5744  RELNOTES=`escape`: Removed `@Beta` from various Escapers and Escaper accessories. PiperOrigin-RevId: 422625838 ",
    "author_name": "Chaoren Lin",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 18 Jan 2022 12:55:09 -0800"
  },
  {
    "commitHash": "c6dba9b862b43fe2f73726f11015f67d5ebf7b58",
    "parent": "a4fabc013e476854d5ea70aab139d79b4fd98215",
    "subject": "Add fixes in prep for enabling `CheckReturnValue` on constructors.",
    "sanitized_subject_line": "Add-fixes-in-prep-for-enabling-CheckReturnValue-on-constructors",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 422573390 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 18 Jan 2022 09:23:42 -0800"
  },
  {
    "commitHash": "a4fabc013e476854d5ea70aab139d79b4fd98215",
    "parent": "c5b022718ff4577273bcc0f7fefdb36fe0660ce3",
    "subject": "Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.",
    "sanitized_subject_line": "Init-LockFreeBitArray-with-length-to-reduce-memory-when-deserializing-BloomFilter",
    "commit_notes": "",
    "body": "Second try, setting the `bitCount` property correctly.  Closes https://github.com/google/guava/pull/5799. Fixes https://github.com/google/guava/issues/5770.  RELNOTES=n/a PiperOrigin-RevId: 421580967 ",
    "author_name": "karthik.bhat",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 13 Jan 2022 09:12:46 -0800"
  },
  {
    "commitHash": "c5b022718ff4577273bcc0f7fefdb36fe0660ce3",
    "parent": "2545a3209fb7977bbccd1a9113d9ca7997ef5981",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 421336131 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 12 Jan 2022 10:35:36 -0800"
  },
  {
    "commitHash": "2545a3209fb7977bbccd1a9113d9ca7997ef5981",
    "parent": "5970382c9af8d8e3c35f4667ba0f917337cfe3b8",
    "subject": "*** Reason for rollback ***",
    "sanitized_subject_line": "Reason-for-rollback",
    "commit_notes": "",
    "body": "Rolls back changelist 421082912 because that doesn't set `bitCount` correctly on the `LockFreeBitArray`.  Reopens https://github.com/google/guava/issues/5770.  PiperOrigin-RevId: 421302533 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 12 Jan 2022 08:20:35 -0800"
  },
  {
    "commitHash": "5970382c9af8d8e3c35f4667ba0f917337cfe3b8",
    "parent": "156694066b5198740a820c6eef723fb86c054343",
    "subject": "Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.",
    "sanitized_subject_line": "Init-LockFreeBitArray-with-length-to-reduce-memory-when-deserializing-BloomFilter",
    "commit_notes": "",
    "body": "Closes https://github.com/google/guava/pull/5799. Fixes https://github.com/google/guava/issues/5770.  RELNOTES=n/a PiperOrigin-RevId: 421082912 ",
    "author_name": "karthik.bhat",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 11 Jan 2022 11:36:22 -0800"
  },
  {
    "commitHash": "156694066b5198740a820c6eef723fb86c054343",
    "parent": "828d9ee74e8aef4f192bd0c6079db20c28780cb1",
    "subject": "Remove `@Beta` from `Hashing` (plus some other minor cleanups).",
    "sanitized_subject_line": "Remove-Beta-from-Hashing-plus-some-other-minor-cleanups",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 420062518 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Jan 2022 08:06:45 -0800"
  },
  {
    "commitHash": "828d9ee74e8aef4f192bd0c6079db20c28780cb1",
    "parent": "2331170e5b52b0db1d6aa73a5e7f66b8466b695a",
    "subject": "Remove `@Beta` from APIs in `Files`. Add `@InlineMe` where we can.",
    "sanitized_subject_line": "Remove-Beta-from-APIs-in-Files-.-Add-InlineMe-where-we-can",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3285.  RELNOTES=`io`: Remove `@Beta` from APIs in `Files`. PiperOrigin-RevId: 420062384 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Jan 2022 08:01:51 -0800"
  },
  {
    "commitHash": "2331170e5b52b0db1d6aa73a5e7f66b8466b695a",
    "parent": "3092c2d17f467e549053b30f8095334e71ee1f90",
    "subject": "Update docs that refer to the diamond operator to reflect that it's no longer new.",
    "sanitized_subject_line": "Update-docs-that-refer-to-the-diamond-operator-to-reflect-that-it-s-no-longer-new",
    "commit_notes": "",
    "body": "In particular, all Guava users have been able to Java 7+ language features for a long time.  Note that I've left some other \"Note for Java 7 and later\" docs in place: Those docs refer to Java 7+ *APIs*, which are not necessarily available to our Android users. (Ideally, we would update the docs to refer to Android, but I'm trying not to turn this into a big project :))  RELNOTES=n/a PiperOrigin-RevId: 420059386 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Jan 2022 07:43:04 -0800"
  },
  {
    "commitHash": "3092c2d17f467e549053b30f8095334e71ee1f90",
    "parent": "abbab8e20f220e745b059f22e25ec60895643b79",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 420056894 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 6 Jan 2022 07:30:58 -0800"
  },
  {
    "commitHash": "abbab8e20f220e745b059f22e25ec60895643b79",
    "parent": "9f6a38402076fc0a85a48627c16312c50887435a",
    "subject": "Do not allow `CacheLoader.loadAll` to modify the given set of keys.",
    "sanitized_subject_line": "Do-not-allow-CacheLoader.loadAll-to-modify-the-given-set-of-keys",
    "commit_notes": "",
    "body": "Fixes #5810  RELNOTES=n/a PiperOrigin-RevId: 419910365 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jan 2022 14:15:43 -0800"
  },
  {
    "commitHash": "9f6a38402076fc0a85a48627c16312c50887435a",
    "parent": "8079a29463906c3ffac781532be96cbf28b745c6",
    "subject": "Remove `@Beta` from most classes in `com.google.common.reflect`.",
    "sanitized_subject_line": "Remove-Beta-from-most-classes-in-com.google.common.reflect",
    "commit_notes": "",
    "body": "Addresses https://github.com/google/guava/issues/3051 (but doesn't remove `@Beta` from `Invokable`).  RELNOTES=`reflect`: Remove `@Beta` from most classes. PiperOrigin-RevId: 419849834 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jan 2022 09:43:40 -0800"
  },
  {
    "commitHash": "8079a29463906c3ffac781532be96cbf28b745c6",
    "parent": "3a5ef5002d3427080f82fd13a121c9a0f94869d2",
    "subject": "Remove `@Beta` from `Streams` methods `mapWithIndex` and `findLast`.",
    "sanitized_subject_line": "Remove-Beta-from-Streams-methods-mapWithIndex-and-findLast",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Removed `@Beta` from `Streams` methods `mapWithIndex` and `findLast`. PiperOrigin-RevId: 419831941 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 5 Jan 2022 08:08:08 -0800"
  },
  {
    "commitHash": "3a5ef5002d3427080f82fd13a121c9a0f94869d2",
    "parent": "c85a4cbff0aeb150e9755c408703c5c7464f5f57",
    "subject": "Fix a soon to be compile error, where a newly constructed instance is discarded without being used.",
    "sanitized_subject_line": "Fix-a-soon-to-be-compile-error-where-a-newly-constructed-instance-is-discarded-without-being-used",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 419612539 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 4 Jan 2022 09:27:14 -0800"
  },
  {
    "commitHash": "c85a4cbff0aeb150e9755c408703c5c7464f5f57",
    "parent": "13f703c25f43bda8935b28e7b481de48d6b9bc1b",
    "subject": "Release some fingerprint2011 tests.",
    "sanitized_subject_line": "Release-some-fingerprint2011-tests",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 418788233 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 29 Dec 2021 06:55:25 -0800"
  },
  {
    "commitHash": "13f703c25f43bda8935b28e7b481de48d6b9bc1b",
    "parent": "474bfb7240f525d6a49698c19ff2af27f2006387",
    "subject": "Open source `Hashing.fingerprint2011()`.",
    "sanitized_subject_line": "Open-source-Hashing.fingerprint2011",
    "commit_notes": "",
    "body": "RELNOTES=`hash`: Added `Hashing.fingerprint2011()`. PiperOrigin-RevId: 418639684 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 28 Dec 2021 09:50:25 -0800"
  },
  {
    "commitHash": "474bfb7240f525d6a49698c19ff2af27f2006387",
    "parent": "f6c0d8dcdca543b8817ad0b16f1156fd47240c66",
    "subject": "Use some static imports.",
    "sanitized_subject_line": "Use-some-static-imports",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 418060366 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Dec 2021 13:53:43 -0800"
  },
  {
    "commitHash": "f6c0d8dcdca543b8817ad0b16f1156fd47240c66",
    "parent": "5d6bbc521753f2faf551a6109e2319d0b0e068c5",
    "subject": "Minor cleanups to `AbstractScheduledServiceTest`.",
    "sanitized_subject_line": "Minor-cleanups-to-AbstractScheduledServiceTest",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 418053354 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Dec 2021 13:04:30 -0800"
  },
  {
    "commitHash": "5d6bbc521753f2faf551a6109e2319d0b0e068c5",
    "parent": "89a2e994c84800a37f4db48628fae7ec7fa77bc5",
    "subject": "Fix small javadoc problem.",
    "sanitized_subject_line": "Fix-small-javadoc-problem",
    "commit_notes": "",
    "body": "There is more than one `ImmutableMap.copyOf` method, so `{@link}` needs to specify which one.  RELNOTES=n/a PiperOrigin-RevId: 418050660 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Dec 2021 12:47:28 -0800"
  },
  {
    "commitHash": "89a2e994c84800a37f4db48628fae7ec7fa77bc5",
    "parent": "448e326ee1ea0b45b81945b57af93198620ada53",
    "subject": "Update javadoc of `ImmutableMap.Builder` to reflect `buildKeepingLast()` changes.",
    "sanitized_subject_line": "Update-javadoc-of-ImmutableMap.Builder-to-reflect-buildKeepingLast-changes",
    "commit_notes": "",
    "body": "It is no longer necessarily the case that a `put` of a duplicate key will lead to an exception.  Although `buildKeepingLast()` will usually perform better than the equivalent `LinkedHashMap` + `ImmutableMap.copyOf`, the builder does retain all key/value pairs that were put. So in some cases it may still be preferable to use `LinkedHashMap`.  RELNOTES=n/a PiperOrigin-RevId: 418040612 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 23 Dec 2021 11:38:53 -0800"
  },
  {
    "commitHash": "448e326ee1ea0b45b81945b57af93198620ada53",
    "parent": "a3e411c3a4fa064843071fd70add42a802f9f362",
    "subject": "Add `AbstractScheduledService.Schedule(Duration)`.",
    "sanitized_subject_line": "Add-AbstractScheduledService.Schedule-Duration",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 417651818 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 21 Dec 2021 10:53:28 -0800"
  },
  {
    "commitHash": "a3e411c3a4fa064843071fd70add42a802f9f362",
    "parent": "eb0b0332b9c41c4e8c9b174efa1cec78a6206668",
    "subject": "Remove `@Beta` from the remaining methods in `Comparators`: `min`, `max`, `lexicographical`, `emptiesFirst`, `emptiesLast`, `isInOrder`, `isInStrictOrder`.",
    "sanitized_subject_line": "Remove-Beta-from-the-remaining-methods-in-Comparators-min-max-lexicographical-emptiesFirst-emptiesLast-isInOrder-isInStrictOrder",
    "commit_notes": "",
    "body": "RELNOTES=`collect`: Removed `@Beta` from the remaining methods in `Comparators`: `min`, `max`, `lexicographical`, `emptiesFirst`, `emptiesLast`, `isInOrder`, `isInStrictOrder`. PiperOrigin-RevId: 417399872 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 20 Dec 2021 07:13:17 -0800"
  },
  {
    "commitHash": "eb0b0332b9c41c4e8c9b174efa1cec78a6206668",
    "parent": "b8fd0e6250e55eb57c96172ec2a5bd94430ab50a",
    "subject": "Internal change.",
    "sanitized_subject_line": "Internal-change",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 416878427 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 16 Dec 2021 13:09:40 -0800"
  },
  {
    "commitHash": "b8fd0e6250e55eb57c96172ec2a5bd94430ab50a",
    "parent": "189d668a95803f3121218a63a823f3390bca1489",
    "subject": "Use `ImmutableMap.Builder.buildKeepingLast()` where possible.",
    "sanitized_subject_line": "Use-ImmutableMap.Builder.buildKeepingLast-where-possible",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 416847993 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 16 Dec 2021 10:51:47 -0800"
  },
  {
    "commitHash": "189d668a95803f3121218a63a823f3390bca1489",
    "parent": "8eff3ed0720643e4fec186d2ad40914acf4e8d5d",
    "subject": "Remove `@Beta` from `ExecutionSequencer`, `MoreExecutors.newSequentialExecutor`, and `Monitor`.",
    "sanitized_subject_line": "Remove-Beta-from-ExecutionSequencer-MoreExecutors.newSequentialExecutor-and-Monitor",
    "commit_notes": "",
    "body": "RELNOTES=`util.concurrent`: Removed `@Beta` from `ExecutionSequencer`, `MoreExecutors.newSequentialExecutor`, and `Monitor`. PiperOrigin-RevId: 416833591 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 16 Dec 2021 09:55:00 -0800"
  },
  {
    "commitHash": "8eff3ed0720643e4fec186d2ad40914acf4e8d5d",
    "parent": "75f13f7bcf051229e05f23220c0033da49ef3cd6",
    "subject": "Start with a smaller but faster growing buffer when reading to a byte array",
    "sanitized_subject_line": "Start-with-a-smaller-but-faster-growing-buffer-when-reading-to-a-byte-array",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 416664799 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 15 Dec 2021 15:51:13 -0800"
  },
  {
    "commitHash": "75f13f7bcf051229e05f23220c0033da49ef3cd6",
    "parent": "87d550f3fe7dc22540b1b6dba21179a1b2b92658",
    "subject": "Improve variable name and explanatory comments.",
    "sanitized_subject_line": "Improve-variable-name-and-explanatory-comments",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 416627986 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 15 Dec 2021 13:02:48 -0800"
  },
  {
    "commitHash": "87d550f3fe7dc22540b1b6dba21179a1b2b92658",
    "parent": "825de9a2d00de439eea29112e92b98333d81d670",
    "subject": "Fix a bug in `ImmutableMap.Builder.buildKeepingLast()`.",
    "sanitized_subject_line": "Fix-a-bug-in-ImmutableMap.Builder.buildKeepingLast",
    "commit_notes": "",
    "body": "If we detect a duplicate entry while building the map, we do need to store it in the `entries` array, but we should not update the `table` slot. The under-construction hash table is already correct.  RELNOTES=n/a PiperOrigin-RevId: 416587035 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 15 Dec 2021 10:09:58 -0800"
  },
  {
    "commitHash": "825de9a2d00de439eea29112e92b98333d81d670",
    "parent": "93a8f02f5601178273d0e38be418540f066bd405",
    "subject": "Remove `@Beta` from `Uninterruptibles.awaitTerminationUninterruptibly` and from the `Duration` overloads in the class.",
    "sanitized_subject_line": "Remove-Beta-from-Uninterruptibles.awaitTerminationUninterruptibly-and-from-the-Duration-overloads-in-the-class",
    "commit_notes": "",
    "body": "RELNOTES=`util.concurrent`: Removed `@Beta` from `Uninterruptibles.awaitTerminationUninterruptibly` and from the `Duration` overloads in the class. PiperOrigin-RevId: 416323424 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 14 Dec 2021 09:34:31 -0800"
  },
  {
    "commitHash": "93a8f02f5601178273d0e38be418540f066bd405",
    "parent": "261ac7afbf04dce2bd7e20a2085338e1f9a857d8",
    "subject": "Remove `@Beta` from a number of `com.google.common.testing` classes.",
    "sanitized_subject_line": "Remove-Beta-from-a-number-of-com.google.common.testing-classes",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3452  RELNOTES=Several classes in `com.google.common.testing` that were previously marked `@Beta` are now fully supported. PiperOrigin-RevId: 416320108 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 14 Dec 2021 09:19:05 -0800"
  },
  {
    "commitHash": "261ac7afbf04dce2bd7e20a2085338e1f9a857d8",
    "parent": "8b4ad17dcf17aa488b46070fa7aa7fabb8e65ad6",
    "subject": "De-beta APIs in com.google.common.net",
    "sanitized_subject_line": "De-beta-APIs-in-com.google.common.net",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/3052 Fixes https://github.com/google/guava/issues/3414 Fixes https://github.com/google/guava/issues/3417 Fixes https://github.com/google/guava/issues/3423  RELNOTES=`net`: Removed `@Beta` from APIs in net. PiperOrigin-RevId: 416312524 ",
    "author_name": "Alan Malloy",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 14 Dec 2021 08:40:14 -0800"
  },
  {
    "commitHash": "8b4ad17dcf17aa488b46070fa7aa7fabb8e65ad6",
    "parent": "e0151728478c16e3fe295a368ba74c2195a10e85",
    "subject": "Remove `@Beta` from `AsyncCallable`, `ListenableScheduledFuture`, and `ClosingFuture`.",
    "sanitized_subject_line": "Remove-Beta-from-AsyncCallable-ListenableScheduledFuture-and-ClosingFuture",
    "commit_notes": "",
    "body": "The former two are simple interfaces. `ClosingFuture` was meant to be `@Beta` for only one release :)  `ListenableScheduledFuture` was particularly silly to have as `@Beta` because it's the return type of `ListeningScheduledExecutorService`, from which we'd already removed `@Beta`.  `AsyncCallable` makes extra sense to remove from `@Beta` at the same time as `Futures.submit`, `submitAsync`, and `scheduleAsync` (CL 416093023).  RELNOTES=`util.concurrent`: Removed `@Beta` from `AsyncCallable`, `ListenableScheduledFuture`, and `ClosingFuture`. PiperOrigin-RevId: 416302588 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 14 Dec 2021 07:53:12 -0800"
  },
  {
    "commitHash": "e0151728478c16e3fe295a368ba74c2195a10e85",
    "parent": "9c7e13b5d4446fd5d0deba9b4b8c21e6d745c11b",
    "subject": "Remove `@Beta` from uncontroversial `Futures` methods:",
    "sanitized_subject_line": "Remove-Beta-from-uncontroversial-Futures-methods",
    "commit_notes": "",
    "body": "- `submit` - `submitAsync` - `scheduleAsync` - `nonCancellationPropagating` - `inCompletionOrder`  I did also add a TODO to potentially make the return type of `scheduleAsync` more specific in the future. However, to the best of my knowledge, no one has ever asked for this. (That's not surprising: `ScheduledFuture` isn't any more useful than `Future` unless you're implementing a `ScheduledExecutorService`, and even then, access to its timeout is unavoidably racy.) Plus, should we ever need to do it, we can do it compatibly by injecting a bridge method with the old signature.  (I didn't see any discussion of the return type in the API Review doc or the CL review thread. It probably just didn't come up, or maybe we all independently concluded that it wasn't worth the trouble, given that `MoreExecutors.listeningDecorator(ScheduledExecutorService)` is a bit of a pain? But I'm guessing `scheduleAsync` would be easier.)  RELNOTES=`util.concurrent`: Removed `@Beta` from `Futures` methods: `submit`, `submitAsync`, `scheduleAsync`, `nonCancellationPropagating`, `inCompletionOrder`. PiperOrigin-RevId: 416139691 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 13 Dec 2021 14:51:48 -0800"
  },
  {
    "commitHash": "9c7e13b5d4446fd5d0deba9b4b8c21e6d745c11b",
    "parent": "68500b2c09fa6985eab2e41577e2992685b57f2b",
    "subject": "Remove `@Beta` from the `FluentFuture` type, its factory methods, and `addCallback`.",
    "sanitized_subject_line": "Remove-Beta-from-the-FluentFuture-type-its-factory-methods-and-addCallback",
    "commit_notes": "",
    "body": "This leaves `@Beta` only for the methods that remain `@Beta` in `Futures` itself, which I'm hoping to make some effort toward later this week.  This CL is an admission that we're never going to get around to reworking `FluentFuture` to be more of a \"builder,\" as discussed in https://github.com/google/guava/issues/3419. Maybe there's still a place for something more builder-like, but there's no chance that we'll try to change `FluentFuture` in place. And probably we'll never do anything.  RELNOTES=`util.concurrent`: Removed `@Beta` from the `FluentFuture` type, its factory methods, and `addCallback`. PiperOrigin-RevId: 416122526 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 13 Dec 2021 13:41:47 -0800"
  },
  {
    "commitHash": "68500b2c09fa6985eab2e41577e2992685b57f2b",
    "parent": "c98868c646ff767848feb77e3bd5d62d938bdace",
    "subject": "Introduce `ImmutableMap.Builder.buildKeepingLast`.",
    "sanitized_subject_line": "Introduce-ImmutableMap.Builder.buildKeepingLast",
    "commit_notes": "",
    "body": "This method is the same as the existing `.buildOrThrow` method, except when the same key appears more than once. In that case `buildOrThrow` throws an exception, while `buildKeepingLast` uses the last value that was associated with the key.  Relnotes:   * A new method `ImmutableMap.Builder.buildKeepingLast()` keeps the last value for any given key rather than throwing an exception when a key appears more than once.   * As a side-effect of the `buildKeepingLast()` change, the idiom `ImmutableList.copyOf(Maps.transformValues(map, function))` may produce different results if `function` has side-effects. (This is not recommended.) PiperOrigin-RevId: 416035210 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 13 Dec 2021 07:18:39 -0800"
  },
  {
    "commitHash": "c98868c646ff767848feb77e3bd5d62d938bdace",
    "parent": "8652b459f15d2b0a0514158644aec3366e57011f",
    "subject": "Refine examples for mapWithIndex.",
    "sanitized_subject_line": "Refine-examples-for-mapWithIndex",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/5793  RELNOTES=n/a PiperOrigin-RevId: 415104694 ",
    "author_name": "=?UTF-8?q?=E5=BA=84=E5=A4=A9=E7=BF=BC?=",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 8 Dec 2021 14:58:47 -0800"
  },
  {
    "commitHash": "8652b459f15d2b0a0514158644aec3366e57011f",
    "parent": "9d690928acb69b6158bde3371c66445c861f5b7c",
    "subject": "Bump actions/cache from 2.1.6 to 2.1.7",
    "sanitized_subject_line": "Bump-actions-cache-from-2.1.6-to-2.1.7",
    "commit_notes": "",
    "body": "Fixes #5788  RELNOTES=n/a PiperOrigin-RevId: 414547550 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 6 Dec 2021 14:54:08 -0800"
  },
  {
    "commitHash": "9d690928acb69b6158bde3371c66445c861f5b7c",
    "parent": "fb306ecff6efbfbe3e0e4ea1ea1d30aad4b0a44e",
    "subject": "Fix -Wbitwise-instead-of-logical warnings.",
    "sanitized_subject_line": "Fix-Wbitwise-instead-of-logical-warnings",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 414465058 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 6 Dec 2021 09:34:43 -0800"
  },
  {
    "commitHash": "fb306ecff6efbfbe3e0e4ea1ea1d30aad4b0a44e",
    "parent": "3072f4fe6dd57678886ba800efc9da4667abc366",
    "subject": "Include all services in ServiceManager.startAsync exception message",
    "sanitized_subject_line": "Include-all-services-in-ServiceManager.startAsync-exception-message",
    "commit_notes": "",
    "body": "RELNOTES=Include all services in ServiceManager.startAsync exception message PiperOrigin-RevId: 414199967 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Sat, 4 Dec 2021 18:18:54 -0800"
  },
  {
    "commitHash": "3072f4fe6dd57678886ba800efc9da4667abc366",
    "parent": "a197d99b96d69ea75a2c4a15ecd8a730dd3270d6",
    "subject": "Fix Javadoc search on JDK 11:",
    "sanitized_subject_line": "Fix-Javadoc-search-on-JDK-11",
    "commit_notes": "",
    "body": "Fixed Javadoc search feature on JDK 11, which is currently used in our scripts updating snapshot Javadocs on guava.dev and building Guava releases, by adding `no-module-directories` flag.  This option is not present in javadoc tool from JDK 8 and 13+, hence we use profiles to conditionally pass this flag on 9-12 only.  Note that on JDK 17 javadoc generation does not work, as it seems to have changed the warning on LVTI usage in sources to an error.  Fixes #5457 Fixes #5800  RELNOTES=n/a PiperOrigin-RevId: 413934851 ",
    "author_name": "Dmitry Timofeev",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 3 Dec 2021 07:53:21 -0800"
  },
  {
    "commitHash": "a197d99b96d69ea75a2c4a15ecd8a730dd3270d6",
    "parent": "9635e5d949a3c9ccc26610b72e0860e082b59eab",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 413462427 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 1 Dec 2021 11:12:53 -0800"
  },
  {
    "commitHash": "9635e5d949a3c9ccc26610b72e0860e082b59eab",
    "parent": "e64ad2634216a3bb8e2beeb26d673f72d24e293a",
    "subject": "Fix small style issues.",
    "sanitized_subject_line": "Fix-small-style-issues",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/issues/5795.  RELNOTES=n/a PiperOrigin-RevId: 413459594 ",
    "author_name": "David P. Baker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 1 Dec 2021 11:03:27 -0800"
  },
  {
    "commitHash": "e64ad2634216a3bb8e2beeb26d673f72d24e293a",
    "parent": "2d875d327ad74cbde5a6f18fbf85724bfbb5c47a",
    "subject": "Attempt `casValue` CAS in a loop.",
    "sanitized_subject_line": "Attempt-casValue-CAS-in-a-loop",
    "commit_notes": "",
    "body": "This shouldn't be necessary, but we're seeing some evidence that it may help with a mysterious bug.  (I considered renaming the other `cas*` methods (in which I did not add a loop) to \"`weakCas*`\" to emphasize that _they_ might fail spuriously. But it's hard to imagine how we could ever rewrite their callers to _not_ use a loop, so I don't think we'd be protecting ourselves from any mistakes. Plus, \"weak CAS\" carries additional meaning (specifically, lack of ordering guarantees) that may or may not be appropriate here. And anyway, we hope that this is all a short-term hack.)  RELNOTES=n/a PiperOrigin-RevId: 413130485 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 30 Nov 2021 06:13:18 -0800"
  },
  {
    "commitHash": "2d875d327ad74cbde5a6f18fbf85724bfbb5c47a",
    "parent": "bdb43e625ac0d6078a67e7d11b8b12ccfd0e85ac",
    "subject": "Implemented the following methods for `AtomicDouble` and `AtomicDoubleArray`:",
    "sanitized_subject_line": "Implemented-the-following-methods-for",
    "commit_notes": "",
    "body": "* `accumulateAndGet` * `getAndAccumulate` * `updateAndGet` * `getAndUpdate`  Closes https://github.com/google/guava/pull/5784. Fixes https://github.com/google/guava/issues/5742.  RELNOTES=Implement accumulate/update methods for `AtomicDouble` and `AtomicDoubleArray`. PiperOrigin-RevId: 412110543 ",
    "author_name": "Allan H",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 24 Nov 2021 12:11:34 -0800"
  },
  {
    "commitHash": "bdb43e625ac0d6078a67e7d11b8b12ccfd0e85ac",
    "parent": "5adafee2797e102c53ae1982e1a3130e9d773bf7",
    "subject": "Use getAndSet from Unsafe and ARFU when tombstoning listeners and waiters fields",
    "sanitized_subject_line": "Use-getAndSet-from-Unsafe-and-ARFU-when-tombstoning-listeners-and-waiters-fields",
    "commit_notes": "",
    "body": "This should allow use of just one xchg on x86 and swp on arm. On architectures where this intrinsic is implemented, this makes completing a future wait-free.  RELNOTES=n/a PiperOrigin-RevId: 412104471 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 24 Nov 2021 11:43:57 -0800"
  },
  {
    "commitHash": "5adafee2797e102c53ae1982e1a3130e9d773bf7",
    "parent": "943b7066942e0609212d2987eb957e6f14f3237a",
    "subject": "Use Truth for better failure messages in map assertions (again).",
    "sanitized_subject_line": "Use-Truth-for-better-failure-messages-in-map-assertions-again",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 412061510 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 24 Nov 2021 08:10:49 -0800"
  },
  {
    "commitHash": "943b7066942e0609212d2987eb957e6f14f3237a",
    "parent": "123c9a771342dde5c908d65c69033403a6514f04",
    "subject": "Use the new `buildOrThrow()` instead of `build()` in `ImmutableMapTest`.",
    "sanitized_subject_line": "Use-the-new-buildOrThrow-instead-of-build-in-ImmutableMapTest",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 411675632 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 22 Nov 2021 16:37:03 -0800"
  },
  {
    "commitHash": "123c9a771342dde5c908d65c69033403a6514f04",
    "parent": "01890d99fcc9b2a6a2190c25e6bc38482cd3fde2",
    "subject": "Use Truth for better failure messages in map assertions.",
    "sanitized_subject_line": "Use-Truth-for-better-failure-messages-in-map-assertions",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 411621730 ",
    "author_name": "Éamonn McManus",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 22 Nov 2021 12:31:16 -0800"
  },
  {
    "commitHash": "01890d99fcc9b2a6a2190c25e6bc38482cd3fde2",
    "parent": "a2bbcc3bc2b4f94666d99a98a31445b8fbd1e152",
    "subject": "Elaborate on comment in AggregateFuture.addInitialException.",
    "sanitized_subject_line": "Elaborate-on-comment-in-AggregateFuture.addInitialException",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 410535636 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 17 Nov 2021 08:33:00 -0800"
  },
  {
    "commitHash": "a2bbcc3bc2b4f94666d99a98a31445b8fbd1e152",
    "parent": "922cde05ff9f2749822385a403b0277fbea96650",
    "subject": "Update deprecated `CharMatcher.invisible()` to match ICU 70/Unicode 14.",
    "sanitized_subject_line": "Update-deprecated-CharMatcher.invisible-to-match-ICU-70-Unicode-14",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 409483439 ",
    "author_name": "Colin Decker",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 12 Nov 2021 13:08:18 -0800"
  },
  {
    "commitHash": "922cde05ff9f2749822385a403b0277fbea96650",
    "parent": "6e5e1a47b0f0187c8d865de6443ea06c7f8a6dfa",
    "subject": "Remove docs that say that parameters are non-null by default.",
    "sanitized_subject_line": "Remove-docs-that-say-that-parameters-are-non-null-by-default",
    "commit_notes": "",
    "body": "This is our general policy, so it's misleading to mention it only in these two classes.  RELNOTES=n/a PiperOrigin-RevId: 409192741 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 11 Nov 2021 11:07:17 -0800"
  },
  {
    "commitHash": "6e5e1a47b0f0187c8d865de6443ea06c7f8a6dfa",
    "parent": "5e2bbfa9bd4b9cc8d6d23783af2e5f533b007665",
    "subject": "Documented that ExecutionSequencer tasks execute in happens-before order, matching the description used in newSequentialExecutor()'s Javadoc. Updated the description to more completely specify what that order is.",
    "sanitized_subject_line": "Documented-that-ExecutionSequencer-tasks-execute-in-happens-before-order-matching-the-description-used-in-newSequentialExecutor-s-Javadoc.-Updated-the-description-to-more-completely-specify-what-that-order-is",
    "commit_notes": "",
    "body": "RELNOTES=Documented that ExecutionSequencer tasks execute in happens-before order. PiperOrigin-RevId: 408666760 ",
    "author_name": "yorick",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 9 Nov 2021 11:53:26 -0800"
  },
  {
    "commitHash": "5e2bbfa9bd4b9cc8d6d23783af2e5f533b007665",
    "parent": "de5d81dcba4088436e8f2044de8ee0b12634f28e",
    "subject": "Bump actions/checkout from 2.3.5 to 2.4.0.",
    "sanitized_subject_line": "Bump-actions-checkout-from-2.3.5-to-2.4.0",
    "commit_notes": "",
    "body": "Closes #5772  RELNOTES=n/a PiperOrigin-RevId: 407945788 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 5 Nov 2021 17:15:09 -0700"
  },
  {
    "commitHash": "de5d81dcba4088436e8f2044de8ee0b12634f28e",
    "parent": "9830997ec9676dcf794369da9b8b20b8162caa60",
    "subject": "Improve tests.",
    "sanitized_subject_line": "Improve-tests",
    "commit_notes": "",
    "body": "Fixes https://github.com/google/guava/pull/5761  RELNOTES=n/a PiperOrigin-RevId: 407670094 ",
    "author_name": "Marcono1234",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 4 Nov 2021 14:27:52 -0700"
  },
  {
    "commitHash": "9830997ec9676dcf794369da9b8b20b8162caa60",
    "parent": "cf09c7606829b9f7956ab27ae0cf7c849ffa6f4e",
    "subject": "Document `@ParametricNullness` better.",
    "sanitized_subject_line": "Document-ParametricNullness-better",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 407317240 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 3 Nov 2021 06:03:58 -0700"
  },
  {
    "commitHash": "cf09c7606829b9f7956ab27ae0cf7c849ffa6f4e",
    "parent": "354d78c6331cce5faae68275f81638f1894e0da8",
    "subject": "internal change",
    "sanitized_subject_line": "internal-change",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 405936650 ",
    "author_name": "Kurt Alfred Kluever",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 27 Oct 2021 11:33:27 -0700"
  },
  {
    "commitHash": "354d78c6331cce5faae68275f81638f1894e0da8",
    "parent": "49fb399cbb85892a38272bd62f191984edafd803",
    "subject": "Range.intersect() with a disconnected range deserves a less confusing exception message",
    "sanitized_subject_line": "Range.intersect-with-a-disconnected-range-deserves-a-less-confusing-exception-message",
    "commit_notes": "",
    "body": "RELNOTES=very minor improvement to Range.intersect() exception message PiperOrigin-RevId: 404021898 ",
    "author_name": "kevinb",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 18 Oct 2021 12:03:10 -0700"
  },
  {
    "commitHash": "49fb399cbb85892a38272bd62f191984edafd803",
    "parent": "ba690ba164412b27dbded0904bd297adf727f8ab",
    "subject": "Bump actions/checkout from 2.3.4 to 2.3.5.",
    "sanitized_subject_line": "Bump-actions-checkout-from-2.3.4-to-2.3.5",
    "commit_notes": "",
    "body": "Closes #5757  RELNOTES=n/a PiperOrigin-RevId: 404006498 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Mon, 18 Oct 2021 11:06:24 -0700"
  },
  {
    "commitHash": "ba690ba164412b27dbded0904bd297adf727f8ab",
    "parent": "a43836125964e2be3119dced82b8bab466f278d1",
    "subject": "Document the danger of passing an enormous size to `partition`.",
    "sanitized_subject_line": "Document-the-danger-of-passing-an-enormous-size-to-partition",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 403107057 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 14 Oct 2021 09:01:38 -0700"
  },
  {
    "commitHash": "a43836125964e2be3119dced82b8bab466f278d1",
    "parent": "3b3687c8a417288798b31e8464c3a5c8bbc96077",
    "subject": "Update Public Suffix data.",
    "sanitized_subject_line": "Update-Public-Suffix-data",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 401822976 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 8 Oct 2021 11:59:44 -0700"
  },
  {
    "commitHash": "3b3687c8a417288798b31e8464c3a5c8bbc96077",
    "parent": "0004ab7eb29786cc4131b255476e88b33f6c7ed2",
    "subject": "Suppress new findings for DoNotCall.",
    "sanitized_subject_line": "Suppress-new-findings-for-DoNotCall",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 401537101 ",
    "author_name": "Google Java Core Libraries",
    "commiter_name": "Google Java Core Libraries",
    "date": "Thu, 7 Oct 2021 09:53:14 -0700"
  },
  {
    "commitHash": "0004ab7eb29786cc4131b255476e88b33f6c7ed2",
    "parent": "560a57f15a66879f24107ffa51a94f4f4fef5c3a",
    "subject": "Optimize ImmutableMap.Builder construction pathway",
    "sanitized_subject_line": "Optimize-ImmutableMap.Builder-construction-pathway",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 401303639 ",
    "author_name": "lowasser",
    "commiter_name": "Google Java Core Libraries",
    "date": "Wed, 6 Oct 2021 12:00:03 -0700"
  },
  {
    "commitHash": "560a57f15a66879f24107ffa51a94f4f4fef5c3a",
    "parent": "8075df7ffd63b4b96cd0bdfdc2dde71d08f672c9",
    "subject": "Remove some unnecessary `final` keywords.",
    "sanitized_subject_line": "Remove-some-unnecessary-final-keywords",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 401113356 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Tue, 5 Oct 2021 17:47:57 -0700"
  },
  {
    "commitHash": "8075df7ffd63b4b96cd0bdfdc2dde71d08f672c9",
    "parent": "46093e2517b4f49c019ecff6dbe90cc22e8003b5",
    "subject": "Use some diamond operators.",
    "sanitized_subject_line": "Use-some-diamond-operators",
    "commit_notes": "",
    "body": "PiperOrigin-RevId: 400232329 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 1 Oct 2021 10:18:04 -0700"
  },
  {
    "commitHash": "46093e2517b4f49c019ecff6dbe90cc22e8003b5",
    "parent": "64261b3826ea88e0f008efeed5441bce14642a72",
    "subject": "Use lambdas sometimes.",
    "sanitized_subject_line": "Use-lambdas-sometimes",
    "commit_notes": "",
    "body": "RELNOTES=n/a PiperOrigin-RevId: 400213615 ",
    "author_name": "cpovirk",
    "commiter_name": "Google Java Core Libraries",
    "date": "Fri, 1 Oct 2021 09:02:17 -0700"
  }
]
